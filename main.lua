local a=game.Players.LocalPlayer;local b=a:WaitForChild("PlayerGui")local c=game:GetService("TweenService")local d=game:GetService("RunService")local e=game:GetService("UserInputService")local f={["COLOR_HEX_MAP"]={["ad-red"]="#D92B3F",["ad-red-between"]="#AE1739",["ad-red-dark"]="#9A0E32",["ad-red-highlight"]="#F24F4F",["ad-blue"]="#2197F2",["ad-blue-between"]="#1E89E4",["ad-blue-dark"]="#1977D3",["ad-blue-highlight"]="#64B5F6",["ad-green"]="#4BC654",["ad-green-between"]="#2AA544",["ad-green-dark"]="#208C35",["ad-green-highlight"]="#8BD864",["ad-purple"]="#7E01FE",["ad-purple-between"]="#6E00E1",["ad-purple-dark"]="#6001C4",["ad-purple-highlight"]="#8F2FF1",["ad-gray"]="#444547",["ad-gray-between"]="#323332",["ad-gray-dark"]="#1A1A1A",["ad-gray-highlight"]="#64686C",["ad-honey"]="#F7921F",["ad-honey-between"]="#EF733D",["ad-honey-dark"]="#E1621A",["ad-honey-highlight"]="#FBB03B"},["button"]={["primary"]={["ad-red"]={["Backing"]={["Left"]="ad-red",["Center"]="ad-red-between",["Right"]="ad-red-dark"},["Face"]={["Main"]="ad-red-highlight",["Coloring"]="ad-red",["Cornering"]="ad-red"}},["ad-blue"]={["Backing"]={["Left"]="ad-blue",["Center"]="ad-blue-between",["Right"]="ad-blue-dark"},["Face"]={["Main"]="ad-blue-highlight",["Coloring"]="ad-blue",["Cornering"]="ad-blue"}},["ad-green"]={["Backing"]={["Left"]="ad-green",["Center"]="ad-green-between",["Right"]="ad-green-dark"},["Face"]={["Main"]="ad-green-highlight",["Coloring"]="ad-green",["Cornering"]="ad-green"}},["ad-purple"]={["Backing"]={["Left"]="ad-purple",["Center"]="ad-purple-between",["Right"]="ad-purple-dark"},["Face"]={["Main"]="ad-purple-highlight",["Coloring"]="ad-purple",["Cornering"]="ad-purple"}},["ad-gray"]={["Backing"]={["Left"]="ad-gray",["Center"]="ad-gray-between",["Right"]="ad-gray-dark"},["Face"]={["Main"]="ad-gray-highlight",["Coloring"]="ad-gray",["Cornering"]="ad-gray"}},["ad-honey"]={["Backing"]={["Left"]="ad-honey",["Center"]="ad-honey-between",["Right"]="ad-honey-dark"},["Face"]={["Main"]="ad-honey-highlight",["Coloring"]="ad-honey",["Cornering"]="ad-honey"}}},["secondary"]={["ad-red"]={["Backing"]="ad-red-dark",["Face"]="ad-red"},["ad-blue"]={["Backing"]="ad-blue-dark",["Face"]="ad-blue"},["ad-green"]={["Backing"]="ad-green-dark",["Face"]="ad-green"},["ad-purple"]={["Backing"]="ad-purple-dark",["Face"]="ad-purple"},["ad-gray"]={["Backing"]="ad-gray-dark",["Face"]="ad-gray"},["ad-honey"]={["Backing"]="ad-honey-dark",["Face"]="ad-honey"}}},["button-toggle"]={["primary"]={["ad-red"]={["Backing"]={["Left"]="ad-red",["Center"]="ad-red-between",["Right"]="ad-red-dark"},["Face"]={["Main"]="ad-red-highlight",["Coloring"]="ad-red",["Cornering"]="ad-red"}},["ad-blue"]={["Backing"]={["Left"]="ad-blue",["Center"]="ad-blue-between",["Right"]="ad-blue-dark"},["Face"]={["Main"]="ad-blue-highlight",["Coloring"]="ad-blue",["Cornering"]="ad-blue"}},["ad-green"]={["Backing"]={["Left"]="ad-green",["Center"]="ad-green-between",["Right"]="ad-green-dark"},["Face"]={["Main"]="ad-green-highlight",["Coloring"]="ad-green",["Cornering"]="ad-green"}},["ad-purple"]={["Backing"]={["Left"]="ad-purple",["Center"]="ad-purple-between",["Right"]="ad-purple-dark"},["Face"]={["Main"]="ad-purple-highlight",["Coloring"]="ad-purple",["Cornering"]="ad-purple"}},["ad-gray"]={["Backing"]={["Left"]="ad-gray",["Center"]="ad-gray-between",["Right"]="ad-gray-dark"},["Face"]={["Main"]="ad-gray-highlight",["Coloring"]="ad-gray",["Cornering"]="ad-gray"}},["ad-honey"]={["Backing"]={["Left"]="ad-honey",["Center"]="ad-honey-between",["Right"]="ad-honey-dark"},["Face"]={["Main"]="ad-honey-highlight",["Coloring"]="ad-honey",["Cornering"]="ad-honey"}}}},["toggle"]={["ad-red"]={["Track"]="ad-red",["Handle"]="ad-red"},["ad-blue"]={["Track"]="ad-blue",["Handle"]="ad-blue"},["ad-green"]={["Track"]="ad-green",["Handle"]="ad-green"},["ad-purple"]={["Track"]="ad-purple",["Handle"]="ad-purple"},["ad-gray"]={["Track"]="ad-gray",["Handle"]="ad-gray"},["ad-honey"]={["Track"]="ad-honey",["Handle"]="ad-honey"}},["dropdown"]={["ad-red"]={["InteractionButton"]="ad-red",["Scrollbar"]="ad-red",["Darken"]="ad-red-between"},["ad-blue"]={["InteractionButton"]="ad-blue",["Scrollbar"]="ad-blue",["Darken"]="ad-blue-between"},["ad-green"]={["InteractionButton"]="ad-green",["Scrollbar"]="ad-green",["Darken"]="ad-green-between"},["ad-purple"]={["InteractionButton"]="ad-purple",["Scrollbar"]="ad-purple",["Darken"]="ad-purple-between"},["ad-gray"]={["InteractionButton"]="ad-gray",["Scrollbar"]="ad-gray",["Darken"]="ad-gray-between"},["ad-honey"]={["InteractionButton"]="ad-honey",["Scrollbar"]="ad-honey",["Darken"]="ad-honey-between"}},["slider"]={["ad-red"]={["Bar"]="ad-red",["Handle"]="ad-red"},["ad-blue"]={["Bar"]="ad-blue",["Handle"]="ad-blue"},["ad-green"]={["Bar"]="ad-green",["Handle"]="ad-green"},["ad-purple"]={["Bar"]="ad-purple",["Handle"]="ad-purple"},["ad-gray"]={["Bar"]="ad-gray",["Handle"]="ad-gray"},["ad-honey"]={["Bar"]="ad-honey",["Handle"]="ad-honey"}},["input"]={["ad-red"]={["Border"]="ad-red"},["ad-blue"]={["Border"]="ad-blue"},["ad-green"]={["Border"]="ad-green"},["ad-purple"]={["Border"]="ad-purple"},["ad-gray"]={["Border"]="ad-gray"},["ad-honey"]={["Border"]="ad-honey"}},["section"]={},["container"]={},["divider"]={},["header"]={["ad-red"]={["Track"]="ad-red",["Handle"]="ad-red"},["ad-blue"]={["Track"]="ad-blue",["Handle"]="ad-blue"},["ad-green"]={["Track"]="ad-green",["Handle"]="ad-green"},["ad-purple"]={["Track"]="ad-purple",["Handle"]="ad-purple"},["ad-gray"]={["Track"]="ad-gray",["Handle"]="ad-gray"},["ad-honey"]={["Track"]="ad-honey",["Handle"]="ad-honey"}},["sub-header"]={},["paragraph"]={},["footer"]={},["silly-icon"]={},["version-note"]={}}local g={["Components"]={["button"]={["primary"]=false,["secondary"]=false},["button-toggle"]={["split"]=false,["double-split"]=false,["triple-split"]=false},["toggle"]=false,["dropdown"]=false,["slider"]=false,["input"]=false,["section"]=false,["container"]={["primary"]=false,["two-column"]=false,["three-column"]=false,["four-column"]=false},["divider"]=false,["header"]=false,["sub-header"]=false,["paragraph"]=false,["footer"]=false,["silly-icon"]=false,["version-note"]=false},["Initialized"]=false}local function h(i)assert(typeof(i)=="string",string.format("GetColor3 - `%s` must be a string. Got %s.",i,typeof(i)))local j=f["COLOR_HEX_MAP"][i]if not j then warn("GetColor3: Invalid color name provided:",i)return nil end;return Color3.fromHex(j)end;function g:Init(k)assert(typeof(k)=="Instance"and k:IsA("GuiObject"),string.format("ComponentManager:Init - `Frame` parameter must be a GuiObject Instance. Got %s.",typeof(k)))assert(k.Body,"ComponentManager:Init - `Frame.Body` not found.")assert(typeof(k.Body)=="Instance",string.format("ComponentManager:Init - `Frame.Body` is not an Instance. Got %s.",typeof(k.Body)))assert(k.Body.ScrollComplex,"ComponentManager:Init - `Frame.Body.ScrollComplex` not found.")assert(typeof(k.Body.ScrollComplex)=="Instance",string.format("ComponentManager:Init - `Frame.Body.ScrollComplex` is not an Instance. Got %s.",typeof(k.Body.ScrollComplex)))local l=k.Body.ScrollComplex:WaitForChild("ScrollingFrame")assert(l,"ComponentManager:Init - `ScrollingFrame` not found in `Frame.Body.ScrollComplex`.")assert(typeof(l)=="Instance",string.format("ComponentManager:Init - `ScrollingFrame` is not an Instance. Got %s.",typeof(l)))for m,n in l:GetDescendants()do if not n:GetAttribute("exclude")then local o=n:GetAttribute("component_type")if o then if self["Components"][o]~=nil then if typeof(self["Components"][o])=="table"then local p=n:GetAttribute("sub_type")if p then self["Components"][o][p]=n;n.Visible=false end else self["Components"][o]=n end end end end end;assert(k.Body.Categories,"ComponentManager:Init - `Frame.Body.Categories` not found.")assert(typeof(k.Body.Categories)=="Instance",string.format("ComponentManager:Init - `Frame.Body.Categories` is not an Instance. Got %s.",typeof(k.Body.Categories)))local q=k.Body.Categories:FindFirstChild("Templates")if q then q:Destroy()end;self["Components"]["silly-icon"]=k:WaitForChild("Header",5):WaitForChild("silly-icon",5)self["Components"]["version-note"]=k:WaitForChild("Header",5):WaitForChild("silly-icon",5)self:InitializeSillyIcon()self["Initialized"]=true end;local function r(s,p,t)assert(typeof(s)=="Instance"and s:IsA("GuiObject"),string.format("ValidateObjectSubType - `Object` must be a GuiObject Instance. Got %s.",typeof(s)))assert(typeof(p)=="string",string.format("ValidateObjectSubType - `SubType` must be a string. Got %s.",typeof(p)))assert(typeof(t)=="string",string.format("ValidateObjectSubType - `Warning` must be a string. Got %s.",typeof(t)))if s:GetAttribute("sub_type")~=p then warn(t)return end;return true end;function g:NewButton(u,v)assert(typeof(u)=="table",string.format("ComponentManager:NewButton - `Properties` parameter must be a table. Got %s.",typeof(u)))if v then assert(typeof(v)=="function",string.format("ComponentManager:NewButton - `Callback` parameter must be a function. Got %s.",typeof(v)))end;local w=u or{}local p=w["sub_type"]or"primary"assert(typeof(p)=="string",string.format("ComponentManager:NewButton - `Properties.sub_type` must be a string. Got %s.",typeof(p)))local x=w["color_variant"]or"ad-green"assert(typeof(x)=="string",string.format("ComponentManager:NewButton - `Properties.color_variant` must be a string. Got %s.",typeof(x)))local y=w["text"]if y then assert(typeof(y)=="string",string.format("ComponentManager:NewButton - `Properties.text` must be a string if provided. Got %s.",typeof(y)))end;local z=w["icon"]if z then assert(typeof(z)=="string",string.format("ComponentManager:NewButton - `Properties.icon` must be a string if provided. Got %s.",typeof(z)))end;local A=w["disabled"]or false;local B=nil;assert(self["Components"],"ComponentManager:NewButton - `self.Components` is nil. Was ComponentManager initialized?")assert(self["Components"]["button"],"ComponentManager:NewButton - `self.Components.button` is nil.")assert(typeof(self["Components"]["button"])=="table",string.format("ComponentManager:NewButton - `self.Components.button` is not a table. Got %s.",typeof(self["Components"]["button"])))if self["Components"]and self["Components"]["button"]and self["Components"]["button"][p]then B=self["Components"]["button"][p]end;assert(B,string.format("ComponentManager:NewButton - No button template found for `sub_type`: `%s`.",p))assert(typeof(B)=="Instance",string.format("ComponentManager:NewButton - Button template for `sub_type`: `%s` is not an Instance. Got %s.",p,typeof(B)))local C=B:Clone()assert(C,string.format("ComponentManager:NewButton - Failed to clone button template for `sub_type`: `%s`.",p))C.Visible=true;C:SetAttribute("color_variant",x)C:SetAttribute("IsPressed",false)if C:FindFirstChild("Face")and C.Face:FindFirstChild("Display")then local D=C.Face.Display;local E=D:FindFirstChild("Title")local F=D:FindFirstChild("Icon")if E then assert(typeof(E)=="Instance",string.format("ComponentManager:NewButton (sub_type: %s) - `Face.Display.Title` is not an Instance. Got %s.",p,typeof(E)))if y and y~=""then E.Text=y else E:Destroy()end elseif y and y~=""then warn(string.format("ComponentManager:NewButton (sub_type: %s) - `Properties.text` (`%s`) was provided, but no `Title` object found in template.",p,y))end;if F then assert(typeof(F)=="Instance",string.format("ComponentManager:NewButton (sub_type: %s) - `Face.Display.Icon` is not an Instance. Got %s.",p,typeof(F)))if z and z~=""then F.Image=z;F.Visible=true else F:Destroy()end elseif z and z~=""then warn(string.format("ComponentManager:NewButton (sub_type: %s) - `Properties.icon` (`%s`) was provided, but no `Icon` object found in template.",p,z))end end;local G={["component_type"]="button",["sub_type"]=p,["Text"]=y,["Icon"]=z,["IsDisabled"]=A,["__IsVisuallySuppressedByParent"]=false,["__Object"]=C,["__Callback"]=v,["__OriginalColorVariant"]=x,["__OriginalFacePosition"]=nil,["__PressedFacePosition"]=nil,["__AnimateFace"]=function(self,H)end,["SetColorVariant"]=function(self,I)assert(typeof(I)=="string",string.format("ButtonObject:SetColorVariant - `Variant` must be a string. Got %s.",typeof(I)))assert(self.__Object,"ButtonObject:SetColorVariant - `self.__Object` is nil.")assert(typeof(self.__Object)=="Instance",string.format("ButtonObject:SetColorVariant - `self.__Object` is not an Instance. Got %s.",typeof(self.__Object)))self.__Object:SetAttribute("color_variant",I)local J=self.__Object:GetAttribute("sub_type")assert(J,string.format("ButtonObject:SetColorVariant - `self.__Object` (`%s`) is missing `sub_type` attribute.",self.__Object.Name))assert(typeof(J)=="string",string.format("ButtonObject:SetColorVariant - `self.__Object` (`%s`) attribute `sub_type` is not a string. Got %s.",self.__Object.Name,typeof(J)))assert(f["button"],"ButtonObject:SetColorVariant - `ColorMap.button` is nil.")local K=f["button"][J]local L=K and K[I]if not L then warn(string.format("ButtonObject:SetColorVariant - No variant map found for sub_type `%s` and variant `%s` for object `%s`.",J,I,self.__Object.Name))return end;if J=="secondary"then assert(self.__Object:IsA("Frame")or self.__Object:IsA("GuiObject"),string.format("ButtonObject:SetColorVariant (secondary) - `self.__Object` is not a Frame or GuiObject. Got %s.",typeof(self.__Object)))local M=self.__Object:FindFirstChild("Backing")assert(M,string.format("ButtonObject:SetColorVariant (secondary) - `self.__Object.Backing` not found for `%s`.",self.__Object.Name))assert(typeof(M)=="Instance"and M:IsA("GuiObject"),string.format("ButtonObject:SetColorVariant (secondary) - `self.__Object.Backing` is not a GuiObject Instance. Got %s.",typeof(M)))M.BackgroundColor3=h(L["Backing"])local N=self.__Object:FindFirstChild("Face")assert(N,string.format("ButtonObject:SetColorVariant (secondary) - `self.__Object.Face` not found for `%s`.",self.__Object.Name))assert(typeof(N)=="Instance"and N:IsA("GuiObject"),string.format("ButtonObject:SetColorVariant (secondary) - `self.__Object.Face` is not a GuiObject Instance. Got %s.",typeof(N)))N.BackgroundColor3=h(L["Face"])else assert(self.__Object:IsA("Frame")or self.__Object:IsA("GuiObject"),string.format("ButtonObject:SetColorVariant (primary) - `self.__Object` is not a Frame or GuiObject. Got %s.",typeof(self.__Object)))local M=self.__Object:FindFirstChild("Backing")assert(M,string.format("ButtonObject:SetColorVariant (primary) - `self.__Object.Backing` not found for `%s`.",self.__Object.Name))assert(typeof(M)=="Instance",string.format("ButtonObject:SetColorVariant (primary) - `self.__Object.Backing` is not an Instance. Got %s.",typeof(M)))if M:FindFirstChild("Left")then assert(typeof(M.Left)=="Instance"and M.Left:IsA("GuiObject"),"...")M.Left.BackgroundColor3=h(L["Backing"]["Left"])end;if M:FindFirstChild("Center")then assert(typeof(M.Center)=="Instance"and M.Center:IsA("GuiObject"),"...")M.Center.BackgroundColor3=h(L["Backing"]["Center"])end;if M:FindFirstChild("Right")then assert(typeof(M.Right)=="Instance"and M.Right:IsA("GuiObject"),"...")M.Right.BackgroundColor3=h(L["Backing"]["Right"])end;local N=self.__Object:FindFirstChild("Face")assert(N,string.format("ButtonObject:SetColorVariant (primary) - `self.__Object.Face` not found for `%s`.",self.__Object.Name))assert(typeof(N)=="Instance"and N:IsA("GuiObject"),string.format("ButtonObject:SetColorVariant (primary) - `self.__Object.Face` is not a GuiObject Instance. Got %s.",typeof(N)))if L["Face"]["Main"]then N.BackgroundColor3=h(L["Face"]["Main"])end;local O=N:FindFirstChild("Coloring")if O then assert(typeof(O)=="Instance"and O:IsA("GuiObject"),"...")O.BackgroundColor3=h(L["Face"]["Coloring"])for m,P in O:GetChildren()do if P.Name=="Cornering"then assert(typeof(P)=="Instance"and P:IsA("GuiObject"),"...")P.BackgroundColor3=h(L["Face"]["Cornering"])end end end end end,["UpdateVisualAndInteractionState"]=function(self)local Q=self.__Object:FindFirstChild("Face")local M=self.__Object:FindFirstChild("Backing")local D=Q and Q:FindFirstChild("Display")local E=D and D:FindFirstChild("Title")local F=D and D:FindFirstChild("Icon")local R=self.__Object:FindFirstChild("Interaction")local S=0;local T=0;local U=0;local V=0;local W=true;local X=true;if self.IsDisabled then self:SetColorVariant("ad-gray")if self.__AnimateFace and self.__PressedFacePosition then self:__AnimateFace(self.__PressedFacePosition)end;W=false;X=false elseif self.__IsVisuallySuppressedByParent then self:SetColorVariant("ad-gray")S=0;T=0;U=0.5;V=0.5;if self.__AnimateFace and self.__OriginalFacePosition then self:__AnimateFace(self.__OriginalFacePosition)end else self:SetColorVariant(self.__OriginalColorVariant or"ad-green")if self.__AnimateFace and self.__OriginalFacePosition then self:__AnimateFace(self.__OriginalFacePosition)end end;if Q then Q.BackgroundTransparency=S end;if E and E:IsA("TextLabel")then E.TextTransparency=U end;if F and F:IsA("ImageLabel")then F.ImageTransparency=V end;if M then if self.sub_type=="secondary"then M.BackgroundTransparency=T else local Y=M:FindFirstChild("Left")if Y then Y.BackgroundTransparency=T end;local Z=M:FindFirstChild("Center")if Z then Z.BackgroundTransparency=T end;local _=M:FindFirstChild("Right")if _ then _.BackgroundTransparency=T end end end;if R and R:IsA("GuiButton")then R.Selectable=W;R.Active=X end end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self.__OriginalColorVariant=self.__Object:GetAttribute("color_variant")self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}G:SetColorVariant(x)local Q=C:FindFirstChild("Face")assert(Q,string.format("ComponentManager:NewButton (sub_type: %s) - Template is missing `Face` child.",p))assert(typeof(Q)=="Instance",string.format("ComponentManager:NewButton (sub_type: %s) - `Face` child is not an Instance. Got %s.",p,typeof(Q)))if Q then G.__OriginalFacePosition=Q.Position;G.__PressedFacePosition=UDim2.new(0,0,0,C.AbsoluteSize.Y-Q.AbsoluteSize.Y)local a0=TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)G.__AnimateFace=function(self,H)local a1=self.__Object:FindFirstChild("Face")if not a1 then warn("ButtonObject:__AnimateFace - `Face` is nil. Cannot animate.")return end;c:Create(a1,a0,{["Position"]=H}):Play()end;local a2=false;local R=C:FindFirstChild("Interaction")assert(R,string.format("ComponentManager:NewButton (sub_type: %s) - Template's `Face` is missing `Interaction` child.",p))assert(typeof(R)=="Instance"and R:IsA("GuiButton"),string.format("ComponentManager:NewButton (sub_type: %s) - `Face.Interaction` is not a GuiButton. Got %s.",p,typeof(R)))if R then R.MouseButton1Down:Connect(function()if G.IsDisabled then return end;a2=true;G.__AnimateFace(G,G.__PressedFacePosition)end)R.MouseButton1Up:Connect(function()if a2 then if not G.IsDisabled and G.__Callback then G.__Callback(G)end;a2=false;if not(G.IsDisabled and G.__Object:FindFirstChild("Face")and G.__Object.Face.Position==G.__PressedFacePosition)then G.__AnimateFace(G,G.__OriginalFacePosition)end end end)R.MouseLeave:Connect(function()if G.IsDisabled then return end;if not a2 then return end;G.__AnimateFace(G,G.__OriginalFacePosition)end)end end;G:UpdateVisualAndInteractionState()return G end;function g:NewToggle(u,v)assert(typeof(u)=="table",string.format("ComponentManager:NewToggle - `Properties` parameter must be a table. Got %s.",typeof(u)))if v then assert(typeof(v)=="function",string.format("ComponentManager:NewToggle - `Callback` parameter must be a function if provided. Got %s.",typeof(v)))end;local a3=u or{}assert(f["COLOR_HEX_MAP"],"ComponentManager:NewToggle - `ColorMap.COLOR_HEX_MAP` is nil.")local a4=f["COLOR_HEX_MAP"]local p="primary"assert(typeof(p)=="string",string.format("ComponentManager:NewToggle - Internal `SubType` is not a string. Got %s.",typeof(p)))local x=a3["color_variant"]or"ad-gray"assert(typeof(x)=="string",string.format("ComponentManager:NewToggle - `Properties.color_variant` must be a string. Got %s.",typeof(x)))local y=a3["text"]or"Toggle"assert(typeof(y)=="string",string.format("ComponentManager:NewToggle - `Properties.text` must be a string. Got %s.",typeof(y)))local a5=a3["description"]if a5 then assert(typeof(a5)=="string",string.format("ComponentManager:NewToggle - `Properties.description` must be a string if provided. Got %s.",typeof(a5)))end;local A=a3["disabled"]or false;assert(self["Components"],"ComponentManager:NewToggle - `self.Components` is nil. Was ComponentManager initialized?")assert(self["Components"]["toggle"],"ComponentManager:NewToggle - `self.Components.toggle` template is nil.")local B=self["Components"]and self["Components"]["toggle"]assert(typeof(B)=="Instance",string.format("ComponentManager:NewToggle - Toggle template is not an Instance. Got %s.",typeof(B)))local C=B:Clone()assert(C,"ComponentManager:NewToggle - Failed to clone toggle template.")C.Visible=true;C:SetAttribute("color_variant",x)C:SetAttribute("Enabled",a3["enabled"]or false)local a6=C:FindFirstChild("Description")if a6 then assert(typeof(a6)=="Instance",string.format("ComponentManager:NewToggle - `Description` child is not an Instance. Got %s.",typeof(a6)))if a5 then a6.Text=a5 else a6:Destroy()end elseif a5 then warn(string.format("ComponentManager:NewToggle - `Properties.description` (`%s`) provided, but no `Description` object found in template.",tostring(a5)))end;local a7=C:FindFirstChild("Header")assert(a7,"ComponentManager:NewToggle - Template is missing `Header` child.")assert(typeof(a7)=="Instance",string.format("ComponentManager:NewToggle - `Header` child is not an Instance. Got %s.",typeof(a7)))local E=a7:FindFirstChild("Title")assert(E,"ComponentManager:NewToggle - Template's `Header` is missing `Title` child.")assert(typeof(E)=="Instance"and E:IsA("TextLabel"),string.format("ComponentManager:NewToggle - `Header.Title` is not a TextLabel. Got %s.",typeof(E)))E.Text=y;local a8={["component_type"]="toggle",["sub_type"]=p,["Text"]=y,["Description"]=a5,["IsDisabled"]=A,["__IsVisuallySuppressedByParent"]=false,["__Object"]=C,["__Callback"]=v,["__OriginalColorVariant"]=x,["__UpdateState"]=function(self,a9)assert(typeof(a9)=="boolean",string.format("ToggleObject:__UpdateState - `Enabled` must be a boolean. Got %s.",typeof(a9)))assert(self.__Object,"ToggleObject:__UpdateState - `self.__Object` is nil.")assert(typeof(self.__Object)=="Instance",string.format("ToggleObject:__UpdateState - `self.__Object` is not an Instance. Got %s.",typeof(self.__Object)))local aa=self.__Object:FindFirstChild("Header")assert(aa,"ToggleObject:__UpdateState - `self.__Object` is missing `Header` child.")assert(typeof(aa)=="Instance",string.format("ToggleObject:__UpdateState - `self.__Object.Header` is not an Instance. Got %s.",typeof(aa)))local ab=aa:FindFirstChild("Track")assert(ab,"ToggleObject:__UpdateState - `self.__Object.Header` is missing `Track` child.")assert(typeof(ab)=="Instance",string.format("ToggleObject:__UpdateState - `self.__Object.Header.Track` is not an Instance. Got %s.",typeof(ab)))local ac=ab:FindFirstChild("Handle")assert(ac,"ToggleObject:__UpdateState - `self.__Object.Header.Track` is missing `Handle` child.")assert(typeof(ac)=="Instance",string.format("ToggleObject:__UpdateState - `self.__Object.Header.Track.Handle` is not an Instance. Got %s.",typeof(ac)))local ad=self.IsDisabled;if ac then local ae=UDim2.new(0.75,0,0.5,0)local af=UDim2.new(0.25,0,0.5,0)local ag=TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)local ah=a9 and ae or af;c:Create(ac,ag,{Position=ah}):Play()end;self:UpdateVisualAndInteractionState()end,["SetColorVariant"]=function(self,I)assert(typeof(I)=="string",string.format("ToggleObject:SetColorVariant - `Variant` must be a string. Got %s.",typeof(I)))assert(self.__Object,"ToggleObject:SetColorVariant - `self.__Object` is nil.")assert(typeof(self.__Object)=="Instance",string.format("ToggleObject:SetColorVariant - `self.__Object` is not an Instance. Got %s.",typeof(self.__Object)))self.__Object:SetAttribute("color_variant",I)local aa=self.__Object:FindFirstChild("Header")assert(aa,"ToggleObject:SetColorVariant - `self.__Object` is missing `Header` child.")assert(typeof(aa)=="Instance",string.format("ToggleObject:SetColorVariant - `self.__Object.Header` is not an Instance. Got %s.",typeof(aa)))local ab=aa:FindFirstChild("Track")assert(ab,"ToggleObject:SetColorVariant - `self.__Object.Header` is missing `Track` child.")assert(typeof(ab)=="Instance",string.format("ToggleObject:SetColorVariant - `self.__Object.Header.Track` is not an Instance. Got %s.",typeof(ab)))local ac=ab:FindFirstChild("Handle")assert(ac,"ToggleObject:SetColorVariant - `self.__Object.Header.Track` is missing `Handle` child.")assert(typeof(ac)=="Instance",string.format("ToggleObject:SetColorVariant - `self.__Object.Header.Track.Handle` is not an Instance. Got %s.",typeof(ac)))assert(f["toggle"],"ToggleObject:SetColorVariant - `ColorMap.toggle` is nil.")local L=f["toggle"][I]assert(L,string.format("ToggleObject:SetColorVariant - No variant map found for toggle variant `%s` for object `%s`.",tostring(I),tostring(self.__Object.Name)))if ab then ab.ImageColor3=h(L["Track"])end;if ac then ac.ImageColor3=h(L["Handle"])end end,["UpdateVisualAndInteractionState"]=function(self)local aa=self.__Object:FindFirstChild("Header")local ab=aa and aa:FindFirstChild("Track")local ac=ab and ab:FindFirstChild("Handle")local ai=aa and aa:FindFirstChild("Title")local aj=self.__Object:FindFirstChild("Description")local R=ab and ab:FindFirstChild("Interaction")local ak=self.__Object:GetAttribute("Enabled")or false;local al=0;local am=0;local an=0;local ao=0;local W=true;local X=true;if self.IsDisabled then self:SetColorVariant("ad-gray")al=0.5;am=0.5;an=0.5;ao=0.5;W=false;X=false elseif self.__IsVisuallySuppressedByParent then self:SetColorVariant(self.__OriginalColorVariant or"ad-gray")al=0.5;am=0.5;an=0.5;ao=0.5 else self:SetColorVariant(self.__OriginalColorVariant or"ad-gray")al=ak and 0 or 0.25;am=ak and 0 or 0.25;an=ak and 0 or 0.35;ao=0 end;local ag=TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)if ab then c:Create(ab,ag,{ImageTransparency=al}):Play()end;if ac then c:Create(ac,ag,{ImageTransparency=am}):Play()end;if ai and ai:IsA("TextLabel")then c:Create(ai,ag,{TextTransparency=an}):Play()end;if aj and aj:IsA("TextLabel")then c:Create(aj,ag,{TextTransparency=ao}):Play()end;if R and R:IsA("GuiButton")then R.Selectable=W;R.Active=X end end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self.__OriginalColorVariant=self.__Object:GetAttribute("color_variant")self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()self:__UpdateState(self.__Object:GetAttribute("Enabled")or false)end}local ap=C:FindFirstChild("Header")assert(ap,"ComponentManager:NewToggle - Interaction setup: Template is missing `Header` child.")assert(typeof(ap)=="Instance",string.format("ComponentManager:NewToggle - Interaction setup: `Header` child is not an Instance. Got %s.",typeof(ap)))local aq=ap:FindFirstChild("Track")assert(aq,"ComponentManager:NewToggle - Interaction setup: Template's `Header` is missing `Track` child.")assert(typeof(aq)=="Instance",string.format("ComponentManager:NewToggle - Interaction setup: `Header.Track` is not an Instance. Got %s.",typeof(aq)))local R=aq:FindFirstChild("Interaction")assert(R,"ComponentManager:NewToggle - Interaction setup: Template's `Header.Track` is missing `Interaction` child.")assert(typeof(R)=="Instance"and R:IsA("GuiButton"),string.format("ComponentManager:NewToggle - Interaction setup: `Header.Track.Interaction` is not a GuiButton. Got %s.",typeof(R)))if R then R.MouseButton1Click:Connect(function()if a8.IsDisabled then return end;local ar=C:GetAttribute("Enabled")assert(typeof(ar)=="boolean"or ar==nil,string.format("ComponentManager:NewToggle (Interaction) - Attribute `Enabled` is not a boolean or nil. Got %s.",typeof(ar)))local as=not ar;C:SetAttribute("Enabled",as)a8:__UpdateState(as)a8:UpdateVisualAndInteractionState()if a8.__Callback then a8.__Callback(a8)end end)end;a8:__UpdateState(C:GetAttribute("Enabled"))a8:SetColorVariant(x)a8:UpdateVisualAndInteractionState()return a8 end;function g:NewDropdown(u)assert(typeof(u)=="table",string.format("ComponentManager:NewDropdown - `Properties` parameter must be a table. Got %s.",typeof(u)))local a3=u or{}local y=a3["text"]if y then assert(typeof(y)=="string",string.format("ComponentManager:NewDropdown - `Properties.text` must be a string if provided. Got %s.",typeof(y)))end;local a5=a3["description"]if a5 then assert(typeof(a5)=="string",string.format("ComponentManager:NewDropdown - `Properties.description` must be a string if provided. Got %s.",typeof(a5)))end;local at=a3["placeholder"]or"None"assert(typeof(at)=="string",string.format("ComponentManager:NewDropdown - `Properties.placeholder` must be a string if provided. Got %s.",typeof(at)))local au=a3["options"]if au then assert(typeof(au)=="table",string.format("ComponentManager:NewDropdown - `Properties.options` must be a table if provided. Got %s.",typeof(au)))end;local av=a3["options_generator"]if av then assert(typeof(av)=="function",string.format("ComponentManager:NewDropdown - `Properties.options_generator` must be a function if provided. Got %s.",typeof(av)))end;local aw=a3["initial_value"]local v=a3["Callback"]if v then assert(typeof(v)=="function",string.format("ComponentManager:NewDropdown - `Properties.Callback` must be a function if provided. Got %s.",typeof(v)))end;local x=a3["color_variant"]or"ad-green"assert(typeof(x)=="string",string.format("ComponentManager:NewDropdown - `Properties.color_variant` must be a string if provided. Got %s.",typeof(x)))local A=a3["disabled"]or false;assert(self["Components"],"ComponentManager:NewDropdown - `self.Components` is nil. Was ComponentManager initialized?")assert(self["Components"]["dropdown"],"ComponentManager:NewDropdown - `self.Components.dropdown` template is nil.")local B=self["Components"]and self["Components"]["dropdown"]assert(typeof(B)=="Instance",string.format("ComponentManager:NewDropdown - Dropdown template is not an Instance. Got %s.",typeof(B)))local C=B:Clone()assert(C,"ComponentManager:NewDropdown - Failed to clone dropdown template.")C.Visible=true;local a7=C:FindFirstChild("Header")assert(a7,string.format("ComponentManager:NewDropdown - Template `%s` is missing child `Header`.",C.Name))assert(typeof(a7)=="Instance"and a7:IsA("GuiObject"),string.format("ComponentManager:NewDropdown - `Header` in `%s` is not a GuiObject. Got %s.",C.Name,typeof(a7)))local k=a7 and a7:FindFirstChild("Frame")assert(k,string.format("ComponentManager:NewDropdown - `Header` in `%s` is missing child `Frame`.",C.Name))assert(typeof(k)=="Instance"and k:IsA("GuiObject"),string.format("ComponentManager:NewDropdown - `Header.Frame` in `%s` is not a GuiObject. Got %s.",C.Name,typeof(k)))local ax=k and k:FindFirstChild("Interaction")assert(ax,string.format("ComponentManager:NewDropdown - `Header.Frame` in `%s` is missing child `Interaction`.",C.Name))assert(typeof(ax)=="Instance"and ax:IsA("GuiObject"),string.format("ComponentManager:NewDropdown - `Header.Frame.Interaction` in `%s` is not a GuiObject. Got %s.",C.Name,typeof(ax)))local ay=ax and ax:FindFirstChild("TextLabel")assert(ay,string.format("ComponentManager:NewDropdown - `Header.Frame.Interaction` in `%s` is missing child `TextLabel`.",C.Name))assert(typeof(ay)=="Instance"and ay:IsA("TextLabel"),string.format("ComponentManager:NewDropdown - `Header.Frame.Interaction.TextLabel` in `%s` is not a TextLabel. Got %s.",C.Name,typeof(ay)))local az=k and k:FindFirstChild("Darken")assert(az,string.format("ComponentManager:NewDropdown - Template `%s` (via Header.Frame) is missing child `Darken`.",C.Name))assert(typeof(az)=="Instance"and az:IsA("Frame"),string.format("ComponentManager:NewDropdown - `%s` in `%s` is not a Frame. Got %s.","Header.Frame.Darken",C.Name,typeof(az)))local aA=k and k:FindFirstChild("Options")assert(aA,string.format("ComponentManager:NewDropdown - Template `%s` (via Header.Frame) is missing child `Options` (which should be a ScrollingFrame).",C.Name))assert(typeof(aA)=="Instance"and aA:IsA("ScrollingFrame"),string.format("ComponentManager:NewDropdown - `Header.Frame.Options` in `%s` is not a ScrollingFrame. Got %s.",C.Name,typeof(aA)))local aB=aA and aA:FindFirstChild("Option")assert(aB,string.format("ComponentManager:NewDropdown - `OptionsScrollingFrame` (`%s`) in `%s` is missing child `Option` (the OptionTemplate Frame).",aA.Name,C.Name))assert(typeof(aB)=="Instance"and aB:IsA("Frame"),string.format("ComponentManager:NewDropdown - `Option` template in `%s` is not a Frame. Got %s.",aA.Name,typeof(aB)))aB.Parent=nil;local aC=k and k:FindFirstChild("Shadow")assert(aC,string.format("ComponentManager:NewDropdown - `Header.Frame` in `%s` is missing child `Shadow` (template).",C.Name))assert(typeof(aC)=="Instance"and aC:IsA("ImageLabel"),string.format("ComponentManager:NewDropdown - `Header.Frame.Shadow` in `%s` is not an ImageLabel. Got %s.",C.Name,typeof(aC)))ax.ZIndex=5;aC.ZIndex=4;aB.Visible=false;local aD=game:GetService("Players")local a=aD.LocalPlayer;local aE=24;local aF=0.25;local aG=0.4;local aH=0.35;local function aI(aJ,aK)aK=aK or 1.8;aJ=aJ-1;return aJ*aJ*((aK+1)*aJ+aK)+1 end;local function aL(aJ,aK)aK=aK or 1.8;return aJ*aJ*((aK+1)*aJ-aK)end;local aM=function(aN,aO,aP)return aN+(aO-aN)*aP end;local aQ={["component_type"]="dropdown",["Text"]=y,["Description"]=a5,["Placeholder"]=at,["OptionsList"]={},["CurrentValue"]=aw,["IsOpen"]=false,["color_variant"]=x,["__BaseInteractionColor"]=nil,["__DarkInteractionColor"]=nil,["IsEmpty"]=false,["IsDisabled"]=A,["__IsVisuallySuppressedByParent"]=false,["__Object"]=C,["__InteractionButton"]=ax,["__InteractionShadow"]=aC,["__DarkenFrame"]=az,["__SelectedTextLabel"]=ay,["__OptionsFrame"]=aA,["__OptionTemplate"]=aB,["__Callback"]=v,["__GeneratedGuiObjects"]={},["__OptionToShadow"]={},["__TopmostHoveredOption"]=nil,ClearRenderedOptions=function(self)for aR=1,#self.__GeneratedGuiObjects do local aS=self.__GeneratedGuiObjects[aR]if not aS or not aS.Parent then break end;aS:Destroy()end;table.clear(self.__GeneratedGuiObjects)table.clear(self.__OptionToShadow)end,HideOptions=function(self)for aR=1,#self.__GeneratedGuiObjects do local aS=self.__GeneratedGuiObjects[aR]if not aS then break end;aS.Position=UDim2.new(0,0,0,0)aS.Visible=false end end,FindOptionAtCursor=function(self)if not a then return nil end;local aT=a:GetMouse()local aU=Vector2.new(aT.X,aT.Y)local aV=nil;local aW=-math.huge;for m,aS in self.__GeneratedGuiObjects do if aS:IsA("ImageButton")or aS:IsA("TextButton")then local aX,aY=aS.AbsolutePosition,aS.AbsoluteSize;if aU.X>=aX.X and aU.X<=aX.X+aY.X and aU.Y>=aX.Y and aU.Y<=aX.Y+aY.Y then if aS.ZIndex>aW then aW=aS.ZIndex;aV=aS end end end end;return aV end,ClearHoverState=function(self,aZ)if not aZ or not aZ:IsA("ImageButton")then return end;if aZ==self.__InteractionButton then if self.__BaseInteractionColor then aZ.ImageColor3=self.__BaseInteractionColor else aZ.ImageColor3=Color3.fromRGB(255,255,255)end else aZ.ImageColor3=Color3.fromRGB(255,255,255)end end,DetectOptionHover=function(self)if not self.IsOpen then return end;local a_=self:FindOptionAtCursor()if not a_ then if self.__TopmostHoveredOption then self:ClearHoverState(self.__TopmostHoveredOption)self.__TopmostHoveredOption=nil end;return end;local b0=a_:FindFirstChild("Interaction")if not b0 then return end;if b0==self.__TopmostHoveredOption then return end;if self.__TopmostHoveredOption then self:ClearHoverState(self.__TopmostHoveredOption)end;self.__TopmostHoveredOption=b0;if a_:GetAttribute("Disabled")then return end;if b0:IsA("ImageButton")then b0.ImageColor3=Color3.fromRGB(191,191,191)end end,UpdateInteractionText=function(self,b1)local b2=nil;local b3=self.OptionsList;if b1~=nil then for aR=1,#b3 do local b4=b3[aR]if b4.value==b1 then b2=b4;break end end end;if not b2 then if b1~=nil then warn(string.format("Selected value '%s' not found in optionsConfig.",tostring(b1)))end;self.__SelectedTextLabel.Text=self.Placeholder or"Select..."self.CurrentValue=nil;return end;self.__SelectedTextLabel.Text=b2.text;self.CurrentValue=b1;self.__Object:SetAttribute("SelectedValue",b1)end,RenderOptions=function(self,b5)self:ClearRenderedOptions()self.__OptionTemplate.Visible=false;local b6=self.__InteractionButton.ZIndex;local b7=self.CurrentValue;local b8=1;local b9={}if#self.OptionsList>0 then for m,b4 in self.OptionsList do if b4.value~=b7 then table.insert(b9,b4)end end end;local ba=self.IsEmpty;local bb=#b9==0;if bb then self.IsEmpty=true;if not self.IsDisabled then self:Disable()else self:UpdateVisualAndInteractionState()end;b8=1 else self.IsEmpty=false;if not self.IsDisabled or self.IsDisabled and ba then self:Enable()else self:UpdateVisualAndInteractionState()end;for aR,b4 in b9 do local bc=b4.disabled or false;local bd=self.__OptionTemplate:Clone()bd.Name="Option_"..tostring(b4.value or aR)bd.Visible=true;bd:SetAttribute("Value",b4.value)bd:SetAttribute("Disabled",bc)bd.Size=UDim2.new(1,0,0,aE)bd.Position=b5 and UDim2.new(0,0,0,0)or UDim2.new(0,0,0,(b8+1)*aE)bd.ZIndex=b6-1-b8;bd.Parent=self.__OptionsFrame;local be=bd:FindFirstChild("Interaction")assert(be and be:IsA("ImageButton"),string.format("RenderOptions: Cloned Option item '%s' is missing 'Interaction' ImageButton.",bd.Name))local bf=be and be:FindFirstChild("TextLabel")assert(bf and bf:IsA("TextLabel"),string.format("RenderOptions: Cloned Option's Interaction button '%s' is missing 'TextLabel'.",be and be.Name or"nil"))if bf then bf.Text=b4.text;bf.TextColor3=bc and Color3.fromRGB(120,120,120)or Color3.fromRGB(50,50,51)bf.TextTransparency=bc and 0.3 or 0 end;local bg=bd:FindFirstChild("Shadow")assert(bg and bg:IsA("ImageLabel"),string.format("RenderOptions: Cloned Option item '%s' is missing 'Shadow' ImageLabel.",bd.Name))if be then be.MouseEnter:Connect(function()self:DetectOptionHover()end)be.MouseLeave:Connect(function()self:ClearHoverState(be)if self.__TopmostHoveredOption~=be then return end;self.__TopmostHoveredOption=nil end)be.MouseButton1Click:Connect(function()if not self.IsOpen then return end;if bc then return end;self:SelectOptionByValue(b4.value)end)end;if bg then bg.Name=bd.Name.."_Shadow"self.__OptionToShadow[bd]=bg end;table.insert(self.__GeneratedGuiObjects,bd)b8=b8+1;if b5 then b5(bd,aR-1)end end end;local bh=b8-1;if#b9==0 then bh=0 end;local bi=math.huge;local bj=self.__OptionsFrame:FindFirstChildOfClass("UISizeConstraint")if bj then bi=bj.MaxSize.Y end;local bk;local bl;if bh==0 then bl=0;bk=0 else bl=bh*aE;bk=math.min(bl,bi)end;self.__OptionsFrame.CanvasSize=UDim2.new(0,0,0,bl)self.__OptionsFrame.Size=UDim2.new(self.__OptionsFrame.Size.X.Scale,self.__OptionsFrame.Size.X.Offset,0,bk)end,Open=function(self)if self.IsDisabled or self.__IsVisuallySuppressedByParent or self.IsOpen or not self.__InteractionButton.Selectable then return end;self.IsOpen=true;self.__OptionsFrame.Visible=true;self.__OptionsFrame.CanvasPosition=Vector2.new(0,0)local bm={}local bn=tick()local bo=aF;self:RenderOptions(function(aS,bp)local H=UDim2.new(0,0,0,(bp+1)*aE)aS.Position=UDim2.new(0,0,0,0)aS.Visible=true;aS.Selectable=true;aS.Active=true;bm[aS]={["Start"]=0,["Duration"]=bo,["TargetPosition"]=H,["VisibleIndex"]=bp,["TotalVisible"]=0,["InitialTransparency"]=1,["TargetTransparency"]=0}local bq=aS:FindFirstChild("Shadow")if bq and bq:IsA("ImageLabel")then bq.ImageTransparency=bm[aS].InitialTransparency end end)local br=0;for m in bm do br=br+1 end;local bs=br>1 and math.max(0,(aG-bo)/(br-1))or 0;for aS,bt in bm do bt.Start=bn+bt.VisibleIndex*bs;bt.TotalVisible=br end;self.__OptionsFrame.Visible=true;d:BindToRenderStep("DropdownOpenAnimation_"..self.__Object.Name,Enum.RenderPriority.Input.Value+1,function()local bu,bv=tick(),true;if not self.IsOpen then d:UnbindFromRenderStep("DropdownOpenAnimation_"..self.__Object.Name)self:HideOptions()self:ClearRenderedOptions()return end;for aS,bt in bm do local aJ=(bu-bt.Start)/bt.Duration;local bw=1;local bx=2.5;local by=0;if bt.TotalVisible>1 then by=(bt.VisibleIndex-1)/(bt.TotalVisible-1)end;local bz=bw+(bx-bw)*by;if aJ<0 then bv=false elseif aJ>=1 then aS.Position=bt.TargetPosition;local bq=aS:FindFirstChild("Shadow")if bq and bq:IsA("ImageLabel")then bq.ImageTransparency=bt.TargetTransparency end else bv=false;local bA=aI(aJ,bz)local bB=UDim2.new(0,0,0,0)local bC=bt.TargetPosition;aS.Position=UDim2.new(aM(bB.X.Scale,bC.X.Scale,bA),aM(bB.X.Offset,bC.X.Offset,bA),aM(bB.Y.Scale,bC.Y.Scale,bA),aM(bB.Y.Offset,bC.Y.Offset,bA))local bq=aS:FindFirstChild("Shadow")if bq and bq:IsA("ImageLabel")then bq.ImageTransparency=aM(bt.InitialTransparency,bt.TargetTransparency,bA)bq.Position=UDim2.new(aS.Position.X.Scale+0.5,aS.Position.X.Offset+aE/4,aS.Position.Y.Scale+0.5,aS.Position.Y.Offset+aE/4)end end end;if not bv then return end;d:UnbindFromRenderStep("DropdownOpenAnimation_"..self.__Object.Name)end)end,Close=function(self)if not self.IsOpen then return end;d:UnbindFromRenderStep("DropdownOpenAnimation_"..self.__Object.Name)self.IsOpen=false;local bm={}local bn=tick()local bo=aF;local bD={}for aR=#self.__GeneratedGuiObjects,1,-1 do local aS=self.__GeneratedGuiObjects[aR]if aS and(aS:IsA("Frame")or aS:IsA("ImageButton"))then table.insert(bD,aS)aS.Selectable=false;aS.Active=false;if aS:IsA("ImageButton")then aS.ImageColor3=Color3.fromRGB(255,255,255)end end end;local bE=#bD;local bs=bE>1 and math.max(0,(aH-bo)/(bE-1))or 0;for aR,aS in bD do local bF=aR;local bq=aS:FindFirstChild("Shadow")local bB=aS.Position;local bG=UDim2.new(0,0,0,0)bm[aS]={["Start"]=bn+(bF-1)*bs,["Duration"]=bo,["StartPosition"]=bB,["EndPosition"]=bG,["VisibleIndex"]=bF,["TotalVisible"]=#bD,["InitialTransparency"]=bq and bq.ImageTransparency or 0,["TargetTransparency"]=1}end;d:BindToRenderStep("DropdownCloseAnimation_"..self.__Object.Name,Enum.RenderPriority.Input.Value+1,function()local bu,bv=tick(),true;local bH=0;if self.IsOpen then d:UnbindFromRenderStep("DropdownCloseAnimation_"..self.__Object.Name)return end;for aS,bt in bm do local aJ=(bu-bt.Start)/bt.Duration;local bw=0.875;local bx=1.8;local by=0;if bt.TotalVisible>1 then by=(bt.VisibleIndex-1)/(bt.TotalVisible-1)end;local bz=bw+(bx-bw)*by;if aJ<0 then bv=false elseif aJ>=1 then aS.Position=bt.EndPosition;aS.Visible=false;local bq=aS:FindFirstChild("Shadow")if bq and bq:IsA("ImageLabel")then bq.Visible=false;bq.ImageTransparency=bt.TargetTransparency end else bv=false;local bA=aL(aJ,bz)local bI=UDim2.new(aM(bt.StartPosition.X.Scale,bt.EndPosition.X.Scale,bA),aM(bt.StartPosition.X.Offset,bt.EndPosition.X.Offset,bA),aM(bt.StartPosition.Y.Scale,bt.EndPosition.Y.Scale,bA),aM(bt.StartPosition.Y.Offset,bt.EndPosition.Y.Offset,bA))aS.Position=bI;local bJ=bI.Y.Offset+aE;bH=math.max(bH,bJ)local bq=aS:FindFirstChild("Shadow")if bq and bq:IsA("ImageLabel")then bq.ImageTransparency=aM(bt.InitialTransparency,bt.TargetTransparency,bA)bq.Position=UDim2.new(bI.X.Scale+0.5,bI.X.Offset+aE/4,bI.Y.Scale+0.5,bI.Y.Offset+aE/4)end end end;self.__OptionsFrame.CanvasSize=UDim2.new(0,self.__OptionsFrame.CanvasSize.X.Offset,0,bH)local bj=self.__OptionsFrame:FindFirstChildOfClass("UISizeConstraint")local bi=bj and bj.MaxSize.Y or math.huge;local bK=math.min(bH,bi)self.__OptionsFrame.Size=UDim2.new(self.__OptionsFrame.Size.X.Scale,self.__OptionsFrame.Size.X.Offset,0,bK)if not bv then return end;d:UnbindFromRenderStep("DropdownCloseAnimation_"..self.__Object.Name)self:HideOptions()self:ClearRenderedOptions()self.__OptionsFrame.Size=UDim2.new(self.__OptionsFrame.Size.X.Scale,self.__OptionsFrame.Size.X.Offset,0,0)self.__OptionsFrame.CanvasSize=UDim2.new(0,0,0,0)end)end,ToggleOpen=function(self)if self.IsDisabled and not self.IsOpen or self.__IsVisuallySuppressedByParent and not self.IsOpen then return end;if not self.__InteractionButton.Selectable and not self.IsOpen then return end;self[self.IsOpen and"Close"or"Open"](self)end,SelectOptionByValue=function(self,bL)local bM=false;for aR,b4 in self.OptionsList do if b4.value==bL and not(b4.disabled or false)then self:UpdateInteractionText(bL)bM=true;break end end;if not bM then warn(string.format("DropdownObject:SelectOptionByValue - Value not found or option disabled: %s",tostring(bL)))return end;self:Close()if not self.__Callback then return end;self.__Callback(self)end,SetColorVariant=function(self,I)assert(typeof(I)=="string",string.format("DropdownObject:SetColorVariant - `Variant` must be a string. Got %s.",typeof(I)))if self.IsDisabled or self.__IsVisuallySuppressedByParent then if self.color_variant~=I and I~="ad-gray"then self.color_variant=I end else self.color_variant=I;self.__Object:SetAttribute("color_variant",I)end;assert(f["dropdown"],"DropdownObject:SetColorVariant - `ColorMap.dropdown` is nil. Check your ColorMap setup.")local bN=f["dropdown"]local bO=I;assert(bN[bO],string.format("DropdownObject:SetColorVariant - Variant `%s` not found in `ColorMap.dropdown`.",tostring(bO)))local L=bN[bO]local bP=L["InteractionButton"]or bO;local bQ=L["InteractionShadow"]or bO.."-dark"local bR=L["Scrollbar"]or bO;local bS=L["Darken"]or bO.."-between"self.__BaseInteractionColor=h(bP)self.__DarkInteractionColor=h(bQ)local bT=h(bR)local bU=h(bS)if self.__BaseInteractionColor then self.__InteractionButton.ImageColor3=self.__BaseInteractionColor else warn(string.format("DropdownObject:SetColorVariant - Failed to get BaseColor3 for InteractionButton from variant `%s` (using `%s`).",tostring(bO),tostring(bP)))end;if self.__DarkInteractionColor then self.__InteractionShadow.ImageColor3=self.__DarkInteractionColor else warn(string.format("DropdownObject:SetColorVariant - Failed to get DarkColor3 for InteractionShadow from variant `%s` (using `%s`).",tostring(bO),tostring(bQ)))end;if bT then self.__OptionsFrame.ScrollBarImageColor3=bT else warn(string.format("DropdownObject:SetColorVariant - Failed to get ScrollbarColor3 from variant `%s` (using `%s`).",tostring(bO),tostring(bR)))end;if self.__DarkenFrame and bU then self.__DarkenFrame.BackgroundColor3=bU elseif self.__DarkenFrame then warn(string.format("DropdownObject:SetColorVariant - Failed to get DarkenBarColor3 from variant `%s` (using `%s`) for __DarkenFrame.",tostring(bO),tostring(bS)))end end,["UpdateVisualAndInteractionState"]=function(self)local bV=self.IsEmpty;local bW=self.IsDisabled;local bX=self.__IsVisuallySuppressedByParent;local bY=bW or bV;if bY then self:SetColorVariant("ad-gray")if bV then self.__SelectedTextLabel.Text="Empty"self.__SelectedTextLabel.TextTransparency=0 else self:UpdateInteractionText(self.CurrentValue)self.__SelectedTextLabel.TextTransparency=0.5 end;self.__InteractionButton.ImageTransparency=0.25;self.__InteractionShadow.ImageTransparency=0.25;if self.__DarkenFrame then self.__DarkenFrame.BackgroundTransparency=0.25 end;local bZ=self.__Object:FindFirstChild("Header")if bZ then local E=bZ:FindFirstChild("Title")if E and E:IsA("TextLabel")then E.TextTransparency=0.5 end end;local a6=self.__Object:FindFirstChild("Description")if a6 and a6:IsA("TextLabel")then a6.TextTransparency=0.5 end;self.__InteractionButton.Selectable=false;self.__InteractionButton.Active=false;if self.IsOpen then self:Close()end elseif bX then self:SetColorVariant("ad-gray")self:UpdateInteractionText(self.CurrentValue)self.__SelectedTextLabel.TextTransparency=0.5;local bZ=self.__Object:FindFirstChild("Header")if bZ then local E=bZ:FindFirstChild("Title")if E and E:IsA("TextLabel")then E.TextTransparency=0.5 end end;local a6=self.__Object:FindFirstChild("Description")if a6 and a6:IsA("TextLabel")then a6.TextTransparency=0.5 end;self.__InteractionButton.ImageTransparency=0.25;self.__InteractionShadow.ImageTransparency=0.25;if self.__DarkenFrame then self.__DarkenFrame.BackgroundTransparency=0.25 end;self.__InteractionButton.Selectable=not bV;self.__InteractionButton.Active=not bV;if self.IsOpen and bV then self:Close()end else self:SetColorVariant(self.color_variant)self:UpdateInteractionText(self.CurrentValue)self.__SelectedTextLabel.TextTransparency=0;local bZ=self.__Object:FindFirstChild("Header")if bZ then local E=bZ:FindFirstChild("Title")if E and E:IsA("TextLabel")then E.TextTransparency=0 end end;local a6=self.__Object:FindFirstChild("Description")if a6 and a6:IsA("TextLabel")then a6.TextTransparency=0 end;self.__InteractionButton.ImageTransparency=0;self.__InteractionShadow.ImageTransparency=0;if self.__DarkenFrame then self.__DarkenFrame.BackgroundTransparency=0 end;self.__InteractionButton.Selectable=true;self.__InteractionButton.Active=true end end,["Disable"]=function(self)if self.IsDisabled and not self.IsEmpty then if self.IsEmpty then else return end end;self.IsDisabled=true;if self.IsOpen then self:Close()end;self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if self.IsEmpty then self.IsDisabled=true;self:UpdateVisualAndInteractionState()return end;if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}if av then local b_=av(aQ)assert(typeof(b_)=="table",string.format("ComponentManager:NewDropdown - `options_generator` function did not return a table. Got %s.",typeof(b_)))aQ.OptionsList=b_ elseif au then aQ.OptionsList=au end;ax.MouseEnter:Connect(function()if aQ.IsDisabled or aQ.__IsVisuallySuppressedByParent then return end;if aQ.__TopmostHoveredOption and aQ.__TopmostHoveredOption.ZIndex>=ax.ZIndex then return end;if aQ.__TopmostHoveredOption and aQ.__TopmostHoveredOption~=ax then aQ:ClearHoverState(aQ.__TopmostHoveredOption)end;aQ.__TopmostHoveredOption=ax;if aQ.__DarkInteractionColor then ax.ImageColor3=aQ.__DarkInteractionColor end end)ax.MouseLeave:Connect(function()if aQ.IsDisabled or aQ.__IsVisuallySuppressedByParent then return end;if aQ.__TopmostHoveredOption~=ax then return end;aQ.__TopmostHoveredOption=nil;if aQ.__BaseInteractionColor then ax.ImageColor3=aQ.__BaseInteractionColor else ax.ImageColor3=Color3.fromRGB(255,255,255)end end)local c0=false;ax.MouseButton1Click:Connect(function()if aQ.IsDisabled then return end;if c0 then return end;c0=true;if aQ.__TopmostHoveredOption~=ax and aQ.__TopmostHoveredOption~=nil then c0=false;return end;aQ:ToggleOpen()task.wait()c0=false end)local a6=C:FindFirstChild("Description")if a6 then assert(typeof(a6)=="Instance"and a6:IsA("TextLabel"),string.format("ComponentManager:NewDropdown - `Description` child of `%s` is not a TextLabel. Got %s.",C.Name,typeof(a6)))if a5 then a6.Text=a5;a6.Visible=true else a6.Visible=false end elseif a5 then warn(string.format("ComponentManager:NewDropdown - `Properties.description` (`%s`) provided, but no `Description` object found in template.",tostring(a5)))end;if y then local bZ=C:FindFirstChild("Header")assert(bZ,string.format("ComponentManager:NewDropdown - Template `%s` is missing child `Header` (needed for Text).",C.Name))assert(typeof(bZ)=="Instance"and bZ:IsA("GuiObject"),string.format("ComponentManager:NewDropdown - `Header` in `%s` (for Title) is not a GuiObject. Got %s.",C.Name,typeof(bZ)))local E=bZ and bZ:FindFirstChild("Title")assert(E,string.format("ComponentManager:NewDropdown - Template `%s` (via Header) is missing child `Title` (needed for Text).",C.Name))assert(typeof(E)=="Instance"and E:IsA("TextLabel"),string.format("ComponentManager:NewDropdown - `Header.Title` in `%s` is not a TextLabel. Got %s.",C.Name,typeof(E)))if E then E.Text=y end else local bZ=C:FindFirstChild("Header")if bZ then local E=bZ:FindFirstChild("Title")if E then E.Visible=false end end end;local c1=#aQ.OptionsList;aQ.IsEmpty=c1==0;aQ.IsDisabled=A;aQ.__IsVisuallySuppressedByParent=false;if aQ.IsEmpty and not aQ.IsDisabled then aQ.IsDisabled=true end;aQ:UpdateVisualAndInteractionState()return aQ end;function g:NewSlider(u,v)assert(typeof(u)=="table",string.format("ComponentManager:NewSlider - `Properties` parameter must be a table. Got %s.",typeof(u)))if v then assert(typeof(v)=="function",string.format("ComponentManager:NewSlider - `Callback` parameter must be a function if provided. Got %s.",typeof(v)))end;local a3=u or{}assert(f["slider"],"`ComponentManager:NewSlider` - `ColorMap.slider` is nil.")local c2=f["slider"]assert(f["COLOR_HEX_MAP"],"`ComponentManager:NewSlider` - `ColorMap.COLOR_HEX_MAP` is nil.")local a4=f["COLOR_HEX_MAP"]local x=a3["color_variant"]or"ad-gray"assert(typeof(x)=="string",string.format("ComponentManager:NewSlider - `Properties.color_variant` must be a string. Got %s.",typeof(x)))local y=a3["text"]if y then assert(typeof(y)=="string",string.format("ComponentManager:NewSlider - `Properties.text` must be a string if provided. Got %s.",typeof(y)))end;local a5=a3["description"]if a5 then assert(typeof(a5)=="string",string.format("ComponentManager:NewSlider - `Properties.description` must be a string if provided. Got %s.",typeof(a5)))end;local A=a3["disabled"]or false;assert(self["Components"],"`ComponentManager:NewSlider` - `self.Components` is nil. Was ComponentManager initialized?")assert(self["Components"]["slider"],"ComponentManager:NewSlider - `self.Components.slider` template is nil.")local B=self["Components"]and self["Components"]["slider"]assert(typeof(B)=="Instance",string.format("ComponentManager:NewSlider - Slider template is not an Instance. Got %s.",typeof(B)))local C=B:Clone()assert(C,"`ComponentManager:NewSlider` - Failed to clone slider template.")C.Visible=true;C:SetAttribute("color_variant",x)local a7=C:FindFirstChild("Header")if y and a7 then local E=a7:FindFirstChild("Title")if E and E:IsA("TextLabel")then E.Text=y else warn(string.format("ComponentManager:NewSlider - Template is missing 'Header.Title' TextLabel or it's not a TextLabel. Cannot set text: %s",tostring(y)))end elseif y then warn(string.format("ComponentManager:NewSlider - `Properties.text` ('%s') provided, but no 'Header' found in template.",y))end;local a6=C:FindFirstChild("Description")if a6 and a6:IsA("TextLabel")then if a5 then a6.Text=a5;a6.Visible=true else a6.Visible=false end elseif a5 then warn(string.format("ComponentManager:NewSlider - `Properties.description` ('%s') provided, but no 'Description' TextLabel found in template.",a5))end;local c3={["component_type"]="slider",["Text"]=y,["Description"]=a5,["IsDisabled"]=A,["__IsVisuallySuppressedByParent"]=false,["__Object"]=C,["__Callback"]=v,["__OriginalColorVariant"]=x,["__UpdateValue"]=function(self,bL,c4)assert(typeof(bL)=="number",string.format("SliderObject:__UpdateValue - `Value` must be a number. Got %s.",typeof(bL)))assert(typeof(c4)=="boolean",string.format("SliderObject:__UpdateValue - `IsInteractive` must be a boolean. Got %s.",typeof(c4)))assert(self.__Object,"SliderObject:__UpdateValue - `self.__Object` is nil.")assert(typeof(self.__Object)=="Instance",string.format("SliderObject:__UpdateValue - `self.__Object` is not an Instance. Got %s.",typeof(self.__Object)))local c5=self.__Object:GetAttribute("Min")or 0;assert(typeof(c5)=="number",string.format("SliderObject:__UpdateValue - Attribute `Min` is not a number. Got %s.",typeof(c5)))local c6=self.__Object:GetAttribute("Max")or 100;assert(typeof(c6)=="number",string.format("SliderObject:__UpdateValue - Attribute `Max` is not a number. Got %s.",typeof(c6)))assert(c6>c5,string.format("SliderObject:__UpdateValue - Attribute `Max` (%s) must be greater than `Min` (%s).",tostring(c6),tostring(c5)))local c7=(bL-c5)/(c6-c5)c7=math.clamp(c7,0,1)local aa=self.__Object:FindFirstChild("Header")assert(aa,"SliderObject:__UpdateValue - `self.__Object` is missing `Header` child.")assert(typeof(aa)=="Instance",string.format("SliderObject:__UpdateValue - `self.__Object.Header` is not an Instance. Got %s.",typeof(aa)))local c8=aa:FindFirstChild("Bar")assert(c8,"SliderObject:__UpdateValue - `self.__Object.Header` is missing `Bar` child.")assert(typeof(c8)=="Instance",string.format("SliderObject:__UpdateValue - `self.__Object.Header.Bar` is not an Instance. Got %s.",typeof(c8)))local ac=c8:FindFirstChild("Handle")assert(ac,"SliderObject:__UpdateValue - `self.__Object.Header.Bar` is missing `Handle` child.")assert(typeof(ac)=="Instance",string.format("SliderObject:__UpdateValue - `self.__Object.Header.Bar.Handle` is not an Instance. Got %s.",typeof(ac)))if ac and c8 then local c9=8;local ca=c8.AbsoluteSize.X;local cb=ca-2*c9;local cc=c9+c7*cb;ac.Position=UDim2.new(0,cc,0.5,0)end;self.__Object:SetAttribute("Value",bL)local ai=aa:FindFirstChild("Title")assert(ai,"SliderObject:__UpdateValue - `self.__Object.Header` is missing `Title` child.")assert(typeof(ai)=="Instance"and ai:IsA("TextLabel"),string.format("SliderObject:__UpdateValue - `self.__Object.Header.Title` is not a TextLabel. Got %s.",typeof(ai)))if ai then local cd=ai.Text:match("^(.-)%s*-")or ai.Text;if c6==100 and c5==0 then ai.Text=cd.." - "..math.floor(bL).."%"else ai.Text=cd.." - "..math.floor(bL)end end;self:UpdateVisualAndInteractionState()if c4 and self.__Callback and not self.IsDisabled and not self.__IsVisuallySuppressedByParent then self.__Callback(self)end end,["SetColorVariant"]=function(self,I)assert(typeof(I)=="string",string.format("SliderObject:SetColorVariant - `Variant` must be a string. Got %s.",typeof(I)))assert(self.__Object,"SliderObject:SetColorVariant - `self.__Object` is nil.")assert(typeof(self.__Object)=="Instance",string.format("SliderObject:SetColorVariant - `self.__Object` is not an Instance. Got %s.",typeof(self.__Object)))self.__Object:SetAttribute("color_variant",I)local aa=self.__Object:FindFirstChild("Header")assert(aa,"SliderObject:SetColorVariant - `self.__Object` is missing `Header` child.")assert(typeof(aa)=="Instance",string.format("SliderObject:SetColorVariant - `self.__Object.Header` is not an Instance. Got %s.",typeof(aa)))local c8=aa:FindFirstChild("Bar")assert(c8,"SliderObject:SetColorVariant - `self.__Object.Header` is missing `Bar` child.")assert(typeof(c8)=="Instance",string.format("SliderObject:SetColorVariant - `self.__Object.Header.Bar` is not an Instance. Got %s.",typeof(c8)))local ac=c8:FindFirstChild("Handle")assert(ac,"SliderObject:SetColorVariant - `self.__Object.Header.Bar` is missing `Handle` child.")assert(typeof(ac)=="Instance",string.format("SliderObject:SetColorVariant - `self.__Object.Header.Bar.Handle` is not an Instance. Got %s.",typeof(ac)))assert(c2,"`SliderObject:SetColorVariant` - `ColorMapSlider` (ColorMap.slider) is nil.")local L=c2 and c2[I]assert(L,string.format("SliderObject:SetColorVariant - No variant map found for slider variant `%s` for object `%s`.",tostring(I),tostring(self.__Object.Name)))if c8 then c8.ImageColor3=h(L["Bar"])end;if ac then ac.ImageColor3=h(L["Handle"])end end,["UpdateVisualAndInteractionState"]=function(self)local aa=self.__Object:FindFirstChild("Header")local c8=aa and aa:FindFirstChild("Bar")local ac=c8 and c8:FindFirstChild("Handle")local ce=ac and ac:FindFirstChild("Outline")local ai=aa and aa:FindFirstChild("Title")local aj=self.__Object:FindFirstChild("Description")local cf=self.__Object:GetAttribute("Value")or 0;local cg=self.__Object:GetAttribute("Min")or 0;local ch=cf==cg;local ci=0;local am=0;local cj=0;local an=0;local ao=0;if self.IsDisabled then self:SetColorVariant("ad-gray")ci=0.5;am=0.5;cj=0.5;an=0.5;ao=0.5 elseif self.__IsVisuallySuppressedByParent then self:SetColorVariant(self.__OriginalColorVariant or"ad-gray")ci=0.5;am=0.5;cj=0.5;an=0.5;ao=0.5 else self:SetColorVariant(self.__OriginalColorVariant or"ad-gray")if ch then ci=0.65;am=0.65;cj=0.65;an=0.35;ao=0 else ci=0;am=0;cj=0;an=0;ao=0 end end;if c8 and c8:IsA("ImageButton")then c8.ImageTransparency=ci end;if ac and ac:IsA("ImageButton")then ac.ImageTransparency=am end;if ce and ce:IsA("ImageLabel")then ce.ImageTransparency=cj end;if ai and ai:IsA("TextLabel")then ai.TextTransparency=an end;if aj and aj:IsA("TextLabel")then aj.TextTransparency=ao end end}local c5=a3["min"]or 0;local c6=a3["max"]or 100;local aw=math.clamp(a3["initial_value"]or c5,c5,c6)C:SetAttribute("Min",c5)C:SetAttribute("Max",c6)C:SetAttribute("Value",aw)local c8=C:FindFirstChild("Header")and C.Header:FindFirstChild("Bar")local ac=c8 and c8:FindFirstChild("Handle")if ac and c8 then local ck=false;local cl=nil;local cm=nil;local function cn(co)if c3.IsDisabled then return end;if not c8 or not c8.Parent then return end;local cp=c8.AbsolutePosition.X;local ca=c8.AbsoluteSize.X;if ca<=0 then return end;local c9=8;local cq=co.X-cp;local c7=math.clamp((cq-c9)/(ca-2*c9),0,1)local cr=c5+c7*(c6-c5)c3.__UpdateValue(c3,cr,true)end;ac.InputBegan:Connect(function(cs)if cs.UserInputType==Enum.UserInputType.MouseButton1 or cs.UserInputType==Enum.UserInputType.Touch then if c3.IsDisabled then return end;ck=true;cl=cs.Position;cm=c3.__Object:GetAttribute("Value")end end)c8.InputBegan:Connect(function(cs)if cs.UserInputType==Enum.UserInputType.MouseButton1 or cs.UserInputType==Enum.UserInputType.Touch then if c3.IsDisabled then return end;ck=true;cn(cs.Position)end end)e.InputChanged:Connect(function(cs)if ck and(cs.UserInputType==Enum.UserInputType.MouseMovement or cs.UserInputType==Enum.UserInputType.Touch)then cn(cs.Position)end end)e.InputEnded:Connect(function(cs)if ck and(cs.UserInputType==Enum.UserInputType.MouseButton1 or cs.UserInputType==Enum.UserInputType.Touch)then ck=false;cl=nil;cm=nil end end)local ct;local cu=false;local function cv()if cu then return end;local cw=17;if c8 and c8.AbsoluteSize.X>=cw then c3.__UpdateValue(c3,aw,false)cu=true;if ct then ct:Disconnect()ct=nil end end end;ct=c8:GetPropertyChangedSignal("AbsoluteSize"):Connect(cv)cv()C.AncestryChanged:Connect(function()if not C.Parent and ct then ct:Disconnect()ct=nil end end)else warn("Slider component template is missing 'Header' or 'Bar' or 'Handle'")end;c3:SetColorVariant(x)c3:UpdateVisualAndInteractionState()return c3 end;function g:NewInput(u,v)assert(typeof(u)=="table",string.format("ComponentManager:NewInput - `Properties` parameter must be a table. Got %s.",typeof(u)))if v then assert(typeof(v)=="function",string.format("ComponentManager:NewInput - `Callback` parameter must be a function if provided. Got %s.",typeof(v)))end;local a3=u or{}local x=a3["color_variant"]or"ad-gray"local y=a3["text"]local a5=a3["description"]local A=a3["disabled"]or false;local B=self["Components"]and self["Components"]["input"]if not B then assert(false,"No input template found")end;local C=B:Clone()C.Visible=true;C:SetAttribute("color_variant",x)if y then local a7=C:FindFirstChild("Header")if a7 then local E=a7:FindFirstChild("Title")if E and E:IsA("TextLabel")then E.Text=y else warn(string.format("ComponentManager:NewInput - Template for input is missing 'Header.Title' TextLabel or it's not a TextLabel. Cannot set text: %s",tostring(y)))end else warn(string.format("ComponentManager:NewInput - Template for input is missing 'Header'. Cannot set text: %s",tostring(y)))end end;local a6=C:FindFirstChild("Description")if a6 and a6:IsA("TextLabel")then if a5 then a6.Text=a5;a6.Visible=true else a6.Visible=false end elseif a5 then warn(string.format("ComponentManager:NewInput - `Properties.description` ('%s') provided, but no 'Description' TextLabel found in template, or it's not a TextLabel.",tostring(a5)))end;local cs={["component_type"]="input",["Text"]=y,["Description"]=a5,["IsDisabled"]=A,["__IsVisuallySuppressedByParent"]=false,["__Object"]=C,["__Callback"]=v,["__OriginalColorVariant"]=x,["__OriginalClearTextOnFocus"]=nil,["__OriginalTextColor"]=nil,["SetColorVariant"]=function(self,I)assert(typeof(I)=="string",string.format("InputObject:SetColorVariant - `Variant` must be a string. Got %s.",typeof(I)))assert(self.__Object,"InputObject:SetColorVariant - `self.__Object` is nil.")assert(typeof(self.__Object)=="Instance",string.format("InputObject:SetColorVariant - `self.__Object` is not an Instance. Got %s.",typeof(self.__Object)))self.__Object:SetAttribute("color_variant",I)local aa=self.__Object:FindFirstChild("Header")if not aa then warn("InputObject:SetColorVariant - Input template is missing 'Header'.")return end;local cx=aa:FindFirstChild("TextBox")if not(cx and cx:IsA("TextBox"))then warn("InputObject:SetColorVariant - Input template is missing 'Header.TextBox' or it is not a TextBox.")return end;assert(f["input"],"`InputObject:SetColorVariant` - `ColorMap.input` is nil.")local L=f["input"][I]if not L then warn(string.format("InputObject:SetColorVariant - No variant map found for input variant '%s' for object '%s'.",tostring(I),tostring(self.__Object.Name)))return end;if L["Border"]then cx.BorderColor3=h(L["Border"])end end,["UpdateVisualAndInteractionState"]=function(self)local aa=self.__Object:FindFirstChild("Header")local E=aa and aa:FindFirstChild("Title")local cx=aa and aa:FindFirstChild("TextBox")local aj=self.__Object:FindFirstChild("Description")local an=0;local cy=0;local ao=0;local cz=self.__OriginalTextColor or Color3.fromRGB(50,50,51)local cA=true;local cB=self.__OriginalClearTextOnFocus;if self.IsDisabled then self:SetColorVariant("ad-gray")an=0.5;cy=0.5;ao=0.5;cz=Color3.fromRGB(120,120,120)cA=false;cB=false elseif self.__IsVisuallySuppressedByParent then self:SetColorVariant(self.__OriginalColorVariant or"ad-gray")an=0.5;cy=0.5;ao=0.5 else self:SetColorVariant(self.__OriginalColorVariant or"ad-gray")end;if E and E:IsA("TextLabel")then E.TextTransparency=an end;if aj and aj:IsA("TextLabel")then aj.TextTransparency=ao end;if cx and cx:IsA("TextBox")then cx.BackgroundTransparency=cy;cx.TextColor3=cz;cx.TextEditable=cA;cx.ClearTextOnFocus=cB end end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self.__OriginalColorVariant=self.__Object:GetAttribute("color_variant")local cx=self.__Object:FindFirstChild("Header")and self.__Object.Header:FindFirstChild("TextBox")if cx and cx:IsA("TextBox")then if self.__OriginalTextColor==nil then self.__OriginalTextColor=cx.TextColor3 end;if self.__OriginalClearTextOnFocus==nil then self.__OriginalClearTextOnFocus=cx.ClearTextOnFocus end end;self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}local cC=C:FindFirstChild("Header")and C.Header:FindFirstChild("TextBox")if cC and cC:IsA("TextBox")then if cs.__OriginalClearTextOnFocus==nil then cs.__OriginalClearTextOnFocus=cC.ClearTextOnFocus end;if cs.__OriginalTextColor==nil then cs.__OriginalTextColor=cC.TextColor3 end;cC.Text=a3["value"]or""cC.FocusLost:Connect(function(cD)if cs.IsDisabled then return end;if cs.__Callback then cs.__Callback(cs)end end)cC.Focused:Connect(function()if cs.IsDisabled then if cC:IsFocused()then cC:ReleaseFocus()end end end)else warn("ComponentManager:NewInput - Template for input is missing 'Header.TextBox' TextBox or it's not a TextBox.")end;cs:UpdateVisualAndInteractionState()return cs end;function g:NewHeader(u)assert(typeof(u)=="table",string.format("ComponentManager:NewHeader - `Properties` parameter must be a table. Got %s.",typeof(u)))local a3=u or{}local y=a3["text"]if y then assert(typeof(y)=="string",string.format("ComponentManager:NewHeader - `Properties.text` must be a string if provided. Got %s.",typeof(y)))end;local x=a3["color_variant"]or"ad-gray"assert(typeof(x)=="string",string.format("ComponentManager:NewHeader - `Properties.color_variant` must be a string. Got %s.",typeof(x)))local cE=a3["toggleable"]or false;assert(typeof(cE)=="boolean",string.format("ComponentManager:NewHeader - `Properties.toggleable` must be a boolean. Got %s.",typeof(cE)))assert(self["Components"],"`ComponentManager:NewHeader` - `self.Components` is nil. Was ComponentManager initialized?")assert(self["Components"]["header"],"ComponentManager:NewHeader - `self.Components.header` template is nil.")local B=self["Components"]["header"]assert(typeof(B)=="Instance",string.format("ComponentManager:NewHeader - Header template is not an Instance. Got %s.",typeof(B)))local C=B:Clone()assert(C,"`ComponentManager:NewHeader` - Failed to clone header template.")C.Visible=true;C:SetAttribute("color_variant",x)C:SetAttribute("Enabled",a3["enabled"]or false)local cF={["component_type"]="header",["Text"]=y,["Toggleable"]=cE,["__parentSection"]=nil,["__Object"]=C,["IsDisabled"]=false,["__IsVisuallySuppressedByParent"]=false,["__OriginalColorVariant"]=x,["__UpdateState"]=function(self,a9)print(string.format("HeaderObject %s: __UpdateState called. Enabled: %s, Toggleable: %s, ParentSection: %s",self.__Object.Name,tostring(a9),tostring(self.Toggleable),tostring(self.__parentSection)))if not self.Toggleable then return end;local ab=self.__Object:FindFirstChild("Track")local ac=ab and ab:FindFirstChild("Handle")if ac and ab then local ae=UDim2.new(0.75,0,0.5,0)local af=UDim2.new(0.25,0,0.5,0)local ag=TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)local cG=a9 and ae or af;c:Create(ac,ag,{Position=cG}):Play()end;if self.Toggleable and self.__parentSection then print(string.format("  HeaderObject %s: Is toggleable and has parentSection. ParentSection name: %s",self.__Object.Name,self.__parentSection.__Object and self.__parentSection.__Object.Name or"N/A"))if a9 then print(string.format("    Calling ParentSection.Enable() for %s",self.__parentSection.__Object and self.__parentSection.__Object.Name or"N/A"))if self.__parentSection.Enable then self.__parentSection:Enable()end else print(string.format("    Calling ParentSection.Disable() for %s",self.__parentSection.__Object and self.__parentSection.__Object.Name or"N/A"))if self.__parentSection.Disable then self.__parentSection:Disable()end end else print(string.format("  HeaderObject %s: Not calling parent section Enable/Disable. Toggleable: %s, HasParent: %s",self.__Object.Name,tostring(self.Toggleable),tostring(self.__parentSection~=nil)))end;self:UpdateVisualAndInteractionState()end,["SetColorVariant"]=function(self,I)self.__Object:SetAttribute("color_variant",I)local ab=self.__Object:FindFirstChild("Track")local ac=ab and ab:FindFirstChild("Handle")local L=f["header"][I]if not L then warn("SetColorVariant: No variant map found for header variant",I)return end;if ab then ab.ImageColor3=h(L["Track"])end;if ac then ac.ImageColor3=h(L["Handle"])end end,["UpdateVisualAndInteractionState"]=function(self)local E=self.__Object:FindFirstChild("Title")local ab=self.__Object:FindFirstChild("Track")local ac=ab and ab:FindFirstChild("Handle")local R=ab and ab:FindFirstChild("Interaction")local ak=self.__Object:GetAttribute("Enabled")or false;local an=0;local al=self.Toggleable and(ak and 0 or 0.25)or 1;local am=self.Toggleable and(ak and 0 or 0.25)or 1;local W=self.Toggleable;local X=self.Toggleable;if self.IsDisabled then self:SetColorVariant("ad-gray")an=0.5;if self.Toggleable then al=0.5;am=0.5 end;W=false;X=false elseif self.__IsVisuallySuppressedByParent then self:SetColorVariant(self.__OriginalColorVariant or"ad-gray")an=0.5;if self.Toggleable then al=math.max(0.5,al)am=math.max(0.5,am)end else self:SetColorVariant(self.__OriginalColorVariant or"ad-gray")an=self.Toggleable and(ak and 0 or 0.35)or 0 end;if E and E:IsA("TextLabel")then E.TextTransparency=an end;if ab then ab.ImageTransparency=al end;if ac then ac.ImageTransparency=am end;if R and R:IsA("GuiButton")then R.Selectable=W;R.Active=X end end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}if y and C:FindFirstChild("Title")then C.Title.Text=y end;if cE then local ab=C:FindFirstChild("Track")local R=ab and ab:FindFirstChild("Interaction")if R then R.MouseButton1Click:Connect(function()if cF.IsDisabled then return end;local ar=C:GetAttribute("Enabled")local as=not ar;C:SetAttribute("Enabled",as)cF.__UpdateState(cF,as)end)end else local ab=C:FindFirstChild("Track")if ab then ab.Visible=false end end;cF.__UpdateState(cF,C:GetAttribute("Enabled"))cF:SetColorVariant(x)return cF end;function g:NewSubHeader(u)local a3=u or{}local y=a3["text"]local B=self["Components"]and self["Components"]["sub-header"]if not B then assert(false,"No sub-header template found")end;local C=B:Clone()C.Visible=true;local cH={["component_type"]="sub-header",["Text"]=y,["__Object"]=C,["IsDisabled"]=false,["__IsVisuallySuppressedByParent"]=false,["UpdateVisualAndInteractionState"]=function(self)local cI=0;if self.IsDisabled or self.__IsVisuallySuppressedByParent then cI=0.5 end;if self.__Object and self.__Object:IsA("TextLabel")then self.__Object.TextTransparency=cI end end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}if y then assert(typeof(C.Text)=="string"or typeof(y)=="nil",string.format("ComponentManager:NewSubHeader - ObjectInstance.Text must be a string or nil. Got %s",typeof(C.Text)))C.Text=y end;cH:UpdateVisualAndInteractionState()return cH end;function g:NewParagraph(u)local a3=u or{}local y=a3["text"]local B=self["Components"]and self["Components"]["paragraph"]if not B then assert(false,string.format("No paragraph template found"))end;local C=B:Clone()C.Visible=true;local cJ={["component_type"]="paragraph",["Text"]=y,["IsDisabled"]=false,["__IsVisuallySuppressedByParent"]=false,["__Object"]=C,["UpdateVisualAndInteractionState"]=function(self)local cI=0;if self.IsDisabled or self.__IsVisuallySuppressedByParent then cI=0.5 end;if self.__Object and self.__Object:IsA("TextLabel")then self.__Object.TextTransparency=cI end end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}if y then assert(typeof(C.Text)=="string"or typeof(y)=="nil",string.format("ComponentManager:NewParagraph - ObjectInstance.Text must be a string or nil. Got %s",typeof(C.Text)))C.Text=y end;cJ:UpdateVisualAndInteractionState()return cJ end;function g:NewFooter(u)local a3=u or{}local y=a3["text"]local B=self["Components"]and self["Components"]["footer"]if not B then assert(false,string.format("No footer template found"))end;local C=B:Clone()C.Visible=true;local cK={["component_type"]="footer",["Text"]=y,["IsDisabled"]=false,["__IsVisuallySuppressedByParent"]=false,["__Object"]=C,["UpdateVisualAndInteractionState"]=function(self)local cI=0;if self.IsDisabled or self.__IsVisuallySuppressedByParent then cI=0.5 end;if self.__Object and self.__Object:IsA("TextLabel")then self.__Object.TextTransparency=cI end end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}if y then assert(typeof(C.Text)=="string"or typeof(y)=="nil",string.format("ComponentManager:NewFooter - ObjectInstance.Text must be a string or nil. Got %s",typeof(C.Text)))C.Text=y end;cK:UpdateVisualAndInteractionState()return cK end;function g:NewDivider(u)local a3=u or{}local x=a3["color_variant"]or"ad-gray"local B=self["Components"]and self["Components"]["divider"]if not B then assert(false,string.format("No divider template found"))end;local C=B:Clone()C.Visible=true;local cL={["component_type"]="divider",["IsDisabled"]=false,["__Object"]=C,["__OriginalColorVariant"]=x,["SetColorVariant"]=function(self,I)assert(typeof(I)=="string",string.format("DividerObject:SetColorVariant - `Variant` must be a string. Got %s.",typeof(I)))self.__Object:SetAttribute("color_variant",I)if self.__Object:IsA("ImageLabel")or self.__Object:IsA("ImageButton")then self.__Object.ImageColor3=h(I)end end,["UpdateVisualAndInteractionState"]=function(self)local cI=0;local cM=self.__OriginalColorVariant or"ad-gray"if self.IsDisabled then cM="ad-gray"cI=0.5 elseif self.__IsVisuallySuppressedByParent then cI=0.5 end;self:SetColorVariant(cM)if self.__Object:IsA("ImageLabel")or self.__Object:IsA("ImageButton")then self.__Object.ImageTransparency=cI elseif self.__Object:IsA("Frame")then self.__Object.BackgroundTransparency=cI end end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}cL:UpdateVisualAndInteractionState()return cL end;function g:NewSection(u)local a3=u or{}local B=self["Components"]and self["Components"]["section"]if not B then assert(false,string.format("No section template found"))end;local C=B:Clone()C.Visible=true;for m,P in C:GetChildren()do if not table.find({"UIListLayout","UIPadding","UICorner"},P.ClassName)then P:Destroy()end end;local cN=C:FindFirstChildOfClass("UIListLayout")if not cN then cN=Instance.new("UIListLayout")cN.FillDirection=Enum.FillDirection.Vertical;cN.SortOrder=Enum.SortOrder.LayoutOrder;cN.HorizontalAlignment=Enum.HorizontalAlignment.Left;cN.VerticalAlignment=Enum.VerticalAlignment.Top;cN.Padding=UDim.new(0,8)cN.Parent=C end;local cO={["component_type"]="section",["content"]=a3["content"],["__Object"]=C,["IsDisabled"]=false}function cO:Disable()print(string.format("SectionObject:Disable() called for '%s'. IsDisabled: %s",self.__Object and self.__Object.Name or"N/A",tostring(self.IsDisabled)))if self.content and#self.content>0 then for aR,cP in self.content do if cP then local cQ=cP.__Object and cP.__Object.Name or"UnknownChild"local cR=cP.component_type or"UnknownType"cP.__IsVisuallySuppressedByParent=true;if cP.component_type=="header"and cP.__parentSection==self then print(string.format("  Skipping UpdateVisualAndInteractionState for controlling child Header %d: '%s' (Type: %s). It handles its own state via __UpdateState.",aR,cQ,cR))elseif cP.UpdateVisualAndInteractionState then print(string.format("  Calling UpdateVisualAndInteractionState for child %d: '%s' (Type: %s) due to section disabling.",aR,cQ,cR))cP:UpdateVisualAndInteractionState()else print(string.format("  Child %d: '%s' (Type: %s) does not have an UpdateVisualAndInteractionState method. Skipping.",aR,cQ,cR))end else print(string.format("  Child %d is nil.",aR))end end else print("  SectionObject has no content to visually suppress.")end end;function cO:Enable()print(string.format("SectionObject:Enable() called for '%s'. IsDisabled: %s",self.__Object and self.__Object.Name or"N/A",tostring(self.IsDisabled)))if self.content and#self.content>0 then for aR,cP in self.content do if cP then local cQ=cP.__Object and cP.__Object.Name or"UnknownChild"local cR=cP.component_type or"UnknownType"cP.__IsVisuallySuppressedByParent=false;if cP.component_type=="header"and cP.__parentSection==self then print(string.format("  Skipping UpdateVisualAndInteractionState for controlling child Header %d: '%s' (Type: %s). It handles its own state via __UpdateState.",aR,cQ,cR))elseif cP.UpdateVisualAndInteractionState then print(string.format("  Calling UpdateVisualAndInteractionState for child %d: '%s' (Type: %s) due to section enabling.",aR,cQ,cR))cP:UpdateVisualAndInteractionState()else print(string.format("  Child %d: '%s' (Type: %s) does not have an UpdateVisualAndInteractionState method. Skipping.",aR,cQ,cR))end else print(string.format("  Child %d is nil.",aR))end end else print("  SectionObject has no content to visually un-suppress.")end end;if a3["content"]and#a3["content"]>0 then assert(typeof(a3["content"])=="table",string.format("ComponentManager:NewSection - `Properties.content` must be a table. Got %s.",typeof(a3["content"])))local cS=#a3["content"]for cT,cU in a3["content"]do assert(typeof(cU)=="table",string.format("ComponentManager:NewSection - Child component object at index %d in `content` is not a table. Got %s.",cT,typeof(cU)))assert(cU.__Object,string.format("ComponentManager:NewSection - Child component object at index %d in `content` is missing `__Object`.",cT))assert(typeof(cU.__Object)=="Instance",string.format("ComponentManager:NewSection - Child component object's `__Object` at index %d is not an Instance. Got %s.",cT,typeof(cU.__Object)))cU.__Object.LayoutOrder=cT;local cV=cS-cT;cU.__Object.ZIndex=cU.__Object.ZIndex+cV;cU.__Object.Parent=C;if cU.component_type=="header"and cU.Toggleable then print(string.format("  NewSection %s: Linking Toggleable Header '%s' to this section.",cO.__Object.Name,cU.__Object.Name))cU.__parentSection=cO;local cW=cU.__Object:GetAttribute("Enabled")print(string.format("    NewSection %s: Triggering __UpdateState for Header '%s' with Enabled: %s",cO.__Object.Name,cU.__Object.Name,tostring(cW)))cU:__UpdateState(cW)end end end;return cO end;function g:NewContainer(u)local a3=u or{}local p=a3["sub_type"]or"primary"local B=self["Components"]and self["Components"]["container"]and self["Components"]["container"][p]if not B then assert(false,string.format("No container template found for sub_type: %s",tostring(p)))end;local C=B:Clone()C.Visible=true;local cX={["component_type"]="container",["sub_type"]=p,["__Object"]=C}if p=="primary"then local cY=C:FindFirstChildOfClass("UIListLayout")if not cY then cY=Instance.new("UIListLayout")cY.FillDirection=Enum.FillDirection.Vertical;cY.SortOrder=Enum.SortOrder.LayoutOrder;cY.HorizontalAlignment=Enum.HorizontalAlignment.Left;cY.VerticalAlignment=Enum.VerticalAlignment.Top;cY.Padding=UDim.new(0,8)cY.Parent=C end;local cZ=C;local c_=C:FindFirstChild("1")if c_ and c_:IsA("GuiObject")then cZ=c_;local d0=cZ:FindFirstChildOfClass("UIListLayout")if not d0 then d0=Instance.new("UIListLayout")d0.FillDirection=Enum.FillDirection.Vertical;d0.SortOrder=Enum.SortOrder.LayoutOrder;d0.HorizontalAlignment=Enum.HorizontalAlignment.Left;d0.VerticalAlignment=Enum.VerticalAlignment.Top;d0.Padding=UDim.new(0,8)d0.Parent=cZ end end;if a3["content"]and#a3["content"]>0 then assert(typeof(a3["content"])=="table",string.format("ComponentManager:NewContainer (primary) - `Properties.content` must be a table. Got %s.",typeof(a3["content"])))local d1=#a3["content"]for cT,cU in a3["content"]do assert(typeof(cU)=="table",string.format("ComponentManager:NewContainer (primary) - Child component object at index %d in `content` is not a table. Got %s.",cT,typeof(cU)))assert(cU.__Object,string.format("ComponentManager:NewContainer (primary) - Child component object at index %d in `content` is missing `__Object`.",cT))assert(typeof(cU.__Object)=="Instance",string.format("ComponentManager:NewContainer (primary) - Child component object's `__Object` at index %d is not an Instance. Got %s.",cT,typeof(cU.__Object)))cU.__Object.LayoutOrder=cT;local cV=d1-cT;cU.__Object.ZIndex=cU.__Object.ZIndex+cV;cU.__Object.Parent=cZ end end else local cY=C:FindFirstChildOfClass("UIListLayout")if not cY then cY=Instance.new("UIListLayout")cY.FillDirection=Enum.FillDirection.Horizontal;cY.SortOrder=Enum.SortOrder.LayoutOrder;cY.HorizontalAlignment=Enum.HorizontalAlignment.Left;cY.VerticalAlignment=Enum.VerticalAlignment.Top;cY.Padding=UDim.new(0,8)cY.Parent=C end;if a3["columns"]and#a3["columns"]>0 then assert(typeof(a3["columns"])=="table",string.format("ComponentManager:NewContainer (multi-column) - `Properties.columns` must be a table. Got %s.",typeof(a3["columns"])))for aR=1,#a3["columns"]do local d2=a3["columns"][aR]assert(typeof(d2)=="table",string.format("ComponentManager:NewContainer (multi-column) - ColumnData at index %d is not a table. Got %s.",aR,typeof(d2)))local c_=C[tostring(aR)]assert(c_,string.format("ComponentManager:NewContainer (multi-column) - Column frame '%s' not found in template '%s'.",tostring(aR),C.Name))assert(typeof(c_)=="Instance"and c_:IsA("GuiObject"),string.format("ComponentManager:NewContainer (multi-column) - Column frame '%s' is not a GuiObject Instance. Got %s.",tostring(aR),typeof(c_)))c_.LayoutOrder=aR;local d3=c_:FindFirstChildOfClass("UIListLayout")if not d3 then d3=Instance.new("UIListLayout")d3.FillDirection=Enum.FillDirection.Vertical;d3.SortOrder=Enum.SortOrder.LayoutOrder;d3.HorizontalAlignment=Enum.HorizontalAlignment.Left;d3.VerticalAlignment=Enum.VerticalAlignment.Top;d3.Padding=UDim.new(0,8)d3.Parent=c_ end;if d2 and d2["content"]and#d2["content"]>0 then assert(typeof(d2["content"])=="table",string.format("ComponentManager:NewContainer (multi-column) - ColumnData[%d].content is not a table. Got %s.",aR,typeof(d2["content"])))local d4=#d2["content"]for d5,cU in d2["content"]do assert(typeof(cU)=="table",string.format("ComponentManager:NewContainer (multi-column) - Child component object at index %d in ColumnData[%d].content is not a table. Got %s.",d5,aR,typeof(cU)))assert(cU.__Object,string.format("ComponentManager:NewContainer (multi-column) - Child component object at index %d in ColumnData[%d].content is missing `__Object`.",d5,aR))assert(typeof(cU.__Object)=="Instance",string.format("ComponentManager:NewContainer (multi-column) - Child component object's `__Object` at index %d in ColumnData[%d].content is not an Instance. Got %s.",d5,aR,typeof(cU.__Object)))cU.__Object.LayoutOrder=d5;local d6=d4-d5;cU.__Object.ZIndex=cU.__Object.ZIndex+d6;cU.__Object.Parent=c_ end end end end end;return cX end;function g:NewButtonToggle(u,v)assert(typeof(u)=="table",string.format("ComponentManager:NewButtonToggle - `Properties` parameter must be a table. Got %s.",typeof(u)))if v then assert(typeof(v)=="function",string.format("ComponentManager:NewButtonToggle - `Callback` parameter must be a function if provided. Got %s.",typeof(v)))end;local a3=u or{}local p=a3["sub_type"]or"split"assert(typeof(p)=="string",string.format("ComponentManager:NewButtonToggle - `Properties.sub_type` must be a string. Got %s.",typeof(p)))local d7=a3["text"]if d7 then assert(typeof(d7)=="table",string.format("ComponentManager:NewButtonToggle - `Properties.text` must be a table. Got %s.",typeof(d7)))end;local d8=a3["icon"]if d8 then assert(typeof(d8)=="table",string.format("ComponentManager:NewButtonToggle - `Properties.icon` must be a table. Got %s.",typeof(d8)))end;local d9=a3["selected_color"]or"ad-green"assert(typeof(d9)=="string",string.format("ComponentManager:NewButtonToggle - `Properties.selected_color` must be a string. Got %s.",typeof(d9)))local da=a3["unselected_color"]or"ad-gray"assert(typeof(da)=="string",string.format("ComponentManager:NewButtonToggle - `Properties.unselected_color` must be a string. Got %s.",typeof(da)))local db=a3["initial_selection"]or 1;assert(typeof(db)=="number",string.format("ComponentManager:NewButtonToggle - `Properties.initial_selection` must be a number. Got %s.",typeof(db)))local A=a3["disabled"]or false;local dc=({["split"]=2,["double-split"]=3,["triple-split"]=4})[p]or 2;assert(db>=1 and db<=dc,string.format("ComponentManager:NewButtonToggle - `initial_selection` (%d) is out of range for ButtonCount (%d).",db,dc))local B=nil;assert(self["Components"],"`ComponentManager:NewButtonToggle` - `self.Components` is nil. Was ComponentManager initialized?")assert(self["Components"]["button-toggle"],"ComponentManager:NewButtonToggle - `self.Components[\"button-toggle\"]` is nil.")assert(typeof(self["Components"]["button-toggle"])=="table",string.format("ComponentManager:NewButtonToggle - `self.Components[\"button-toggle\"]` is not a table. Got %s.",typeof(self["Components"]["button-toggle"])))if self["Components"]and self["Components"]["button-toggle"]and self["Components"]["button-toggle"][p]then B=self["Components"]["button-toggle"][p]end;assert(B,string.format("ComponentManager:NewButtonToggle - No button-toggle template found for sub_type: `%s`.",tostring(p)))assert(typeof(B)=="Instance",string.format("ComponentManager:NewButtonToggle - Button-toggle template for sub_type `%s` is not an Instance. Got %s.",tostring(p),typeof(B)))local C=B:Clone()assert(C,string.format("ComponentManager:NewButtonToggle - Failed to clone button-toggle template for sub_type `%s`.",tostring(p)))C.Visible=true;local dd={}local de={["component_type"]="button-toggle",["sub_type"]=p,["IsDisabled"]=A,["__IsVisuallySuppressedByParent"]=false,["__Object"]=C,["__Buttons"]=dd,["__Callback"]=v,["__ButtonCount"]=dc,["__CurrentSelection"]=db,["__SelectedColor"]=d9,["__UnselectedColor"]=da,["__SegmentSpecificColors"]={},["GetSelection"]=function(self)return self.__CurrentSelection end,["SetSelection"]=function(self,df)assert(typeof(df)=="number",string.format("ButtonToggleObject:SetSelection - `Selection` must be a number. Got %s.",typeof(df)))if df>=1 and df<=self.__ButtonCount then local dg=self.__CurrentSelection~=df;self.__CurrentSelection=df;self:UpdateVisualAndInteractionState()if dg and self.__Callback and not self.IsDisabled and not self.__IsVisuallySuppressedByParent then self.__Callback(self)end end end,["UpdateVisualAndInteractionState"]=function(self)for cT=1,self.__ButtonCount do local dh=self.__Buttons[cT]if dh and dh.__Object and dh._AnimateFace then local di=dh.__Object;local dj=di:FindFirstChild("Interaction")local dk=cT==self.__CurrentSelection;if dj then local S=0;local T=0;local U=0;local V=0;local W=true;local X=true;local dl=self.__SegmentSpecificColors and self.__SegmentSpecificColors[cT]and self.__SegmentSpecificColors[cT].selected or self.__SelectedColor;local dm=self.__SegmentSpecificColors and self.__SegmentSpecificColors[cT]and self.__SegmentSpecificColors[cT].unselected or self.__UnselectedColor;local dn=dk and dl or dm;local dp=dk and dh.__PressedFacePosition or dh.__OriginalFacePosition;if self.IsDisabled then dn="ad-gray"dp=dh.__PressedFacePosition;S=0;T=0;U=0;V=0;W=false;X=false elseif self.__IsVisuallySuppressedByParent then dn="ad-gray"S=0;T=0;U=0.5;V=0.5 else S=0;T=0;U=0;V=0 end;dh:SetColorVariant(dn)dh:_AnimateFace(dp)local dq=di:FindFirstChild("Face")local dr=di:FindFirstChild("Backing")local ds=dq and dq:FindFirstChild("Display")local dt=ds and ds:FindFirstChild("Title")local du=ds and ds:FindFirstChild("Icon")if dq and(dq:IsA("Frame")or dq:IsA("ImageLabel")or dq:IsA("TextLabel"))then dq.BackgroundTransparency=S end;if dr then if di:GetAttribute("sub_type")=="secondary"then if dr:IsA("Frame")or dr:IsA("ImageLabel")then dr.BackgroundTransparency=T end else for m,dv in dr:GetChildren()do if dv:IsA("Frame")or dv:IsA("ImageLabel")then dv.BackgroundTransparency=T end end end end;if dt and dt:IsA("TextLabel")then dt.TextTransparency=U end;if du and du:IsA("ImageLabel")then du.ImageTransparency=V end;if dj:IsA("GuiButton")then dj.Selectable=W;dj.Active=X end else warn("ButtonToggleObject:UpdateVisualAndInteractionState - Segment "..cT.." missing Interaction child.")end end end end,["SetColorVariant"]=function(self,I)if string.find(I,"|")then local dw={}for dv in string.gmatch(I,"[^|]+")do table.insert(dw,dv)end;for aR=1,self.__ButtonCount do local dx=dw[aR*2-1]local dy=dw[aR*2]if dx and dy then self.__SegmentSpecificColors[aR]={selected=dx,unselected=dy}elseif dx then self.__SegmentSpecificColors[aR]={selected=dx,unselected=self.__UnselectedColor}else self.__SegmentSpecificColors[aR]={selected=self.__SelectedColor,unselected=self.__UnselectedColor}end end elseif I and I~=""then self.__SelectedColor=I;self.__UnselectedColor="ad-gray"table.clear(self.__SegmentSpecificColors)else self.__SelectedColor="ad-green"self.__UnselectedColor="ad-gray"table.clear(self.__SegmentSpecificColors)end;self.__Object:SetAttribute("color_variant_string",I)self:UpdateVisualAndInteractionState()end,["Disable"]=function(self)if self.IsDisabled then return end;self.IsDisabled=true;self:UpdateVisualAndInteractionState()end,["Enable"]=function(self)if not self.IsDisabled then return end;self.IsDisabled=false;self:UpdateVisualAndInteractionState()end}for cT=1,dc do local dz=C:FindFirstChild(tostring(cT))assert(dz,string.format("ComponentManager:NewButtonToggle - Pre-made button instance `%s` not found in template `%s`.",tostring(cT),C.Name))assert(typeof(dz)=="Instance",string.format("ComponentManager:NewButtonToggle - Pre-made button `%s` is not an Instance. Got %s.",tostring(cT),typeof(dz)))if dz then local D=dz:FindFirstChild("Face")and dz.Face:FindFirstChild("Display")if D then local E=D:FindFirstChild("Title")local F=D:FindFirstChild("Icon")local dA=d7 and d7[cT]if E then if dA and typeof(dA)=="string"and dA~=""then E.Text=dA else E:Destroy()end elseif dA and typeof(dA)=="string"and dA~=""then warn(string.format("ComponentManager:NewButtonToggle - Segment %d text ('%s') provided, but no Title object found in segment template.",cT,dA))end;local dB=d8 and d8[cT]if F then if dB and typeof(dB)=="string"and dB~=""then F.Image=dB;F.Visible=true else F:Destroy()end elseif dB and typeof(dB)=="string"and dB~=""then warn(string.format("ComponentManager:NewButtonToggle - Segment %d icon ('%s') provided, but no Icon object found in segment template.",cT,dB))end else warn(string.format("ComponentManager:NewButtonToggle - Segment %d template is missing Face/Display structure. Cannot set text/icon.",cT))end;local dC=dz:FindFirstChild("Face")assert(dC,"ButtonToggle Segment missing Face for animation setup")local dD=dC.Position;local dE=UDim2.new(0,0,0,dz.AbsoluteSize.Y-dC.AbsoluteSize.Y)local dF=TweenInfo.new(0.1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)local dG={["__Object"]=dz,["__OriginalFacePosition"]=dD,["__PressedFacePosition"]=dE,["_AnimateFace"]=function(self,H)local dH=self.__Object:FindFirstChild("Face")if dH then c:Create(dH,dF,{["Position"]=H}):Play()end end,["SetColorVariant"]=function(self,I)assert(typeof(I)=="string",string.format("ButtonToggle.Button[%d]:SetColorVariant - `Variant` must be a string. Got %s.",cT,typeof(I)))local C=self.__Object;local dI=C:GetAttribute("sub_type")or"primary"assert(f["button"],string.format("ButtonToggle.Button[%d]:SetColorVariant `ColorMap.button` is nil.",cT))local dJ=f["button"][dI]assert(dJ,string.format("ButtonToggle.Button[%d]:SetColorVariant `ColorMap.button[%s]` is nil.",cT,dI))local L=dJ[I]if not L then warn(string.format("ButtonToggle.Button[%d]:SetColorVariant - No variant map for `%s` sub_type `%s` variant `%s`. Using ad-gray as fallback.",cT,C.Name,dI,I))L=dJ["ad-gray"]if not L then warn(string.format("ButtonToggle.Button[%d]:SetColorVariant - Fallback ad-gray also not found for sub_type `%s`. Cannot set colors.",cT,dI))return end end;local function dK(dL)if not dL then return end;for m,P in dL:GetDescendants()do if P.Name=="Cornering"then if P:IsA("ImageLabel")then P.ImageColor3=P.Parent.BackgroundColor3 elseif P:IsA("Frame")or P:IsA("GuiObject")then P.BackgroundColor3=P.Parent.BackgroundColor3 end end end end;local dM=C:FindFirstChild("Backing")if dM then if L["Backing"]then if dI=="secondary"then if typeof(L["Backing"])=="string"then dM.BackgroundColor3=h(L["Backing"])end else local dN=dM:FindFirstChild("Left")if dN and L["Backing"]["Left"]then dN.BackgroundColor3=h(L["Backing"]["Left"])end;local dO=dM:FindFirstChild("Center")if dO and L["Backing"]["Center"]then dO.BackgroundColor3=h(L["Backing"]["Center"])end;local dP=dM:FindFirstChild("Right")if dP and L["Backing"]["Right"]then dP.BackgroundColor3=h(L["Backing"]["Right"])end;dK(dM)end end end;local N=C:FindFirstChild("Face")if N then if L["Face"]then if L["Face"]["Main"]then local dQ=h(L["Face"]["Main"])if dQ then N.BackgroundColor3=dQ end end;local dR=N:FindFirstChild("Coloring")if dR then if L["Face"]["Coloring"]then local dS=h(L["Face"]["Coloring"])if dS then dR.BackgroundColor3=dS else warn(string.format("ButtonToggle.Button[%d]:SetColorVariant (SingleButtonSegment) - Failed to get Color3 for ColoringInstance (variant: %s, color name: %s).",cT,I,tostring(L["Face"]["Coloring"])))end else warn(string.format("ButtonToggle.Button[%d]:SetColorVariant (SingleButtonSegment) - VariantMap.Face.Coloring is missing for variant `%s`.",cT,I))end end end end;dK(N)C:SetAttribute("color_variant",I)end}dd[cT]=dG;local R=dz:FindFirstChild("Interaction")assert(R,string.format("ComponentManager:NewButtonToggle - Button `%s` missing `Interaction` child.",tostring(cT)))assert(typeof(R)=="Instance"and R:IsA("GuiButton"),string.format("ComponentManager:NewButtonToggle - `Interaction` for `%s` not GuiButton. Got %s.",tostring(cT),typeof(R)))if R then local dT=false;R.MouseButton1Down:Connect(function()if de.IsDisabled then return end;dT=true;dG:_AnimateFace(dG.__PressedFacePosition)de:SetSelection(cT)end)R.MouseButton1Up:Connect(function()if dT then dT=false end end)R.MouseLeave:Connect(function()if dT then dT=false end end)end end end;de:UpdateVisualAndInteractionState()return de end;function g:GetToggleState(a8)assert(typeof(a8)=="table",string.format("ComponentManager:GetToggleState - `ToggleObject` must be a table. Got %s.",typeof(a8)))assert(a8.__Object,"ComponentManager:GetToggleState - `ToggleObject.__Object` is nil.")assert(typeof(a8.__Object)=="Instance",string.format("ComponentManager:GetToggleState - `ToggleObject.__Object` is not an Instance. Got %s.",typeof(a8.__Object)))local dU=a8.__Object:GetAttribute("Enabled")assert(typeof(dU)=="boolean"or dU==nil,string.format("ComponentManager:GetToggleState - Attribute `Enabled` on `%s` is not a boolean or nil. Got %s.",a8.__Object.Name,typeof(dU)))return dU or false end;function g:SetToggleState(a8,a9)assert(typeof(a8)=="table",string.format("ComponentManager:SetToggleState - `ToggleObject` must be a table. Got %s.",typeof(a8)))assert(a8.__Object,"ComponentManager:SetToggleState - `ToggleObject.__Object` is nil.")assert(typeof(a8.__Object)=="Instance",string.format("ComponentManager:SetToggleState - `ToggleObject.__Object` is not an Instance. Got %s.",typeof(a8.__Object)))assert(typeof(a9)=="boolean",string.format("ComponentManager:SetToggleState - `Enabled` parameter must be a boolean. Got %s.",typeof(a9)))a8.__Object:SetAttribute("Enabled",a9)assert(typeof(a8.__UpdateState)=="function",string.format("ComponentManager:SetToggleState - `ToggleObject.__UpdateState` is not a function. Got %s.",typeof(a8.__UpdateState)))a8.__UpdateState(a8,a9)if a8.__Callback then assert(typeof(a8.__Callback)=="function",string.format("ComponentManager:SetToggleState - `ToggleObject.__Callback` is not a function (if it exists). Got %s.",typeof(a8.__Callback)))a8.__Callback(a8)end end;function g:GetSliderValue(c3)assert(typeof(c3)=="table",string.format("ComponentManager:GetSliderValue - `SliderObject` must be a table. Got %s.",typeof(c3)))assert(c3.__Object,"ComponentManager:GetSliderValue - `SliderObject.__Object` is nil.")assert(typeof(c3.__Object)=="Instance",string.format("ComponentManager:GetSliderValue - `SliderObject.__Object` is not an Instance. Got %s.",typeof(c3.__Object)))local dV=c3.__Object:GetAttribute("Value")assert(typeof(dV)=="number"or dV==nil,string.format("ComponentManager:GetSliderValue - Attribute `Value` on `%s` is not a number or nil. Got %s.",c3.__Object.Name,typeof(dV)))return dV or 0 end;function g:SetSliderValue(c3,bL)assert(typeof(c3)=="table",string.format("ComponentManager:SetSliderValue - `SliderObject` must be a table. Got %s.",typeof(c3)))assert(c3.__Object,"ComponentManager:SetSliderValue - `SliderObject.__Object` is nil.")assert(typeof(c3.__Object)=="Instance",string.format("ComponentManager:SetSliderValue - `SliderObject.__Object` is not an Instance. Got %s.",typeof(c3.__Object)))assert(typeof(bL)=="number",string.format("ComponentManager:SetSliderValue - `Value` parameter must be a number. Got %s.",typeof(bL)))assert(typeof(c3.__UpdateValue)=="function",string.format("ComponentManager:SetSliderValue - `SliderObject.__UpdateValue` is not a function. Got %s.",typeof(c3.__UpdateValue)))c3.__UpdateValue(c3,bL,true)end;function g:GetButtonState(G)assert(typeof(G)=="table",string.format("ComponentManager:GetButtonState - `ButtonObject` must be a table. Got %s.",typeof(G)))assert(G.__Object,"ComponentManager:GetButtonState - `ButtonObject.__Object` is nil.")assert(typeof(G.__Object)=="Instance",string.format("ComponentManager:GetButtonState - `ButtonObject.__Object` is not an Instance. Got %s.",typeof(G.__Object)))local dW=G.__Object:GetAttribute("IsPressed")assert(typeof(dW)=="boolean"or dW==nil,string.format("ComponentManager:GetButtonState - Attribute `IsPressed` on `%s` is not a boolean or nil. Got %s.",G.__Object.Name,typeof(dW)))return dW or false end;function g:SetButtonState(G,a2)assert(typeof(G)=="table",string.format("ComponentManager:SetButtonState - `ButtonObject` must be a table. Got %s.",typeof(G)))assert(G.__Object,"ComponentManager:SetButtonState - `ButtonObject.__Object` is nil.")assert(typeof(G.__Object)=="Instance",string.format("ComponentManager:SetButtonState - `ButtonObject.__Object` is not an Instance. Got %s.",typeof(G.__Object)))assert(typeof(a2)=="boolean",string.format("ComponentManager:SetButtonState - `IsPressed` parameter must be a boolean. Got %s.",typeof(a2)))G.__Object:SetAttribute("IsPressed",a2)if G.__Callback then assert(typeof(G.__Callback)=="function",string.format("ComponentManager:SetButtonState - `ButtonObject.__Callback` is not a function (if it exists). Got %s.",typeof(G.__Callback)))G.__Callback(G)end end;function g:GetInputValue(cs)assert(typeof(cs)=="table",string.format("ComponentManager:GetInputValue - `InputObject` must be a table. Got %s.",typeof(cs)))assert(cs.__Object,"ComponentManager:GetInputValue - `InputObject.__Object` is nil.")assert(typeof(cs.__Object)=="Instance",string.format("ComponentManager:GetInputValue - `InputObject.__Object` is not an Instance. Got %s.",typeof(cs.__Object)))local a7=cs.__Object:FindFirstChild("Header")assert(a7,string.format("ComponentManager:GetInputValue - `InputObject.__Object (%s)` is missing `Header` child.",cs.__Object.Name))assert(typeof(a7)=="Instance",string.format("ComponentManager:GetInputValue - `Header` in `%s` is not an Instance. Got %s.",cs.__Object.Name,typeof(a7)))local cx=a7:FindFirstChild("TextBox")assert(cx,string.format("ComponentManager:GetInputValue - `Header` in `%s` is missing `TextBox` child.",cs.__Object.Name))assert(typeof(cx)=="Instance"and cx:IsA("TextBox"),string.format("ComponentManager:GetInputValue - `TextBox` in `%s.Header` is not a TextBox. Got %s.",cs.__Object.Name,typeof(cx)))local dX="unknown"if cx then dX=typeof(cx.Text)end;assert(cx and(typeof(cx.Text)=="string"or cx.Text==nil),string.format("ComponentManager:GetInputValue - `TextBox.Text` in `%s.Header.TextBox` is not a string or nil. Got %s.",cs.__Object.Name,dX))return cx and cx.Text or""end;function g:SetInputValue(cs,bL)assert(typeof(cs)=="table",string.format("ComponentManager:SetInputValue - `InputObject` must be a table. Got %s.",typeof(cs)))assert(cs.__Object,"ComponentManager:SetInputValue - `InputObject.__Object` is nil.")assert(typeof(cs.__Object)=="Instance",string.format("ComponentManager:SetInputValue - `InputObject.__Object` is not an Instance. Got %s.",typeof(cs.__Object)))assert(typeof(bL)=="string",string.format("ComponentManager:SetInputValue - `Value` parameter must be a string. Got %s.",typeof(bL)))local a7=cs.__Object:FindFirstChild("Header")assert(a7,string.format("ComponentManager:SetInputValue - `InputObject.__Object (%s)` is missing `Header` child.",cs.__Object.Name))assert(typeof(a7)=="Instance",string.format("ComponentManager:SetInputValue - `Header` in `%s` is not an Instance. Got %s.",cs.__Object.Name,typeof(a7)))local cx=a7:FindFirstChild("TextBox")assert(cx,string.format("ComponentManager:SetInputValue - `Header` in `%s` is missing `TextBox` child.",cs.__Object.Name))assert(typeof(cx)=="Instance"and cx:IsA("TextBox"),string.format("ComponentManager:SetInputValue - `TextBox` in `%s.Header` is not a TextBox. Got %s.",cs.__Object.Name,typeof(cx)))if cx then cx.Text=bL;if cs.__Callback then assert(typeof(cs.__Callback)=="function",string.format("ComponentManager:SetInputValue - `InputObject.__Callback` is not a function (if it exists). Got %s.",typeof(cs.__Callback)))cs.__Callback(cs)end end end;function g:InitializeSillyIcon()assert(self["Components"],"`ComponentManager:InitializeSillyIcon` - `self.Components` is nil. Was ComponentManager initialized?")local dY=self["Components"]and self["Components"]["silly-icon"]assert(dY,"`ComponentManager:InitializeSillyIcon` - Component `silly-icon` not found in `self.Components`. Check Init function and template names.")assert(typeof(dY)=="Instance"and dY:IsA("ImageLabel"),string.format("ComponentManager:InitializeSillyIcon - `silly-icon` component (`%s`) is not an ImageLabel. Got %s.",dY and dY.Name or"N/A",typeof(dY)))local dZ={"rbxassetid://7175807079","rbxassetid://16867923622","rbxassetid://16867923884","rbxassetid://16722877105","rbxassetid://16723019826","rbxassetid://16712390722","rbxassetid://92359954165995","rbxassetid://81565372535157"}local d_="rbxassetid://100235478170812"local e0=math.random()<0.05;local e1=e0 and d_ or dZ[math.random(1,#dZ)]dY.Image=e1;dY.Visible=true end;assert(g,"Test Script - Failed to load ComponentManager.")local e2={}e2.__index=e2;function e2:Init(e3,e4)local e5=e3;local k=e5:WaitForChild("Frame",5)assert(k,"`Library:Init` - Could not find `Frame` in `ActualScreenGui` within 5 seconds.")assert(typeof(k)=="Instance",string.format("Library:Init - `Frame` is not an Instance. Got %s.",typeof(k)))local e6=setmetatable({["__ComponentManager"]=g,["__Frame"]=k,["__CategoryButtons"]={},["__Pages"]={}},e2)assert(e6.__ComponentManager,"`Library:Init` - `ComponentManager` not set on `Application` table.")e6.__ComponentManager:Init(k)e6:InitializeCloseButton()e.InputBegan:Connect(function(e7,e8)if e8 then return end;if e7.KeyCode==Enum.KeyCode.P then if e5 then e5.Enabled=not e5.Enabled;print(e5.Enabled and"Enabled"or"Disabled","AdAutoGui")end end end)assert(typeof(e6)=="table",string.format("Library:Init - Failed to create `Application` table. Got %s.",typeof(e6)))e5.Parent=b;e5.Enabled=e4;print("Intialized AdAutoGui")return e6 end;function e2:NewButton(u,v)assert(typeof(u)=="table",string.format("Library:NewButton(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))if v then assert(typeof(v)=="function",string.format("Library:NewButton(%s) - `Callback` must be a function. Got %s.",tostring(v),typeof(v)))end;local n=self["__ComponentManager"]:NewButton(u,v)assert(n and typeof(n)=="table"and n.__Object,"`Library:NewButton` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewToggle(u,v)assert(typeof(u)=="table",string.format("Library:NewToggle(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))if v then assert(typeof(v)=="function",string.format("Library:NewToggle(%s) - `Callback` must be a function. Got %s.",tostring(v),typeof(v)))end;local n=self["__ComponentManager"]:NewToggle(u,v)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewToggle` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewDropdown(u)assert(typeof(u)=="table",string.format("Library:NewDropdown(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local n=self["__ComponentManager"]:NewDropdown(u)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewDropdown` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewSlider(u,v)assert(typeof(u)=="table",string.format("Library:NewSlider(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))if v then assert(typeof(v)=="function",string.format("Library:NewSlider(%s) - `Callback` must be a function. Got %s.",tostring(v),typeof(v)))end;local n=self["__ComponentManager"]:NewSlider(u,v)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewSlider` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewInput(u,v)assert(typeof(u)=="table",string.format("Library:NewInput(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))if v then assert(typeof(v)=="function",string.format("Library:NewInput(%s) - `Callback` must be a function. Got %s.",tostring(v),typeof(v)))end;local n=self["__ComponentManager"]:NewInput(u,v)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewInput` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewButtonToggle(u,v)assert(typeof(u)=="table",string.format("Library:NewButtonToggle(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))if v then assert(typeof(v)=="function",string.format("Library:NewButtonToggle(%s) - `Callback` must be a function. Got %s.",tostring(v),typeof(v)))end;local n=self["__ComponentManager"]:NewButtonToggle(u,v)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewButtonToggle` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewHeader(u)assert(typeof(u)=="table",string.format("Library:NewHeader(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local n=self["__ComponentManager"]:NewHeader(u)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewHeader` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewSubHeader(u)assert(typeof(u)=="table",string.format("Library:NewSubHeader(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local n=self["__ComponentManager"]:NewSubHeader(u)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewSubHeader` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewParagraph(u)assert(typeof(u)=="table",string.format("Library:NewParagraph(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local n=self["__ComponentManager"]:NewParagraph(u)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewParagraph` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewFooter(u)assert(typeof(u)=="table",string.format("Library:NewFooter(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local n=self["__ComponentManager"]:NewFooter(u)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewFooter` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewDivider(u)assert(typeof(u)=="table",string.format("Library:NewDivider(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local n=self["__ComponentManager"]:NewDivider(u)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewDivider` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewSection(u)assert(typeof(u)=="table",string.format("Library:NewSection(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local n=self["__ComponentManager"]:NewSection(u)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewSection` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewContainer(u)assert(typeof(u)=="table",string.format("Library:NewContainer(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local n=self["__ComponentManager"]:NewContainer(u)assert(n and typeof(n)=="table"and n["__Object"],"`Library:NewContainer` - Failed to create component or `component.__Object` is nil.")return n end;function e2:NewComponent(u)assert(typeof(u)=="table",string.format("Library:NewComponent(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))local o=u["component_type"]assert(o,"`Library:NewComponent({Properties})` - `Properties` table must contain `component_type`.")assert(typeof(o)=="string",string.format("Library:NewComponent({Properties}) - `component_type` must be a string. Got %s.",typeof(o)))local e9=self.__ComponentManager;assert(e9,"`Library:NewComponent` - `ComponentManager` not initialized. Call `Library:Init` first.")local n;local v=u["callback"]if v then assert(typeof(v)=="function",string.format("Library:NewComponent({Properties}) - `Callback` must be a function if provided. Got %s.",typeof(v)))end;local ea="New"..string.gsub(string.gsub(o,"%-(%l)",string.upper),"^%l",string.upper)local eb=e9[ea]assert(eb and typeof(eb)=="function",string.format("Library:NewComponent - No creation method found for `%s`.",ea))n=eb(e9,u,v)assert(n,string.format("Library:NewComponent - Failed to create or find component logic for `type`: `%s`.",o))if not n.__Object then warn(string.format("Library:NewComponent - Component created for `type` '%s' is missing `__Object`.",o))return n end;assert(typeof(n.__Object)=="Instance",string.format("Library:NewComponent - `Component.__Object` is not an Instance for `type`: `%s`. Got %s.",o,typeof(n.__Object)))if u["size"]then assert(typeof(u["size"])=="UDim2",string.format("Library:NewComponent({Properties}) - `size` property must be a UDim2 value. Got %s.",typeof(u["size"])))n.__Object.Size=u["size"]end;if u["position"]then assert(typeof(u["position"])=="UDim2",string.format("Library:NewComponent({Properties}) - `position` property must be a UDim2 value. Got %s.",typeof(u["position"])))n.__Object.Position=u["position"]end;if u["anchor_point"]then assert(typeof(u["anchor_point"])=="Vector2",string.format("Library:NewComponent({Properties}) - `anchor_point` property must be a Vector2 value. Got %s.",typeof(u["anchor_point"])))n.__Object.AnchorPoint=u["anchor_point"]end;return n end;function e2:__NewPage(ec)assert(typeof(ec)=="string",string.format("Library:__NewPage(%s) - `PageName` must be a string. Got %s.",tostring(ec),typeof(ec)))self.__Pages=self.__Pages or{}self.__Pages[ec]=self.__Pages[ec]or{}assert(typeof(self.__Pages[ec])=="table",string.format("Library:__NewPage(%s) - Failed to create page entry for `%s`. Got %s.",tostring(ec),tostring(ec),typeof(self["__Pages"][ec])))return self.__Pages[ec]end;function e2:NewCategory(u)assert(typeof(u)=="table",string.format("Library:NewCategory(%s) - `Properties` must be a table. Got %s.",tostring(u),typeof(u)))assert(self.__Frame,"`Library:NewCategory` - `App.Frame` not set. Did you use `Library:Init`?")assert(typeof(self.__Frame)=="Instance",string.format("Library:NewCategory - `App.Frame` is not an Instance. Got %s.",typeof(self["__Frame"])))local ed=self.__Frame:WaitForChild("Body",5)assert(ed,"`Library:NewCategory` - Could not find `Frame.Body` within 5 seconds.")assert(typeof(ed)=="Instance",string.format("Library:NewCategory - `Frame.Body` is not an Instance. Got %s.",typeof(ed)))local ee=ed:WaitForChild("Categories",5)assert(ee,"`Library:NewCategory` - Could not find `Frame.Body.Categories` within 5 seconds.")assert(typeof(ee)=="Instance",string.format("Library:NewCategory - `Frame.Body.Categories` is not an Instance. Got %s.",typeof(ee)))u=u or{}local ec=u.category_name or"Category"..(self.__Pages and#self.__Pages or"0")assert(typeof(ec)=="string",string.format("Library:NewCategory - `PageName` resolved to a non-string value. Got %s.",typeof(ec)))local ef=u["button"]or{component_type="button",sub_type="primary",color_variant="ad-green",text=ec}assert(typeof(ef)=="table",string.format("Library:NewCategory - `ButtonPropertiesToUse` is not a table. Got %s.",typeof(ef)))local eg=self:NewComponent(ef)if not eg or not eg["__Object"]then warn(string.format("Library:NewCategory - Failed to create category button or `button.__Object` is nil for page: `%s`.",tostring(ec)))else assert(typeof(eg["__Object"])=="Instance",string.format("Library:NewCategory - `CategoryButton.__Object` is not an Instance. Got %s.",typeof(eg["__Object"])))eg["__Object"].Parent=ee;if u["category_name"]and eg["__Object"].Face then local Q=eg["__Object"].Face;assert(typeof(Q)=="Instance",string.format("Library:NewCategory - `CategoryButton.Face` is not an Instance. Got %s.",typeof(Q)))if Q.Display and Q.Display.Title then local E=Q.Display.Title;assert(typeof(E)=="Instance"and E:IsA("TextLabel"),string.format("Library:NewCategory - `CategoryButton.Face.Display.Title` is not a TextLabel. Got %s.",typeof(E)))E.Text=u["category_name"]end end;if eg["component_type"]=="button"then eg["__Callback"]=function()self:ShowPage(ec)end;assert(typeof(eg)=="table"and rawget(eg,"__Callback")~=nil,"`Library:NewCategory` - `CategoryButton` is missing `__Callback` field or is not a table for callback assignment.")assert(typeof(eg["__Callback"])=="function",string.format("Library:NewCategory - Failed to assign callback function to `CategoryButton`. Got %s.",typeof(eg["__Callback"])))end end;self:__NewPage(ec)self["__CategoryButtons"]=self["__CategoryButtons"]or{}assert(typeof(self["__CategoryButtons"])=="table",string.format("Library:NewCategory - `__CategoryButtons` is not a table. Got %s.",typeof(self["__CategoryButtons"])))self["__CategoryButtons"][ec]={button=eg,defaultColor=ef["color_variant"]or"ad-green"}assert(typeof(self["__CategoryButtons"][ec])=="table",string.format("Library:NewCategory - Failed to create entry in `__CategoryButtons` for `%s`. Got %s.",tostring(ec),typeof(self["__CategoryButtons"][ec])))local eh={["content"]=u["content"],["category_button"]=self["__CategoryButtons"][ec]}assert(typeof(eh)=="table",string.format("Library:NewCategory - Failed to create `NewCategoryObject`. Got %s.",typeof(eh)))if u["content"]then assert(typeof(u["content"])=="table",string.format("Library:NewCategory(%s) - `Properties.content` must be a table if provided. Got %s.",tostring(u),typeof(u["content"])))if#u["content"]>0 then for m,ei in u["content"]do local ej=ei;assert(typeof(ej)=="table"and ej["__Object"],string.format("Library:NewCategory - `ContentItem` in `Properties.content` is invalid or missing `__Object`. Got %s.",typeof(ej)))self:AddToPage(ec,ej)end end end;if u["navigate_to_page"]then assert(typeof(u["navigate_to_page"])=="boolean",string.format("Library:NewCategory(%s) - `navigate_to_page` must be a boolean. Got %s.",tostring(u),typeof(u["navigate_to_page"])))self:ShowPage(ec)end;return eh end;function e2:AddToPage(ec,ek)assert(typeof(ec)=="string",string.format("Library:AddToPage(%s) - `PageName` must be a string. Got %s.",tostring(ec),typeof(ec)))assert(ek,"Library:AddToPage({Element}) - `Element` cannot be nil.")self["__Pages"]=self["__Pages"]or{}self:__NewPage(ec)local el;if typeof(ek)=="table"and ek["__Object"]then el=ek["__Object"]assert(typeof(el)=="Instance",string.format("Library:AddToPage({Element}) - `Element.__Object` is not an Instance. Got %s.",typeof(el)))else el=ek;assert(typeof(el)=="Instance",string.format("Library:AddToPage({Element}) - `Element` is not an Instance (when not a component table). Got %s.",typeof(el)))end;assert(self["__Pages"][ec],string.format("Library:AddToPage - Page `%s` does not exist in `__Pages` table.",tostring(ec)))table.insert(self["__Pages"][ec],el)end;function e2:ShowPage(ec)assert(typeof(ec)=="string",string.format("Library:ShowPage(%s) - `PageName` must be a string. Got %s.",tostring(ec),typeof(ec)))assert(self["__Frame"]and self["__Frame"]["Body"]and self["__Frame"]["Body"]["ScrollComplex"]and self["__Frame"]["Body"]["ScrollComplex"]["ScrollingFrame"]and self["__Frame"]["Body"]["ScrollComplex"]["ScrollingFrame"]["Content"],"`Library:ShowPage` - Path to `Content` Frame is invalid or incomplete.")local em=self["__Frame"]["Body"]["ScrollComplex"]["ScrollingFrame"]["Content"]assert(typeof(em)=="Instance",string.format("Library:ShowPage - `Content` frame is not an Instance. Got %s.",typeof(em)))for m,en in em:GetChildren()do if en:IsA("GuiObject")then en.Parent=nil end end;if self["__Pages"]and self["__Pages"][ec]then assert(typeof(self["__Pages"][ec])=="table",string.format("Library:ShowPage - Page data for `%s` is not a table. Got %s.",tostring(ec),typeof(self["__Pages"][ec])))for m,eo in self["__Pages"][ec]do if eo then assert(typeof(eo)=="Instance",string.format("Library:ShowPage - `PageElement` in page `%s` is not an Instance. Got %s.",tostring(ec),typeof(eo)))eo.Parent=em end end end;if self["__CategoryButtons"]then assert(typeof(self["__CategoryButtons"])=="table",string.format("Library:ShowPage - `__CategoryButtons` is not a table. Got %s.",typeof(self["__CategoryButtons"])))for ep,eq in self["__CategoryButtons"]do assert(typeof(eq)=="table",string.format("Library:ShowPage - `ButtonData` for `%s` is not a table. Got %s.",tostring(ep),typeof(eq)))local er=ep==ec and"ad-honey"or eq["defaultColor"]assert(typeof(er)=="string",string.format("Library:ShowPage - `TargetColor` is not a string. Got %s.",typeof(er)))if eq["button"]then assert(typeof(eq["button"])=="table",string.format("Library:ShowPage - `ButtonData.button` for `%s` is not a table. Got %s.",tostring(ep),typeof(eq["button"])))if eq["button"].SetColorVariant then assert(typeof(eq["button"].SetColorVariant)=="function",string.format("Library:ShowPage - `ButtonData.button.SetColorVariant` for `%s` is not a function. Got %s.",tostring(ep),typeof(eq["button"].SetColorVariant)))eq["button"]:SetColorVariant(er)else warn(string.format("Library:ShowPage - `ButtonData.button.SetColorVariant` is nil for `PageNameKey`: `%s`.",tostring(ep)))end else warn(string.format("Library:ShowPage - `ButtonData.button` is nil for `PageNameKey`: `%s`.",tostring(ep)))end end end end;function e2:RemoveFromPage(ec,ek)assert(typeof(ec)=="string",string.format("Library:RemoveFromPage(%s) - `PageName` must be a string. Got %s.",tostring(ec),typeof(ec)))assert(ek,"Library:RemoveFromPage({Element}) - `Element` cannot be nil.")local es=self["__Pages"]and self["__Pages"][ec]if not es then return end;assert(typeof(es)=="table",string.format("Library:RemoveFromPage - Page data for `%s` is not a table. Got %s.",tostring(ec),typeof(es)))local et;if typeof(ek)=="table"and ek["__Object"]then et=ek["__Object"]assert(typeof(et)=="Instance",string.format("Library:RemoveFromPage({Element}) - `Element.__Object` is not an Instance. Got %s.",typeof(et)))else et=ek;assert(typeof(et)=="Instance",string.format("Library:RemoveFromPage({Element}) - `Element` is not an Instance (when not a component table). Got %s.",typeof(et)))end;for cT=#es,1,-1 do if es[cT]==et then table.remove(es,cT)break end end end;function e2:ClearPage(ec)assert(typeof(ec)=="string",string.format("Library:ClearPage(%s) - `PageName` must be a string. Got %s.",tostring(ec),typeof(ec)))local es=self["__Pages"]and self["__Pages"][ec]if not es then return end;assert(typeof(es)=="table",string.format("Library:ClearPage - Page data for `%s` is not a table. Got %s.",tostring(ec),typeof(es)))for m,eo in es do if eo and eo.Parent then assert(typeof(eo)=="Instance",string.format("Library:ClearPage - `PageElement` in page `%s` is not an Instance. Got %s.",tostring(ec),typeof(eo)))eo.Parent=nil end end;self["__Pages"][ec]={}end;function e2:ListPages()local eu={}if not self["__Pages"]then return eu end;assert(typeof(self["__Pages"])=="table",string.format("Library:ListPages - `__Pages` is not a table. Got %s.",typeof(self["__Pages"])))for ev,m in self["__Pages"]do assert(typeof(ev)=="string",string.format("Library:ListPages - Page name key (`%s`) is not a string. Got %s.",tostring(ev),typeof(ev)))table.insert(eu,ev)end;return eu end;function e2:InitializeCloseButton()assert(self["__Frame"],"`Library:InitializeCloseButton` - `App.Frame` not set. Did you use `Library:Init`?")local a7=self["__Frame"]:FindFirstChild("Header")if not a7 then warn("`Library:InitializeCloseButton` - `Header` not found in `Frame`.")return end;assert(typeof(a7)=="Instance",string.format("Library:InitializeCloseButton - `Header` is not an Instance. Got %s.",typeof(a7)))local ew={["component_type"]="button",["sub_type"]="primary",["icon"]="rbxassetid://4842266604",["color_variant"]="ad-red",["size"]=UDim2.fromOffset(50,50),["anchor_point"]=Vector2.new(1,0),["position"]=UDim2.fromScale(1,0),["callback"]=function(self)assert(typeof(self)=="table"and self["__Object"],"`Library:InitializeCloseButton` (callback) - `self` or `self.__Object` is nil.")assert(typeof(self["__Object"])=="Instance",string.format("Library:InitializeCloseButton (callback) - `self.__Object` is not an Instance. Got %s.",typeof(self["__Object"])))if not self["__Object"].Parent then return end;print("Close button pressed")local ex=self["__Object"]:FindFirstAncestorOfClass("ScreenGui")assert(ex,string.format("Library:InitializeCloseButton (callback) - `App` was not found."))if not ex then return end;ex.Enabled=false end}assert(typeof(ew)=="table",string.format("Library:InitializeCloseButton - `CLOSE_BUTTON_PROPERTIES` is not a table. Got %s.",typeof(ew)))assert(typeof(ew["callback"])=="function",string.format("Library:InitializeCloseButton - `CLOSE_BUTTON_PROPERTIES.callback` is not a function. Got %s.",typeof(ew["callback"])))local ey=self:NewComponent(ew)if not ey or not ey["__Object"]then warn("`Library:InitializeCloseButton` - Failed to create the close button or its `__Object` is nil.")return end;assert(typeof(ey)=="table"and typeof(ey["__Object"])=="Instance",string.format("Library:InitializeCloseButton - `CloseButton` is invalid or `__Object` is not an Instance. CloseButton type: `%s`, __Object type: `%s`.",typeof(ey),typeof(ey["__Object"])))ey["__Object"].Name="CloseButton"ey["__Object"].LayoutOrder=-1;ey["__Object"].Parent=a7 end;assert(e2,"Test Script - Failed to load Library.")local ez={}function ez.New()local eA=os.clock()local eB=Instance.new("ScreenGui")do eB.Name="AdAutoApp"end;local eC=Instance.new("Frame")do eC.Name="Frame"eC.Position=UDim2.new(0.5,0,0.5,0)eC.AnchorPoint=Vector2.new(0.5,0.5)eC.Size=UDim2.new(0,800,0,600)eC.BackgroundColor3=Color3.fromRGB(178,178,179)eC.ZIndex=-2;eC.Parent=eB end;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,16)eD.Parent=eC end;local eE=Instance.new("UIPadding")do eE.PaddingTop=UDim.new(0,8)eE.PaddingBottom=UDim.new(0,8)eE.PaddingLeft=UDim.new(0,8)eE.PaddingRight=UDim.new(0,8)eE.Parent=eC end;local eF=Instance.new("Frame")do eF.Name="Header"eF.Size=UDim2.new(1,0,0,50)eF.BorderSizePixel=0;eF.BackgroundTransparency=1;eF.Parent=eC;local eG=Instance.new("Frame")do eG.Name="version-note"eG.Position=UDim2.new(0.86,0,0,8)eG.Size=UDim2.new(0,75,0,75)eG.AnchorPoint=Vector2.new(0.5,0)eG.ZIndex=5;eG.BackgroundTransparency=1;eG.BorderSizePixel=0;eG.Parent=eF;local bq=Instance.new("ImageLabel")do bq.Name="Shadow"bq.Image="rbxassetid://5560547547"bq.Size=UDim2.new(0.75,25,0.75,60)bq.Position=UDim2.new(0.5,0,0.5,0)bq.AnchorPoint=Vector2.new(0.5,0.5)bq.Rotation=-10;bq.ZIndex=-1;bq.BackgroundTransparency=1;bq.BorderSizePixel=0;bq.Parent=eG end;local eH=Instance.new("ImageLabel")do eH.Name="Tape"eH.Image="rbxassetid://7175815439"eH.AnchorPoint=Vector2.new(0.5,0)eH.Position=UDim2.new(0.5,0,0,0)eH.Size=UDim2.new(1.25,0,0.34,0)eH.ZIndex=3;eH.BackgroundTransparency=1;eH.BorderSizePixel=0;eH.Parent=eG end;local eI=Instance.new("ImageButton")do eI.Name="StickyNote"eI.Image="rbxassetid://7175815385"eI.ImageColor3=Color3.fromRGB(255,244,89)eI.Size=UDim2.new(0.75,0,0.75,0)eI.Rotation=-10;eI.Position=UDim2.new(0.5,0,0.5,0)eI.AnchorPoint=Vector2.new(0.5,0.5)eI.BackgroundTransparency=1;eI.BorderSizePixel=0;eI.Parent=eG;local eJ=Instance.new("TextLabel")do eJ.Name="Version"eJ.Text="v0.01"eJ.TextColor3=Color3.fromRGB(172,13,13)eJ.Font=Enum.Font.PermanentMarker;eJ.TextScaled=true;eJ.TextTransparency=0.1;eJ.Position=UDim2.new(0,0,0.6,0)eJ.Size=UDim2.new(1,0,0.25,0)eJ.BackgroundTransparency=1;eJ.BorderSizePixel=0;eJ.Parent=eI end;local eK=Instance.new("TextLabel")do eK.Name="VersionType"eK.Text="Alpha"eK.TextColor3=Color3.fromRGB(255,0,0)eK.Font=Enum.Font.PermanentMarker;eK.TextScaled=true;eK.TextTransparency=0.1;eK.Position=UDim2.new(0,0,0.2,0)eK.Size=UDim2.new(1,0,0.375,0)eK.BackgroundTransparency=1;eK.BorderSizePixel=0;eK.Parent=eI end end end;local eL=Instance.new("ImageLabel")do eL.Name="InsetSpace"eL.Image="rbxassetid://2577092891"eL.ImageColor3=Color3.fromRGB(50,50,51)eL.Size=UDim2.new(0,476,1,8)eL.Position=UDim2.new(1,-58,0,-8)eL.AnchorPoint=Vector2.new(1,0)eL.ScaleType=Enum.ScaleType.Tile;eL.TileSize=UDim2.new(1,0,3,0)eL.ZIndex=-1;eL.BackgroundTransparency=1;eL.BorderSizePixel=0;eL.Parent=eF;local eM=Instance.new("TextBox")do eM.Name="SearchBox"eM.Position=UDim2.new(0.5,0,0.5,0)eM.AnchorPoint=Vector2.new(0.5,0.5)eM.Size=UDim2.new(0.5,0,1,-16)eM.BackgroundColor3=Color3.fromRGB(178,178,178)eM.Text=""eM.PlaceholderText="Enter Search..."eM.PlaceholderColor3=Color3.fromRGB(50,50,51)eM.TextColor3=Color3.fromRGB(50,50,51)eM.Font=Enum.Font.SourceSans;eM.TextScaled=true;eM.BorderSizePixel=0;eM.Parent=eL;local eN=Instance.new("UICorner")do eN.CornerRadius=UDim.new(0,10)eN.Parent=eM end end end;local eO=Instance.new("ImageLabel")do eO.Name="silly-icon"eO.Size=UDim2.new(0,50,0,50)eO.Rotation=-15;eO.BackgroundTransparency=1;eO.BorderSizePixel=0;eO.Image="rbxassetid://16722877105"eO.Parent=eF end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,298,0,50)E.Position=UDim2.new(0,58,0,0)E.Text="AdAutoGUI"E.TextColor3=Color3.fromRGB(50,50,51)E.TextScaled=true;E.Font=Enum.Font.SourceSansBold;E.TextXAlignment=Enum.TextXAlignment.Left;E.BackgroundTransparency=1;E.BorderSizePixel=0;E.Parent=eF end end;local eP=Instance.new("Frame")do eP.Name="Body"eP.Position=UDim2.new(0,0,1,0)eP.Size=UDim2.new(1,0,1,-60)eP.AnchorPoint=Vector2.new(0,1)eP.BorderSizePixel=0;eP.BackgroundTransparency=1;eP.Parent=eC;local ee=Instance.new("Frame")do ee.Name="Categories"ee.Size=UDim2.new(0,200,1,0)ee.BackgroundColor3=Color3.fromRGB(255,255,255)ee.BorderSizePixel=0;ee.Parent=eP;local eQ=Instance.new("UICorner")do eQ.CornerRadius=UDim.new(0,8)eQ.Parent=ee end;local eR=Instance.new("UIListLayout")do eR.Padding=UDim.new(0,8)eR.SortOrder=Enum.SortOrder.LayoutOrder;eR.Parent=ee end;local eS=Instance.new("UIPadding")do eS.PaddingTop=UDim.new(0,8)eS.PaddingBottom=UDim.new(0,8)eS.PaddingLeft=UDim.new(0,8)eS.PaddingRight=UDim.new(0,8)eS.Parent=ee end end;local eT=Instance.new("Frame")do eT.Name="ScrollComplex"eT.Size=UDim2.new(1,-208,1,0)eT.Position=UDim2.new(1,0,0,0)eT.AnchorPoint=Vector2.new(1,0)eT.BackgroundTransparency=1;eT.BorderSizePixel=0;eT.Parent=eP;local eU=Instance.new("Frame")do eU.Name="ScrollbarBacking"eU.AnchorPoint=Vector2.new(1,0.5)eU.BackgroundColor3=Color3.fromRGB(50,50,51)eU.Position=UDim2.new(1,0,0.5,0)eU.Size=UDim2.new(0,20,1,8)eU.BorderSizePixel=0;eU.Parent=eT;local eV=Instance.new("UICorner")do eV.CornerRadius=UDim.new(0,8)eV.Parent=eU end end;local l=Instance.new("ScrollingFrame")do l.Name="ScrollingFrame"l.Size=UDim2.new(1,-4,1,0)l.ZIndex=2;l.BottomImage="rbxassetid://2577230880"l.MidImage="rbxassetid://2577230871"l.TopImage="rbxassetid://2577230883"l.ScrollingDirection=Enum.ScrollingDirection.Y;l.AutomaticCanvasSize=Enum.AutomaticSize.Y;l.CanvasSize=UDim2.new(0,0,0,0)l.BackgroundTransparency=1;l.BorderSizePixel=0;l.Parent=eT;local eW=Instance.new("UIPadding")do eW.PaddingBottom=UDim.new(0,48)eW.Parent=l end;local em=Instance.new("Frame")do em.Name="Content"em.Size=UDim2.new(1,-24,1,0)em.BackgroundTransparency=1;em.BorderSizePixel=0;em.Parent=l;local eX=Instance.new("UIListLayout")do eX.Padding=UDim.new(0,8)eX.SortOrder=Enum.SortOrder.LayoutOrder;eX.Parent=em end;local eY=Instance.new("Frame")do eY.Name="section"eY.Size=UDim2.new(1,0,0,50)eY.AutomaticSize=Enum.AutomaticSize.Y;eY.BackgroundColor3=Color3.fromRGB(255,255,255)eY.BorderSizePixel=0;eY:SetAttribute("component_type","section")eY.Parent=em;local eZ=Instance.new("UICorner")do eZ.CornerRadius=UDim.new(0,8)eZ.Parent=eY end;local e_=Instance.new("UIListLayout")do e_.Padding=UDim.new(0,8)e_.SortOrder=Enum.SortOrder.LayoutOrder;e_.Parent=eY end;local f0=Instance.new("UIPadding")do f0.PaddingTop=UDim.new(0,8)f0.PaddingBottom=UDim.new(0,8)f0.PaddingLeft=UDim.new(0,8)f0.PaddingRight=UDim.new(0,8)f0.Parent=eY end;local f1=Instance.new("Frame")do f1.Name="container/primary"f1.Size=UDim2.new(1,0,0,20)f1.AutomaticSize=Enum.AutomaticSize.Y;f1.BackgroundColor3=Color3.fromRGB(255,255,255)f1.BorderSizePixel=0;f1.Parent=eY;local f2=Instance.new("Frame")do f2.Name="1"f2.Size=UDim2.new(1,0,0,20)f2.AutomaticSize=Enum.AutomaticSize.Y;f2.BackgroundTransparency=1;f2.BorderSizePixel=0;f2.Parent=f1;local f3=Instance.new("UIListLayout")do f3.Padding=UDim.new(0,8)f3.SortOrder=Enum.SortOrder.LayoutOrder;f3.Parent=f2 end end end;local f4=Instance.new("Frame")do f4.Name="container/two-column"f4.Size=UDim2.new(1,0,0,20)f4.AutomaticSize=Enum.AutomaticSize.Y;f4.BackgroundColor3=Color3.fromRGB(255,255,255)f4.BorderSizePixel=0;f4:SetAttribute("component_type","container")f4:SetAttribute("sub_type","two-column")f4.Parent=eY;local f2=Instance.new("Frame")do f2.Name="1"f2.Size=UDim2.new(0.5,-4,0,20)f2.AutomaticSize=Enum.AutomaticSize.Y;f2.BackgroundTransparency=1;f2.BorderSizePixel=0;f2.Parent=f4;local f3=Instance.new("UIListLayout")do f3.Padding=UDim.new(0,8)f3.SortOrder=Enum.SortOrder.LayoutOrder;f3.Parent=f2 end end;local f5=Instance.new("Frame")do f5.Name="2"f5.Size=UDim2.new(0.5,-4,0,20)f5.Position=UDim2.new(1,0,0,0)f5.AnchorPoint=Vector2.new(1,0)f5.AutomaticSize=Enum.AutomaticSize.Y;f5.BackgroundTransparency=1;f5.BorderSizePixel=0;f5.Parent=f4;local f6=Instance.new("UIListLayout")do f6.Padding=UDim.new(0,8)f6.SortOrder=Enum.SortOrder.LayoutOrder;f6.Parent=f5 end end end;local f7=Instance.new("Frame")do f7.Name="container/three-column"f7.Size=UDim2.new(1,0,0,20)f7.AutomaticSize=Enum.AutomaticSize.Y;f7.BackgroundColor3=Color3.fromRGB(255,255,255)f7.BorderSizePixel=0;f7:SetAttribute("component_type","container")f7:SetAttribute("sub_type","three-column")f7.Parent=eY;local f2=Instance.new("Frame")do f2.Name="1"f2.Size=UDim2.new(0.333,-4,0,20)f2.AutomaticSize=Enum.AutomaticSize.Y;f2.BackgroundTransparency=1;f2.BorderSizePixel=0;f2.Parent=f7;local f3=Instance.new("UIListLayout")do f3.Padding=UDim.new(0,8)f3.SortOrder=Enum.SortOrder.LayoutOrder;f3.Parent=f2 end end;local f5=Instance.new("Frame")do f5.Name="2"f5.Size=UDim2.new(0.333,-4,0,20)f5.Position=UDim2.new(0.5,0,0,0)f5.AnchorPoint=Vector2.new(0.5,0)f5.AutomaticSize=Enum.AutomaticSize.Y;f5.BackgroundTransparency=1;f5.BorderSizePixel=0;f5.Parent=f7;local f6=Instance.new("UIListLayout")do f6.Padding=UDim.new(0,8)f6.SortOrder=Enum.SortOrder.LayoutOrder;f6.Parent=f5 end end;local f8=Instance.new("Frame")do f8.Name="3"f8.Size=UDim2.new(0.333,-4,0,20)f8.Position=UDim2.new(1,0,0,0)f8.AnchorPoint=Vector2.new(1,0)f8.AutomaticSize=Enum.AutomaticSize.Y;f8.BackgroundTransparency=1;f8.BorderSizePixel=0;f8.Parent=f7;local f9=Instance.new("UIListLayout")do f9.Padding=UDim.new(0,8)f9.SortOrder=Enum.SortOrder.LayoutOrder;f9.Parent=f8 end end end;local fa=Instance.new("Frame")do fa.Name="container/four-column"fa.Size=UDim2.new(1,0,0,20)fa.AutomaticSize=Enum.AutomaticSize.Y;fa.BackgroundColor3=Color3.fromRGB(255,255,255)fa.BorderSizePixel=0;fa:SetAttribute("component_type","container")fa:SetAttribute("sub_type","four-column")fa.Parent=eY;local f2=Instance.new("Frame")do f2.Name="1"f2.Size=UDim2.new(0.25,-4,0,20)f2.AutomaticSize=Enum.AutomaticSize.Y;f2.BackgroundTransparency=1;f2.BorderSizePixel=0;f2.Parent=fa;local f3=Instance.new("UIListLayout")do f3.Padding=UDim.new(0,8)f3.SortOrder=Enum.SortOrder.LayoutOrder;f3.Parent=f2 end end;local f5=Instance.new("Frame")do f5.Name="2"f5.Size=UDim2.new(0.25,-5,0,20)f5.Position=UDim2.new(0.25,2,0,0)f5.AutomaticSize=Enum.AutomaticSize.Y;f5.BackgroundTransparency=1;f5.BorderSizePixel=0;f5.Parent=fa;local f6=Instance.new("UIListLayout")do f6.Padding=UDim.new(0,8)f6.SortOrder=Enum.SortOrder.LayoutOrder;f6.Parent=f5 end end;local f8=Instance.new("Frame")do f8.Name="3"f8.Size=UDim2.new(0.25,-5,0,20)f8.Position=UDim2.new(0.75,-2,0,0)f8.AnchorPoint=Vector2.new(1,0)f8.AutomaticSize=Enum.AutomaticSize.Y;f8.BackgroundTransparency=1;f8.BorderSizePixel=0;f8.Parent=fa;local f9=Instance.new("UIListLayout")do f9.Padding=UDim.new(0,8)f9.SortOrder=Enum.SortOrder.LayoutOrder;f9.Parent=f8 end end;local fb=Instance.new("Frame")do fb.Name="4"fb.Size=UDim2.new(0.25,-4,0,20)fb.Position=UDim2.new(1,0,0,0)fb.AnchorPoint=Vector2.new(1,0)fb.AutomaticSize=Enum.AutomaticSize.Y;fb.BackgroundTransparency=1;fb.BorderSizePixel=0;fb.Parent=fa;local fc=Instance.new("UIListLayout")do fc.Padding=UDim.new(0,8)fc.SortOrder=Enum.SortOrder.LayoutOrder;fc.Parent=fb end end end end;local f1=Instance.new("Frame")do f1.Name="container/primary"f1.Size=UDim2.new(1,0,0,20)f1.AutomaticSize=Enum.AutomaticSize.Y;f1.BackgroundColor3=Color3.fromRGB(255,255,255)f1.BorderSizePixel=0;f1:SetAttribute("component_type","container")f1:SetAttribute("exclude",true)f1:SetAttribute("sub_type","primary")f1.Parent=em;local f2=Instance.new("Frame")do f2.Name="1"f2.Size=UDim2.new(1,0,0,20)f2.AutomaticSize=Enum.AutomaticSize.Y;f2.BackgroundTransparency=1;f2.BorderSizePixel=0;f2.Parent=f1;local f3=Instance.new("UIListLayout")do f3.Padding=UDim.new(0,8)f3.SortOrder=Enum.SortOrder.LayoutOrder;f3.Parent=f2 end;local fd=Instance.new("Frame")do fd.Name="container/primary"fd.Size=UDim2.new(1,0,0,20)fd.AutomaticSize=Enum.AutomaticSize.Y;fd.BackgroundTransparency=1;fd.BorderSizePixel=0;fd:SetAttribute("component_type","container")fd:SetAttribute("exclude",true)fd:SetAttribute("sub_type","primary")fd.Parent=f2;local fe=Instance.new("Frame")do fe.Name="1"fe.Size=UDim2.new(1,0,0,20)fe.AutomaticSize=Enum.AutomaticSize.Y;fe.BackgroundTransparency=1;fe.BorderSizePixel=0;fe.ZIndex=2;fe.Parent=fd;local ff=Instance.new("UIListLayout")do ff.Padding=UDim.new(0,8)ff.SortOrder=Enum.SortOrder.LayoutOrder;ff.Parent=fe end;local eF=Instance.new("Frame")do eF.Name="header/ad-gray"eF.Size=UDim2.new(1,0,0,24)eF.BackgroundTransparency=1;eF.BorderSizePixel=0;eF:SetAttribute("color_variant","ad-gray")eF:SetAttribute("component_type","header")eF.Parent=fe;local ab=Instance.new("ImageLabel")do ab.Name="Track"ab.AnchorPoint=Vector2.new(1,0.5)ab.Position=UDim2.new(1,0,0.5,0)ab.Size=UDim2.new(0,64,1,-8)ab.Image="rbxassetid://7368039646"ab.ImageColor3=Color3.fromRGB(50,50,51)ab.BackgroundTransparency=1;ab.BorderSizePixel=0;ab.Parent=eF;local ac=Instance.new("ImageLabel")do ac.Name="Handle"ac.AnchorPoint=Vector2.new(0.5,0.5)ac.Position=UDim2.new(0.75,0,0.5,0)ac.Size=UDim2.new(0,40,0,40)ac.Image="rbxassetid://7368039412"ac.ImageColor3=Color3.fromRGB(50,50,51)ac.BackgroundTransparency=1;ac.BorderSizePixel=0;ac.Parent=ab;local ce=Instance.new("ImageLabel")do ce.Name="Outline"ce.Size=UDim2.new(1,0,1,0)ce.Image="rbxassetid://7368039497"ce.ImageColor3=Color3.fromRGB(255,255,255)ce.BackgroundTransparency=1;ce.BorderSizePixel=0;ce.Parent=ac end end end;local fg=Instance.new("TextLabel")do fg.Name="Title"fg.Size=UDim2.new(1,0,1,0)fg.Text="Header"fg.TextColor3=Color3.fromRGB(50,50,51)fg.Font=Enum.Font.SourceSansBold;fg.TextSize=32;fg.TextXAlignment=Enum.TextXAlignment.Center;fg.BackgroundTransparency=1;fg.BorderSizePixel=0;fg.Parent=eF end end;local fh=Instance.new("TextLabel")do fh.Name="footer"fh.Size=UDim2.new(1,0,0,20)fh.AutomaticSize=Enum.AutomaticSize.Y;fh.Text="Footer"fh.TextColor3=Color3.fromRGB(126,126,129)fh.Font=Enum.Font.SourceSansLight;fh.TextSize=20;fh.TextXAlignment=Enum.TextXAlignment.Center;fh.TextWrapped=true;fh.BackgroundTransparency=1;fh.BorderSizePixel=0;fh:SetAttribute("component_type","footer")fh.Parent=fe end;local fi=Instance.new("TextLabel")do fi.Name="paragraph"fi.Size=UDim2.new(1,0,0,20)fi.AutomaticSize=Enum.AutomaticSize.Y;fi.Text="Paragraph"fi.TextColor3=Color3.fromRGB(50,50,51)fi.Font=Enum.Font.SourceSans;fi.TextSize=20;fi.TextXAlignment=Enum.TextXAlignment.Center;fi.TextWrapped=true;fi.BackgroundTransparency=1;fi.BorderSizePixel=0;fi:SetAttribute("component_type","paragraph")fi.Parent=fe end;local fj=Instance.new("TextLabel")do fj.Name="sub-header"fj.Size=UDim2.new(1,0,0,20)fj.AutomaticSize=Enum.AutomaticSize.Y;fj.Text="Sub-header"fj.TextColor3=Color3.fromRGB(50,50,51)fj.Font=Enum.Font.SourceSansSemibold;fj.TextSize=24;fj.TextXAlignment=Enum.TextXAlignment.Center;fj.TextWrapped=true;fj.BackgroundTransparency=1;fj.BorderSizePixel=0;fj:SetAttribute("component_type","sub-header")fj.Parent=fe end end end;local fk=Instance.new("ImageLabel")do fk.Name="Divider"fk.Size=UDim2.new(1,0,0,10)fk.Image="rbxassetid://7374834418"fk.ImageTransparency=0.5;fk.ImageColor3=Color3.fromRGB(50,50,51)fk.BackgroundTransparency=1;fk.BorderSizePixel=0;fk.Parent=f2 end;local fl=Instance.new("Frame")do fl.Name="input/primary/ad-gray"fl.Size=UDim2.new(1,0,0,24)fl.AutomaticSize=Enum.AutomaticSize.Y;fl.BackgroundTransparency=1;fl.BorderSizePixel=0;fl:SetAttribute("color_variant","ad-gray")fl:SetAttribute("component_type","input")fl:SetAttribute("sub_type","primary")fl.Parent=f2;local fm=Instance.new("UIListLayout")do fm.Padding=UDim.new(0,8)fm.SortOrder=Enum.SortOrder.LayoutOrder;fm.Parent=fl end;local fn=Instance.new("Frame")do fn.Name="Header"fn.Size=UDim2.new(1,0,0,24)fn.LayoutOrder=-1;fn.BackgroundTransparency=1;fn.BorderSizePixel=0;fn.Parent=fl;local fo=Instance.new("TextLabel")do fo.Name="Title"fo.Size=UDim2.new(0.75,0,1,0)fo.Text="Input"fo.TextColor3=Color3.fromRGB(50,50,51)fo.Font=Enum.Font.SourceSansBold;fo.TextScaled=true;fo.TextXAlignment=Enum.TextXAlignment.Left;fo.BackgroundTransparency=1;fo.BorderSizePixel=0;fo.Parent=fn end;local fp=Instance.new("TextBox")do fp.Name="TextBox"fp.Size=UDim2.new(0.25,0,0,20)fp.Position=UDim2.new(1,0,0.5,0)fp.AnchorPoint=Vector2.new(1,0.5)fp.BackgroundColor3=Color3.fromRGB(255,255,255)fp.BorderSizePixel=2;fp.BorderColor3=Color3.fromRGB(50,50,51)fp.Text=""fp.PlaceholderText="Input"fp.TextColor3=Color3.fromRGB(50,50,51)fp.TextScaled=true;fp.TextWrapped=true;fp.ClearTextOnFocus=false;fp.Font=Enum.Font.SourceSans;fp.Parent=fn end end;local fq=Instance.new("TextLabel")do fq.Name="Description"fq.Size=UDim2.new(1,0,0,20)fq.AutomaticSize=Enum.AutomaticSize.Y;fq.TextColor3=Color3.fromRGB(50,50,51)fq.TextSize=20;fq.Font=Enum.Font.SourceSans;fq.Text="This is a small description of what this input does."fq.TextWrapped=true;fq.TextXAlignment=Enum.TextXAlignment.Left;fq.BackgroundTransparency=1;fq.BorderSizePixel=0;fq.Parent=fl end end;local fk=Instance.new("ImageLabel")do fk.Name="Divider"fk.Size=UDim2.new(1,0,0,10)fk.Image="rbxassetid://7374834418"fk.ImageTransparency=0.5;fk.ImageColor3=Color3.fromRGB(50,50,51)fk.BackgroundTransparency=1;fk.BorderSizePixel=0;fk.Parent=f2 end;local fr=Instance.new("Frame")do fr.Name="slider/primary/ad-gray"fr.Size=UDim2.new(1,0,0,24)fr.AutomaticSize=Enum.AutomaticSize.Y;fr.BackgroundTransparency=1;fr.BorderSizePixel=0;fr:SetAttribute("color_variant","ad-gray")fr:SetAttribute("component_type","slider")fr:SetAttribute("sub_type","primary")fr.Parent=f2;local fs=Instance.new("UIListLayout")do fs.Padding=UDim.new(0,8)fs.SortOrder=Enum.SortOrder.LayoutOrder;fs.Parent=fr end;local ft=Instance.new("Frame")do ft.Name="Header"ft.Size=UDim2.new(1,0,0,24)ft.LayoutOrder=-1;ft.BackgroundTransparency=1;ft.BorderSizePixel=0;ft.Parent=fr;local fu=Instance.new("TextLabel")do fu.Name="Title"fu.Size=UDim2.new(0.5,0,1,0)fu.Text="Slider - 0%"fu.TextColor3=Color3.fromRGB(50,50,51)fu.Font=Enum.Font.SourceSansBold;fu.TextScaled=true;fu.TextXAlignment=Enum.TextXAlignment.Left;fu.BackgroundTransparency=1;fu.BorderSizePixel=0;fu.Parent=ft end end;local fv=Instance.new("TextLabel")do fv.Name="Description"fv.Size=UDim2.new(1,0,0,20)fv.AutomaticSize=Enum.AutomaticSize.Y;fv.TextColor3=Color3.fromRGB(50,50,51)fv.TextSize=20;fv.Font=Enum.Font.SourceSans;fv.Text="This is a small description of what this slider does."fv.TextWrapped=true;fv.TextXAlignment=Enum.TextXAlignment.Left;fv.BackgroundTransparency=1;fv.BorderSizePixel=0;fv.Parent=fr end;local c8=Instance.new("ImageButton")do c8.Name="Bar"c8.Position=UDim2.new(1,0,0.5,0)c8.Size=UDim2.new(0.5,0,1,0)c8.AnchorPoint=Vector2.new(1,0.5)c8.BackgroundTransparency=1;c8.Image="rbxassetid://7368039578"c8.ImageColor3=Color3.fromRGB(50,50,51)c8.BorderSizePixel=0;c8.Parent=ft;local ac=Instance.new("ImageButton")do ac.Name="Handle"ac.Size=UDim2.new(0,35,0,35)ac.Position=UDim2.new(0,0,0.5,0)ac.AnchorPoint=Vector2.new(0.5,0.5)ac.Image="rbxassetid://7368039412"ac.ImageColor3=Color3.fromRGB(50,50,51)ac.BackgroundTransparency=1;ac.BorderSizePixel=0;ac.Parent=c8;local ce=Instance.new("ImageLabel")do ce.Name="Outline"ce.Size=UDim2.new(1,0,1,0)ce.Image="rbxassetid://7368039497"ce.BackgroundTransparency=1;ce.BorderSizePixel=0;ce.Parent=ac end end end end;local fk=Instance.new("ImageLabel")do fk.Name="Divider"fk.Size=UDim2.new(1,0,0,10)fk.Image="rbxassetid://7374834418"fk.ImageTransparency=0.5;fk.ImageColor3=Color3.fromRGB(50,50,51)fk.BackgroundTransparency=1;fk.BorderSizePixel=0;fk.Parent=f2 end;local fw=Instance.new("Frame")do fw.Name="dropdown/primary/ad-gray"fw.Size=UDim2.new(1,0,0,24)fw.AutomaticSize=Enum.AutomaticSize.Y;fw.BackgroundTransparency=1;fw.BorderSizePixel=0;fw:SetAttribute("color_variant","ad-gray")fw:SetAttribute("component_type","dropdown")fw:SetAttribute("sub_type","primary")fw.Parent=f2;local fx=Instance.new("UIListLayout")do fx.Padding=UDim.new(0,8)fx.SortOrder=Enum.SortOrder.LayoutOrder;fx.Parent=fw end;local fy=Instance.new("Frame")do fy.Name="Header"fy.Size=UDim2.new(1,0,0,24)fy.LayoutOrder=-1;fy.BackgroundTransparency=1;fy.BorderSizePixel=0;fy.Parent=fw;local fz=Instance.new("TextLabel")do fz.Name="Title"fz.Size=UDim2.new(0.75,0,1,0)fz.Text="Dropdown"fz.TextColor3=Color3.fromRGB(50,50,51)fz.Font=Enum.Font.SourceSansBold;fz.TextScaled=true;fz.TextXAlignment=Enum.TextXAlignment.Left;fz.BackgroundTransparency=1;fz.BorderSizePixel=0;fz.Parent=fy end;local fA=Instance.new("Frame")do fA.Size=UDim2.new(0.25,0,1,0)fA.Position=UDim2.new(1,0,0,0)fA.AnchorPoint=Vector2.new(1,0)fA.BackgroundTransparency=1;fA.BorderSizePixel=0;fA.Parent=fy end;local az=Instance.new("Frame")do az.Name="Darken"az.Size=UDim2.new(1,0,0,4)az.BackgroundColor3=Color3.fromRGB(42,165,68)az.BorderSizePixel=0;az.Parent=fA end;local R=Instance.new("ImageButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,-4)R.Position=UDim2.new(0,0,1,0)R.AnchorPoint=Vector2.new(0,1)R.BackgroundTransparency=1;R.BorderSizePixel=0;R.Image="rbxassetid://5560547435"R.ImageColor3=Color3.fromRGB(75,199,85)R.ZIndex=5;R.Parent=fA;local fB=Instance.new("TextLabel")do fB.Size=UDim2.new(1,0,1,0)fB.BackgroundTransparency=1;fB.BorderSizePixel=0;fB.Parent=fA;fB.Text="None"fB.TextColor3=Color3.fromRGB(255,255,255)fB.Font=Enum.Font.SourceSansBold;fB.TextScaled=true;fB.ZIndex=6;fB.Parent=R end;local fC=Instance.new("ImageLabel")do fC.Name="Shadow"fC.Size=UDim2.new(1,30,1,30)fC.Position=UDim2.new(0.5,0,0.5,0)fC.AnchorPoint=Vector2.new(0.5,0.5)fC.Image="rbxassetid://5560547547"fC.BackgroundTransparency=1;fC.BorderSizePixel=0;fC.Parent=fA end;local fD=Instance.new("ScrollingFrame")do fD.Name="Options"fD.Size=UDim2.new(1,0,0,0)fD.BackgroundColor3=Color3.fromRGB(255,255,255)fD.BackgroundTransparency=1;fD.BorderSizePixel=0;fD.AutomaticCanvasSize=Enum.AutomaticSize.Y;fD.BottomImage="rbxassetid://2577230880"fD.MidImage="rbxassetid://2577230871"fD.TopImage="rbxassetid://2577230883"fD.ScrollBarThickness=4;fD.ScrollingDirection=Enum.ScrollingDirection.Y;fD.ScrollBarImageColor3=Color3.fromRGB(50,50,51)fD.Visible=false;fD.Parent=fA;local fE=Instance.new("UISizeConstraint")do fE.MaxSize=Vector2.new(math.huge,240)fE.MinSize=Vector2.new(0,0)fE.Parent=fD end;local aB=Instance.new("Frame")do aB.Name="Option"aB.Size=UDim2.new(1,0,1,0)aB.BackgroundTransparency=1;aB.BorderSizePixel=0;aB.Visible=false;aB.Parent=fD;local fF=Instance.new("ImageButton")do fF.Name="Interaction"fF.Size=UDim2.new(1,0,1,0)fF.BackgroundTransparency=1;fF.BorderSizePixel=0;fF.Image="rbxassetid://5560547435"fF.ZIndex=4;fF.Parent=aB;local fG=Instance.new("TextLabel")do fG.Size=UDim2.new(1,0,1,0)fG.BackgroundTransparency=1;fG.BorderSizePixel=0;fG.Parent=aB;fG.Text="Option"fG.TextColor3=Color3.fromRGB(50,50,51)fG.Font=Enum.Font.SourceSans;fG.TextScaled=true;fG.Parent=fF end;local fH=Instance.new("ImageLabel")do fH.Name="Shadow"fH.Size=UDim2.new(1,30,1,30)fH.Position=UDim2.new(0.5,0,0.5,0)fH.AnchorPoint=Vector2.new(0.5,0.5)fH.Image="rbxassetid://5560547547"fH.BackgroundTransparency=1;fH.BorderSizePixel=0;fH.Parent=aB end end end end end end;local fI=Instance.new("TextLabel")do fI.Name="Description"fI.Size=UDim2.new(1,0,0,20)fI.AutomaticSize=Enum.AutomaticSize.Y;fI.TextColor3=Color3.fromRGB(50,50,51)fI.TextSize=20;fI.Font=Enum.Font.SourceSans;fI.Text="This is a small description of what this dropdown does."fI.TextWrapped=true;fI.TextXAlignment=Enum.TextXAlignment.Left;fI.BackgroundTransparency=1;fI.BorderSizePixel=0;fI.Parent=fw end end;local fk=Instance.new("ImageLabel")do fk.Name="Divider"fk.Size=UDim2.new(1,0,0,10)fk.Image="rbxassetid://7374834418"fk.ImageTransparency=0.5;fk.ImageColor3=Color3.fromRGB(50,50,51)fk.BackgroundTransparency=1;fk.BorderSizePixel=0;fk.Parent=f2 end;local fJ=Instance.new("Frame")do fJ.Name="toggle/primary/ad-gray"fJ.Size=UDim2.new(1,0,0,24)fJ.AutomaticSize=Enum.AutomaticSize.Y;fJ.BackgroundTransparency=1;fJ.BorderSizePixel=0;fJ:SetAttribute("color_variant","ad-gray")fJ:SetAttribute("component_type","toggle")fJ:SetAttribute("sub_type","primary")fJ.Parent=f2;local fK=Instance.new("UIListLayout")do fK.Padding=UDim.new(0,8)fK.SortOrder=Enum.SortOrder.LayoutOrder;fK.Parent=fJ end;local fL=Instance.new("Frame")do fL.Name="Header"fL.Size=UDim2.new(1,0,0,24)fL.LayoutOrder=-1;fL.BackgroundTransparency=1;fL.BorderSizePixel=0;fL.Parent=fJ;local fM=Instance.new("TextLabel")do fM.Name="Title"fM.Size=UDim2.new(1,-64,1,0)fM.Text="Toggle"fM.TextColor3=Color3.fromRGB(50,50,51)fM.Font=Enum.Font.SourceSansBold;fM.TextScaled=true;fM.TextXAlignment=Enum.TextXAlignment.Left;fM.BackgroundTransparency=1;fM.BorderSizePixel=0;fM.Parent=fL end;local ab=Instance.new("ImageLabel")do ab.Name="Track"ab.AnchorPoint=Vector2.new(1,0.5)ab.Position=UDim2.new(1,0,0.5,0)ab.Size=UDim2.new(0,64,1,-8)ab.Image="rbxassetid://7368039646"ab.ImageColor3=Color3.fromRGB(50,50,51)ab.BackgroundTransparency=1;ab.BorderSizePixel=0;ab.Parent=fL;local ac=Instance.new("ImageLabel")do ac.Name="Handle"ac.AnchorPoint=Vector2.new(0.5,0.5)ac.Position=UDim2.new(0.75,0,0.5,0)ac.Size=UDim2.new(0,40,0,40)ac.Image="rbxassetid://7368039412"ac.ImageColor3=Color3.fromRGB(50,50,51)ac.BackgroundTransparency=1;ac.BorderSizePixel=0;ac.Parent=ab;local ce=Instance.new("ImageLabel")do ce.Name="Outline"ce.Size=UDim2.new(1,0,1,0)ce.Image="rbxassetid://7368039497"ce.ImageColor3=Color3.fromRGB(255,255,255)ce.BackgroundTransparency=1;ce.BorderSizePixel=0;ce.Parent=ac end end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,12)R.Position=UDim2.new(0,0,0.5,0)R.AnchorPoint=Vector2.new(0,0.5)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.Parent=ab end end;local fN=Instance.new("TextLabel")do fN.Name="Description"fN.Size=UDim2.new(1,0,0,20)fN.AutomaticSize=Enum.AutomaticSize.Y;fN.TextColor3=Color3.fromRGB(50,50,51)fN.TextSize=20;fN.Font=Enum.Font.SourceSans;fN.Text="This is a small description of what this toggle does."fN.TextWrapped=true;fN.TextXAlignment=Enum.TextXAlignment.Left;fN.BackgroundTransparency=1;fN.BorderSizePixel=0;fN.Parent=fJ end end;local fk=Instance.new("ImageLabel")do fk.Name="Divider"fk.Size=UDim2.new(1,0,0,10)fk.Image="rbxassetid://7374834418"fk.ImageTransparency=0.5;fk.ImageColor3=Color3.fromRGB(50,50,51)fk.BackgroundTransparency=1;fk.BorderSizePixel=0;fk.Parent=f2 end;local fO=Instance.new("Frame")do fO.Name="button-toggle/split/ad-green|ad-gray"fO.Size=UDim2.new(1,0,0,50)fO.BackgroundTransparency=1;fO.BorderSizePixel=0;fO:SetAttribute("color_variant","ad-gray")fO:SetAttribute("component_type","button-toggle")fO:SetAttribute("sub_type","split")fO.Parent=f2;local fP=Instance.new("Frame")do fP.Name="1"fP.Size=UDim2.new(0.5,0,1,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=fO;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,-8,1,0)fR.Position=UDim2.new(1,0,0,0)fR.AnchorPoint=Vector2.new(1,0)fR.BackgroundColor3=Color3.fromRGB(42,165,68)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fR end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,1,0)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(42,165,68)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fR end end;local fT=Instance.new("Frame")do fT.Name="Left"fT.Size=UDim2.new(0.5,0,1,0)fT.BackgroundColor3=Color3.fromRGB(75,199,85)fT.BorderSizePixel=0;fT.ZIndex=3;fT.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fT end end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("Frame")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(138,217,100)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fU end;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,-4,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(75,199,85)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(0,0,1,0)fS.AnchorPoint=Vector2.new(0,1)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,1,0)fS.AnchorPoint=Vector2.new(1,1)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(138,217,100)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fU end end end;local fP=Instance.new("Frame")do fP.Name="2"fP.Size=UDim2.new(0.5,0,1,0)fP.Position=UDim2.new(1,0,0,0)fP.AnchorPoint=Vector2.new(1,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=fO;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,-8,1,0)fR.Position=UDim2.new(0,0,0,0)fR.BackgroundColor3=Color3.fromRGB(50,50,51)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fR end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,1,0)fS.BackgroundColor3=Color3.fromRGB(50,50,51)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fR end end;local fY=Instance.new("Frame")do fY.Name="Right"fY.Size=UDim2.new(0.5,0,1,0)fY.Position=UDim2.new(1,0,0,0)fY.AnchorPoint=Vector2.new(1,0)fY.BackgroundColor3=Color3.fromRGB(26,26,26)fY.BorderSizePixel=0;fY.ZIndex=3;fY.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fY end end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("CanvasGroup")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(101,104,109)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fU end;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,0,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(68,69,71)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(0,0,1,0)fS.AnchorPoint=Vector2.new(0,1)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.BackgroundColor3=Color3.fromRGB(101,104,109)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fU end end end end;local fZ=Instance.new("Frame")do fZ.Name="button-toggle/double-split/ad-green|ad-gray|ad-gray"fZ.Size=UDim2.new(1,0,0,50)fZ.BackgroundTransparency=1;fZ.BorderSizePixel=0;fZ:SetAttribute("color_variant","ad-gray")fZ:SetAttribute("component_type","button-toggle")fZ:SetAttribute("sub_type","double-split")fZ.Parent=f2;local fP=Instance.new("Frame")do fP.Name="1"fP.Size=UDim2.new(0.333,0,1,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=fZ;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,-8,1,0)fR.Position=UDim2.new(1,0,0,0)fR.AnchorPoint=Vector2.new(1,0)fR.BackgroundColor3=Color3.fromRGB(42,165,68)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fR end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,1,0)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(42,165,68)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fR end end;local fT=Instance.new("Frame")do fT.Name="Left"fT.Size=UDim2.new(0.5,0,1,0)fT.BackgroundColor3=Color3.fromRGB(75,199,85)fT.BorderSizePixel=0;fT.ZIndex=3;fT.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fT end end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("Frame")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(138,217,100)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fU end;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,-4,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(75,199,85)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(0,0,1,0)fS.AnchorPoint=Vector2.new(0,1)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,1,0)fS.AnchorPoint=Vector2.new(1,1)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(138,217,100)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fU end end end;local fP=Instance.new("Frame")do fP.Name="2"fP.Size=UDim2.new(0.333,0,1,0)fP.Position=UDim2.new(0.5,0,0,0)fP.AnchorPoint=Vector2.new(0.5,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=fZ;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,0,1,0)fR.BackgroundColor3=Color3.fromRGB(50,50,51)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("Frame")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(101,104,109)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,0,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(68,69,71)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end end end;local fP=Instance.new("Frame")do fP.Name="3"fP.Size=UDim2.new(0.333,0,1,0)fP.Position=UDim2.new(1,0,0,0)fP.AnchorPoint=Vector2.new(1,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=fZ;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,-8,1,0)fR.Position=UDim2.new(0,0,0,0)fR.BackgroundColor3=Color3.fromRGB(50,50,51)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fR end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,1,0)fS.BackgroundColor3=Color3.fromRGB(50,50,51)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fR end end;local fY=Instance.new("Frame")do fY.Name="Right"fY.Size=UDim2.new(0.5,0,1,0)fY.Position=UDim2.new(1,0,0,0)fY.AnchorPoint=Vector2.new(1,0)fY.BackgroundColor3=Color3.fromRGB(26,26,26)fY.BorderSizePixel=0;fY.ZIndex=3;fY.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fY end end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("CanvasGroup")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(101,104,109)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fU end;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,0,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(68,69,71)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(0,0,1,0)fS.AnchorPoint=Vector2.new(0,1)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.BackgroundColor3=Color3.fromRGB(101,104,109)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fU end end end end;local f_=Instance.new("Frame")do f_.Name="button-toggle/triple-split/ad-green|ad-gray|ad-gray|ad-gray"f_.Size=UDim2.new(1,0,0,50)f_.BackgroundTransparency=1;f_.BorderSizePixel=0;f_:SetAttribute("color_variant","ad-gray")f_:SetAttribute("component_type","button-toggle")f_:SetAttribute("sub_type","triple-split")f_.Parent=f2;local fP=Instance.new("Frame")do fP.Name="1"fP.Size=UDim2.new(0.25,0,1,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=f_;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,-8,1,0)fR.Position=UDim2.new(1,0,0,0)fR.AnchorPoint=Vector2.new(1,0)fR.BackgroundColor3=Color3.fromRGB(42,165,68)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fR end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,1,0)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(42,165,68)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fR end end;local fT=Instance.new("Frame")do fT.Name="Left"fT.Size=UDim2.new(0.5,0,1,0)fT.BackgroundColor3=Color3.fromRGB(75,199,85)fT.BorderSizePixel=0;fT.ZIndex=3;fT.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fT end end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("Frame")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(138,217,100)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fU end;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,-4,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(75,199,85)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(0,0,1,0)fS.AnchorPoint=Vector2.new(0,1)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,1,0)fS.AnchorPoint=Vector2.new(1,1)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(138,217,100)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fU end end end;local fP=Instance.new("Frame")do fP.Name="2"fP.Size=UDim2.new(0.25,0,1,0)fP.Position=UDim2.new(0.25,0,0,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=f_;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,0,1,0)fR.BackgroundColor3=Color3.fromRGB(50,50,51)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("Frame")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(101,104,109)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,0,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(68,69,71)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end end end;local fP=Instance.new("Frame")do fP.Name="3"fP.Size=UDim2.new(0.25,0,1,0)fP.Position=UDim2.new(0.75,0,0,0)fP.AnchorPoint=Vector2.new(1,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=f_;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,0,1,0)fR.BackgroundColor3=Color3.fromRGB(50,50,51)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("Frame")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(101,104,109)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,0,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(68,69,71)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end end end;local fP=Instance.new("Frame")do fP.Name="4"fP.Size=UDim2.new(0.25,0,1,0)fP.Position=UDim2.new(1,0,0,0)fP.AnchorPoint=Vector2.new(1,0)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP.Parent=f_;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,-8,1,0)fR.Position=UDim2.new(0,0,0,0)fR.BackgroundColor3=Color3.fromRGB(50,50,51)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fR end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,1,0)fS.BackgroundColor3=Color3.fromRGB(50,50,51)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fR end end;local fY=Instance.new("Frame")do fY.Name="Right"fY.Size=UDim2.new(0.5,0,1,0)fY.Position=UDim2.new(1,0,0,0)fY.AnchorPoint=Vector2.new(1,0)fY.BackgroundColor3=Color3.fromRGB(26,26,26)fY.BorderSizePixel=0;fY.ZIndex=3;fY.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fY end end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("CanvasGroup")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(101,104,109)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fU end;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,0,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(68,69,71)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(0,0,1,0)fS.AnchorPoint=Vector2.new(0,1)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(68,69,71)fS.BorderSizePixel=0;fS.ZIndex=4;fS.Parent=fV end end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.BackgroundColor3=Color3.fromRGB(101,104,109)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fU end end end end;local fk=Instance.new("ImageLabel")do fk.Name="Divider"fk.Size=UDim2.new(1,0,0,10)fk.Image="rbxassetid://7374834418"fk.ImageTransparency=0.5;fk.ImageColor3=Color3.fromRGB(50,50,51)fk.BackgroundTransparency=1;fk.BorderSizePixel=0;fk.Parent=f2 end;local f4=Instance.new("Frame")do f4.Name="container/two-column"f4.Size=UDim2.new(1,0,0,20)f4.AutomaticSize=Enum.AutomaticSize.Y;f4.BackgroundTransparency=1;f4.BorderSizePixel=0;f4:SetAttribute("component_type","container")f4:SetAttribute("exclude",true)f4:SetAttribute("sub_type","two-column")f4.Parent=f2;local f2=Instance.new("Frame")do f2.Name="1"f2.Size=UDim2.new(0.5,-4,0,20)f2.AutomaticSize=Enum.AutomaticSize.Y;f2.BackgroundTransparency=1;f2.BorderSizePixel=0;f2.Parent=f4;local f3=Instance.new("UIListLayout")do f3.Padding=UDim.new(0,8)f3.SortOrder=Enum.SortOrder.LayoutOrder;f3.Parent=f2 end;local fP=Instance.new("Frame")do fP.Name="button/primary/ad-green"fP.Size=UDim2.new(1,0,0,50)fP.BackgroundTransparency=1;fP.BorderSizePixel=0;fP:SetAttribute("component_type","button")fP:SetAttribute("sub_type","primary")fP:SetAttribute("color_variant","ad-green")fP.Parent=f2;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundTransparency=1;fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=fP;local fR=Instance.new("Frame")do fR.Name="Center"fR.Size=UDim2.new(1,-16,1,0)fR.Position=UDim2.new(0.5,0,0,0)fR.AnchorPoint=Vector2.new(0.5,0)fR.BackgroundColor3=Color3.fromRGB(42,165,68)fR.BorderSizePixel=0;fR.ZIndex=4;fR.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fR end end;local fT=Instance.new("Frame")do fT.Name="Left"fT.Size=UDim2.new(0.5,0,1,0)fT.BackgroundColor3=Color3.fromRGB(75,199,85)fT.BorderSizePixel=0;fT.ZIndex=3;fT.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fT end end;local fY=Instance.new("Frame")do fY.Name="Right"fY.Size=UDim2.new(0.5,0,1,0)fY.Position=UDim2.new(1,0,0,0)fY.AnchorPoint=Vector2.new(1,0)fY.BackgroundColor3=Color3.fromRGB(33,140,52)fY.BorderSizePixel=0;fY.ZIndex=3;fY.Parent=fQ;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fY end end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text=""R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=fP end;local fU=Instance.new("CanvasGroup")do fU.Name="Face"fU.Size=UDim2.new(1,0,1,-12)fU.BackgroundColor3=Color3.fromRGB(138,217,100)fU.BorderSizePixel=0;fU.ZIndex=3;fU.Parent=fP;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fU end;local fV=Instance.new("Frame")do fV.Name="Coloring"fV.Size=UDim2.new(1,-4,1,-4)fV.Position=UDim2.new(1,0,1,0)fV.AnchorPoint=Vector2.new(1,1)fV.BackgroundColor3=Color3.fromRGB(75,199,85)fV.BorderSizePixel=0;fV.ZIndex=4;fV.Parent=fU;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(1,0,0,0)fS.AnchorPoint=Vector2.new(1,0)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fV end;local fS=Instance.new("Frame")do fS.Name="Cornering"fS.Size=UDim2.new(0,10,0,10)fS.Position=UDim2.new(0,0,1,0)fS.AnchorPoint=Vector2.new(0,1)fS.BackgroundColor3=Color3.fromRGB(75,199,85)fS.BorderSizePixel=0;fS.ZIndex=3;fS.Parent=fV end end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=fU;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end end end end;local f5=Instance.new("Frame")do f5.Name="2"f5.Size=UDim2.new(0.5,-4,0,20)f5.Position=UDim2.new(1,0,0,0)f5.AnchorPoint=Vector2.new(1,0)f5.AutomaticSize=Enum.AutomaticSize.Y;f5.BackgroundTransparency=1;f5.BorderSizePixel=0;f5.Parent=f4;local f6=Instance.new("UIListLayout")do f6.Padding=UDim.new(0,8)f6.SortOrder=Enum.SortOrder.LayoutOrder;f6.Parent=f5 end;local g0=Instance.new("Frame")do g0.Name="button/secondary/ad-gray"g0.Size=UDim2.new(1,0,0,50)g0.BackgroundTransparency=1;g0.BorderSizePixel=0;g0:SetAttribute("component_type","button")g0:SetAttribute("sub_type","secondary")g0:SetAttribute("color_variant","ad-green")g0.Parent=f5;local fQ=Instance.new("Frame")do fQ.Name="Backing"fQ.Size=UDim2.new(1,0,0.5,0)fQ.Position=UDim2.new(0,0,1,0)fQ.AnchorPoint=Vector2.new(0,1)fQ.BackgroundColor3=Color3.fromRGB(33,141,53)fQ.BorderSizePixel=0;fQ.ZIndex=2;fQ.Parent=g0;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=fQ end end;local R=Instance.new("TextButton")do R.Name="Interaction"R.Size=UDim2.new(1,0,1,0)R.Position=UDim2.new(0,0,0,0)R.AnchorPoint=Vector2.new(0,0)R.Text="Button"R.BackgroundTransparency=1;R.TextTransparency=1;R.BorderSizePixel=0;R.ZIndex=8;R.Parent=g0 end;local g1=Instance.new("Frame")do g1.Name="Face"g1.Size=UDim2.new(1,0,1,-4)g1.BackgroundColor3=Color3.fromRGB(75,198,84)g1.BorderSizePixel=0;g1.ZIndex=3;g1.Parent=g0;local eD=Instance.new("UICorner")do eD.CornerRadius=UDim.new(0,10)eD.Parent=g1 end;local fW=Instance.new("Frame")do fW.Name="Display"fW.Size=UDim2.new(1,0,1,0)fW.BackgroundTransparency=1;fW.BorderSizePixel=0;fW.ZIndex=6;fW.Parent=g1;local fX=Instance.new("UIListLayout")do fX.Padding=UDim.new(0,8)fX.SortOrder=Enum.SortOrder.LayoutOrder;fX.HorizontalAlignment=Enum.HorizontalAlignment.Center;fX.VerticalAlignment=Enum.VerticalAlignment.Center;fX.FillDirection=Enum.FillDirection.Horizontal;fX.Parent=fW end;local z=Instance.new("ImageLabel")do z.Name="Icon"z.Size=UDim2.new(0,22,0,22)z.Position=UDim2.new(0,0,0,0)z.AnchorPoint=Vector2.new(0.5,0.5)z.Image="rbxassetid://15711543892"z.BackgroundTransparency=1;z.BorderSizePixel=0;z.LayoutOrder=-1;z.ZIndex=7;z.Parent=fW end;local E=Instance.new("TextLabel")do E.Name="Title"E.Size=UDim2.new(0,0,1,0)E.Text="Button"E.AutomaticSize=Enum.AutomaticSize.X;E.TextSize=36;E.Font=Enum.Font.SourceSansBold;E.TextColor3=Color3.fromRGB(255,255,255)E.BackgroundTransparency=1;E.BorderSizePixel=0;E.ZIndex=7;E.Parent=fW end end end end end end end end end;local g2=Instance.new("ImageLabel")do g2.Name="GradientFade"g2.Size=UDim2.new(1,-24,0,35)g2.Position=UDim2.new(0,0,1,0)g2.AnchorPoint=Vector2.new(0,1)g2.Image="rbxassetid://2592959299"g2.ImageColor3=Color3.fromRGB(179,179,179)g2.ZIndex=3;g2.BackgroundTransparency=1;g2.BorderSizePixel=0;g2.Parent=eT end end end;local g3=Instance.new("ImageLabel")do g3.Name="PaperBackingBottom"g3.Size=UDim2.new(0.65,0,0,50)g3.AnchorPoint=Vector2.new(1,0)g3.Position=UDim2.new(1,-12,1,8)g3.Image="rbxassetid://2584785002"g3.ImageColor3=Color3.fromRGB(107,107,107)g3.BorderSizePixel=0;g3.BackgroundTransparency=1;g3.Parent=eC;local g4=Instance.new("ImageLabel")do g4.Name="Stripes"g4.Size=UDim2.new(1,0,1,0)g4.Image="rbxassetid://2584785006"g4.ImageColor3=Color3.fromRGB(50,50,51)g4.BorderSizePixel=0;g4.BackgroundTransparency=1;g4.Parent=g3 end end;local g5=Instance.new("ImageLabel")do g5.Name="PaperBackingTop"g5.Size=UDim2.new(0.65,0,0,50)g5.AnchorPoint=Vector2.new(0,1)g5.Position=UDim2.new(0,12,0,-8)g5.Image="rbxassetid://2584745693"g5.ImageColor3=Color3.fromRGB(107,107,107)g5.BorderSizePixel=0;g5.BackgroundTransparency=1;g5.Parent=eC;local g6=Instance.new("ImageLabel")do g6.Name="Stripes"g6.Size=UDim2.new(1,0,1,0)g6.Image="rbxassetid://2584745695"g6.ImageColor3=Color3.fromRGB(50,50,51)g6.BorderSizePixel=0;g6.BackgroundTransparency=1;g6.Parent=g5 end end;local g7=Instance.new("ImageLabel")do g7.Name="PaperBackingLeft"g7.Size=UDim2.new(0,25,0.5,0)g7.AnchorPoint=Vector2.new(1,1)g7.Position=UDim2.new(0,-8,1,-12)g7.Image="rbxassetid://2584789128"g7.ImageColor3=Color3.fromRGB(107,107,107)g7.BorderSizePixel=0;g7.BackgroundTransparency=1;g7.Parent=eC;local g8=Instance.new("ImageLabel")do g8.Name="Stripes"g8.Size=UDim2.new(1,0,1,0)g8.Image="rbxassetid://2584789121"g8.ImageColor3=Color3.fromRGB(50,50,51)g8.BorderSizePixel=0;g8.BackgroundTransparency=1;g8.Parent=g7 end end;local g9=Instance.new("ImageLabel")do g9.Name="PaperBackingRight"g9.Size=UDim2.new(0,25,0.5,0)g9.AnchorPoint=Vector2.new(0,0)g9.Position=UDim2.new(1,8,0,12)g9.Image="rbxassetid://2584760581"g9.ImageColor3=Color3.fromRGB(107,107,107)g9.BorderSizePixel=0;g9.BackgroundTransparency=1;g9.Parent=eC;local ga=Instance.new("ImageLabel")do ga.Name="Stripes"ga.Size=UDim2.new(1,0,1,0)ga.Image="rbxassetid://2584760580"ga.ImageColor3=Color3.fromRGB(50,50,51)ga.BorderSizePixel=0;ga.BackgroundTransparency=1;ga.Parent=g9 end end;local gb=os.clock()print(string.format("Rendered window in: %.5f seconds",gb-eA))return eB end end;local gc=ez.New()local gd=e2:Init(gc,true)local ge=false;local gf=true;local gg=gd:NewCategory({["category_name"]="Button",["navigate_to_page"]=true,["content"]={[1]=gd:NewSection({}),[2]=gd:NewSection({["content"]={[1]=gd:NewContainer({["sub_type"]="two-column",["columns"]={[1]={["content"]={[1]=gd:NewButton({["text"]="Primary Button"}),[2]=gd:NewButton({["text"]="Disabled Primary Button",["disabled"]=true})}},[2]={["content"]={[1]=gd:NewButton({["text"]="Secondary Button",["sub_type"]="secondary"}),[2]=gd:NewButton({["text"]="Disabled Secondary Button",["disabled"]=true,["sub_type"]="secondary"})}}}})},["toggleable"]=false})}})local gh=gd:NewCategory({["category_name"]="Button Toggle",["content"]={[1]=gd:NewSection({}),[2]=gd:NewSection({["content"]={[1]=gd:NewButtonToggle({["selected_color"]="ad-green",["unselected_color"]="ad-gray",["sub_type"]="split",["initial_selection"]=1,["text"]={[1]="Button1",[2]="Button2"}}),[2]=gd:NewButtonToggle({["selected_color"]="ad-blue",["unselected_color"]="ad-gray",["sub_type"]="double-split",["initial_selection"]=2,["text"]={[1]="Button1",[2]="Button2",[3]="Button3"}}),[3]=gd:NewButtonToggle({["selected_color"]="ad-red",["unselected_color"]="ad-gray",["sub_type"]="triple-split",["initial_selection"]=3,["text"]={[1]="Button1",[2]="Button2",[3]="Button3",[4]="Button4"}}),[4]=gd:NewButtonToggle({["selected_color"]="ad-green",["unselected_color"]="ad-gray",["sub_type"]="split",["initial_selection"]=1,["disabled"]=true,["text"]={[1]="Button1",[2]="Button2"}})},["toggleable"]=false})}})local gi=gd:NewCategory({["category_name"]="Dropdown",["content"]={[1]=gd:NewSection({}),[2]=gd:NewSection({["content"]={[1]=gd:NewDropdown({["text"]="Dropdown Example",["description"]="Example of a standard dropdown with options",["color_variant"]="ad-green",["options"]={[1]={["text"]="Common",["value"]="common"},[2]={["text"]="Uncommon",["value"]="uncommon"},[3]={["text"]="Rare",["value"]="rare"},[4]={["text"]="Ultra-rare",["value"]="ultra-rare"},[5]={["text"]="Legendary",["value"]="legendary"}},["initial_value"]="common"}),[2]=gd:NewDropdown({["text"]="Dropdown (Generator)",["description"]="Example of a dropdown with options generated using `options_generator`",["options_generator"]=function(self)local gj={}for aR=1,10 do table.insert(gj,{["text"]="Option "..tostring(aR),["value"]="val"..tostring(aR)})end;return gj end}),[3]=gd:NewDropdown({["text"]="Dropdown (Disabled)",["description"]="Example of a disabled dropdown",["color_variant"]="ad-green",["options"]={[1]={["text"]="Option 1",["value"]="opt1"},[2]={["text"]="Option 2",["value"]="opt2"}},["disabled"]=true}),[4]=gd:NewDropdown({["text"]="Dropdown (Empty)",["description"]="Example of an empty dropdown",["color_variant"]="ad-green",["options"]={}})},["toggleable"]=false})}})local gk=gd:NewCategory({["category_name"]="Slider",["content"]={[1]=gd:NewSection({}),[2]=gd:NewSection({["content"]={[1]=gd:NewSlider({["text"]="Slider Example",["description"]="Example of a basic slider from 0 to 100",["min"]=0,["max"]=100,["initial_value"]=50,["color_variant"]="ad-green"}),[2]=gd:NewSlider({["text"]="Blue Slider",["description"]="Example of a blue slider from 10 to 20",["min"]=10,["max"]=20,["initial_value"]=15,["color_variant"]="ad-blue"}),[3]=gd:NewSlider({["text"]="Disabled Slider",["description"]="Example of a disabled slider",["min"]=0,["max"]=100,["initial_value"]=50,["color_variant"]="ad-green",["disabled"]=true})},["toggleable"]=false})}})local gl=gd:NewCategory({["category_name"]="Toggle",["content"]={[1]=gd:NewSection({}),[2]=gd:NewSection({["content"]={[1]=gd:NewToggle({["text"]="Basic Toggle",["description"]="A simple toggle switch",["color_variant"]="ad-gray",["initial_value"]=true}),[2]=gd:NewToggle({["text"]="Blue Toggle",["description"]="A blue toggle switch",["color_variant"]="ad-blue",["initial_value"]=true}),[3]=gd:NewToggle({["text"]="Disabled Toggle",["description"]="A disabled toggle",["color_variant"]="ad-green",["disabled"]=true})},["toggleable"]=false})}})local gm=gd:NewCategory({["category_name"]="Input",["content"]={[1]=gd:NewSection({}),[2]=gd:NewSection({["content"]={[1]=gd:NewInput({["text"]="Text Input",["description"]="Example of a text input",["color_variant"]="ad-green"}),[2]=gd:NewInput({["text"]="Blue Input",["description"]="Example of a blue input",["color_variant"]="ad-blue"}),[3]=gd:NewInput({["text"]="Disabled Input",["description"]="Example of a disabled input",["color_variant"]="ad-green",["disabled"]=true})},["toggleable"]=false})}})if gf then return end;local gn=gd:NewCategory({["category_name"]="Dropdown Test",["navigate_to_page"]=true,["content"]={[1]=gd:NewSection({["content"]={[1]=gd:NewHeader({["text"]="Dropdown Testing",["color_variant"]="ad-gray",["toggleable"]=true}),[2]=gd:NewDivider({["color_variant"]="ad-gray"}),[3]=gd:NewDropdown({["text"]="Test Dropdown",["description"]="A dropdown for testing options",["color_variant"]="ad-gray",["options"]={[1]={["text"]="Option 1",["value"]="opt1"},[2]={["text"]="Option 2",["value"]="opt2"},[3]={["text"]="Option 3",["value"]="opt3",["disabled"]=true},[4]={["text"]="Option 4",["value"]="opt4"}},["initial_value"]="opt1"}),[4]=gd:NewDropdown({["text"]="Test Dropdown 2",["description"]="A dropdown for testing option_generator",["options_generator"]=function(self)local b_={}for aR=1,100 do table.insert(b_,{["text"]="Item "..tostring(aR),["value"]="item_val_"..tostring(aR)})end;return b_ end,["callback"]=function(self)print("Selected:",self.CurrentValue)end}),[5]=gd:NewDropdown({["text"]="Test Dropdown 3",["description"]="A dropdown for testing empty options",["options"]={}})}})}})local go=gd:NewCategory({["category_name"]="All Components",["content"]={[1]=gd:NewSection({["content"]={[1]=gd:NewHeader({["text"]="All Components",["toggleable"]=true}),[2]=gd:NewDivider({}),[3]=gd:NewDropdown({["text"]="Test Dropdown",["description"]="A dropdown for testing options",["options"]={[1]={["text"]="Option 1",["value"]="opt1"},[2]={["text"]="Option 2",["value"]="opt2"},[3]={["text"]="Option 3",["value"]="opt3",["disabled"]=true},[4]={["text"]="Option 4",["value"]="opt4"}}}),[4]=gd:NewToggle({["text"]="Test Toggle",["description"]="A toggle for testing"}),[5]=gd:NewInput({["text"]="Test Input",["description"]="A input for testing"}),[6]=gd:NewButton({["text"]="Test Button",["description"]="A button for testing"}),[7]=gd:NewSlider({["text"]="Test Slider",["description"]="A slider for testing"}),[8]=gd:NewButtonToggle({["text"]="Test Button Toggle",["description"]="A button toggle for testing"}),[9]=gd:NewButtonToggle({["text"]="Test Button Toggle 2",["description"]="A button toggle for testing",["sub_type"]="double-split"}),[10]=gd:NewButtonToggle({["text"]="Test Button Toggle 3",["description"]="A button toggle for testing",["sub_type"]="triple-split"}),[11]=gd:NewParagraph({["text"]="Test Paragraph",["description"]="A paragraph for testing"}),[12]=gd:NewSubHeader({["text"]="Test Sub Header",["description"]="A sub header for testing"}),[13]=gd:NewFooter({["text"]="Test Footer",["description"]="A footer for testing"})}})}})if ge then return end;local gp=gd:NewCategory({["category_name"]="Farming",["content"]={[1]=gd:NewSection({["content"]={[1]=gd:NewHeader({["text"]="Pet farm",["toggleable"]=true,["color_variant"]="ad-gray"}),[2]=gd:NewDivider({["color_variant"]="ad-gray"}),[3]=gd:NewToggle({["text"]="Create neons",["color_variant"]="ad-gray"}),[4]=gd:NewToggle({["text"]="Create mega neons",["color_variant"]="ad-gray"}),[5]=gd:NewContainer({["sub_type"]="two-column",["columns"]={[1]={["content"]={[1]=gd:NewToggle({["text"]="Farm by rarity",["color_variant"]="ad-gray"}),[2]=gd:NewToggle({["text"]="Farm by species",["color_variant"]="ad-gray"})}},[2]={["content"]={[1]=gd:NewDropdown({["text"]="Rarity to farm"}),[2]=gd:NewDropdown({["text"]="Species to farm"})}}}})}}),[2]=gd:NewSection({["content"]={[1]=gd:NewHeader({["text"]="Egg farm",["toggleable"]=true,["color_variant"]="ad-gray"}),[2]=gd:NewDivider({["color_variant"]="ad-gray"}),[3]=gd:NewContainer({["sub_type"]="two-column",["columns"]={[1]={["content"]={[1]=gd:NewToggle({["text"]="Buy eggs on hatch",["color_variant"]="ad-gray"}),[2]=gd:NewToggle({["text"]="Farm hatched species",["color_variant"]="ad-gray"}),[3]=gd:NewToggle({["text"]="Farm hatched rarity",["color_variant"]="ad-gray"})}},[2]={["content"]={[1]=gd:NewDropdown({["text"]="Eggs to buy"}),[2]=gd:NewDropdown({["text"]="Species to farm"}),[3]=gd:NewDropdown({["text"]="Rarity to farm"})}}}})}}),[3]=gd:NewSection({["content"]={[1]=gd:NewHeader({["text"]="Potion farm",["toggleable"]=true,["color_variant"]="ad-gray"}),[2]=gd:NewDivider({["color_variant"]="ad-gray"}),[3]=gd:NewContainer({["sub_type"]="primary",["content"]={[1]=gd:NewDropdown({["text"]="Potion pet"})}})}}),[4]=gd:NewSection({["content"]={[1]=gd:NewToggle({["text"]="Cash farm",["color_variant"]="ad-gray"}),[2]=gd:NewToggle({["text"]="Baby farm",["color_variant"]="ad-gray"}),[3]=gd:NewToggle({["text"]="Claim quests",["color_variant"]="ad-gray"}),[4]=gd:NewToggle({["text"]="Claim star rewards",["color_variant"]="ad-gray"})}})}})local gq=gd:NewCategory({["category_name"]="Automation",["content"]={[1]=gd:NewSection({["content"]={[1]=gd:NewHeader({["text"]="Auto trade",["toggleable"]=true,["color_variant"]="ad-gray"}),[2]=gd:NewDivider({["color_variant"]="ad-gray"}),[3]=gd:NewContainer({["sub_type"]="two-column",["columns"]={[1]={["content"]={[1]=gd:NewToggle({["text"]="Auto trade categories",["color_variant"]="ad-gray"}),[2]=gd:NewToggle({["text"]="Auto trade properties",["color_variant"]="ad-gray"}),[3]=gd:NewToggle({["text"]="Auto trade rarity",["color_variant"]="ad-gray"})}},[2]={["content"]={[1]=gd:NewDropdown({["text"]="Categories to trade"}),[2]=gd:NewDropdown({["text"]="Properties to trade"}),[3]=gd:NewDropdown({["text"]="Rarity to trade"})}}}}),[4]=gd:NewInput({["text"]="Player to trade"})}}),[2]=gd:NewSection({["content"]={[1]=gd:NewHeader({["text"]="Auto grow",["toggleable"]=true,["color_variant"]="ad-gray"}),[2]=gd:NewDivider({["color_variant"]="ad-gray"}),[3]=gd:NewContainer({["sub_type"]="two-column",["columns"]={[1]={["content"]={[1]=gd:NewToggle({["text"]="Auto grow pet",["color_variant"]="ad-gray"}),[2]=gd:NewToggle({["text"]="Auto grow rarity",["color_variant"]="ad-gray"}),[3]=gd:NewToggle({["text"]="Auto grow species",["color_variant"]="ad-gray"})}},[2]={["content"]={[1]=gd:NewDropdown({["text"]="Pet to grow"}),[2]=gd:NewDropdown({["text"]="Rarity to grow"}),[3]=gd:NewDropdown({["text"]="Species to grow"})}}}})}}),[3]=gd:NewSection({["content"]={[1]=gd:NewHeader({["text"]="Auto open",["toggleable"]=true,["color_variant"]="ad-gray"}),[2]=gd:NewDivider({["color_variant"]="ad-gray"}),[3]=gd:NewContainer({["sub_type"]="two-column",["columns"]={[1]={["content"]={[1]=gd:NewToggle({["text"]="Auto open rarity",["color_variant"]="ad-gray"}),[2]=gd:NewToggle({["text"]="Auto open gift type",["color_variant"]="ad-gray"})}},[2]={["content"]={[1]=gd:NewDropdown({["text"]="Rarity to open"}),[2]=gd:NewDropdown({["text"]="Gift type to open"})}}}})}})}})
